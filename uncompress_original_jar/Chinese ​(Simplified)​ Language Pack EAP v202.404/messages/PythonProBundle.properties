appengine.sdk.version.validation.error.message=无法确定 SDK 版本
chameleon.file.display.name=Chameleon 模板文件
flask.create.project=创建 Flask 项目
flask.version.required=需要 Flask >\= {0}
flask.create.project.error=创建 Flask 应用程序时出错：{0}
flask.integration=Flask 集成\:
flask.name=Flask
flask.configurable.name=Flask
flask.project.description=使用 <a href\="http\://flask.pocoo.org">Flask</a> 微框架创建新的 Python Web 应用程序
flask.project.name=Flask 项目
flask.target.type=目标类型：
flask.target=目标\:
flask.app=应用程序\:
flask.additional.options=其他选项：
flask.console.tab.name=Flask 控制台
jinja2.exception.breakpoint=Jinja2 异常断点
jinja2.file.type.name=Jinja 2 模板
jinja2.line.breakpoint=Jinja2 行断点
maco.unclosed.comment=未闭合注释
maco.unresolved.template=未解析模板引用
mako.colors.attribute.name=属性名
mako.colors.attribute.value=属性值
mako.colors.comment=注释
mako.colors.control.structure.name=控制结构名称
mako.colors.name=Mako 模板
mako.colors.substitution.expression=替换表达式
mako.colors.tag=标签
mako.colors.tag.name=标签名称
mako.display.name=Mako 模板文件
mako.import.star.not.supported=Mako 模板中不支持 'import *'
mako.inspection.group.name=Mako
mako.argument.list.inspection.name=错误的调用参数
marker.python.coverage.accessible.name=标记：python coverage
cookiecutter.installation.notification=Cookiecutter 将安装在选定的解释器上以初始化项目
pyramid.new.project.dialog.backend=后端\:
pyramid.new.project.dialog.project.name=项目名称：
pyramid.new.project.dialog.template.language=模板语言\:
pyramid.create.project=创建 Pyramid 项目
pyramid.create.project.error=创建 Pyramid 项目出错：{0}
pyramid.create.project.failed.to.initialize=无法初始化项目。
pyramid.create.project.invalid.interpreter=解释器无效。
pyramid.create.project.failed.to.create.temp.dir=无法创建临时目录。
pyramid.project.name.validation.error.message=项目名称应仅包含字母、数字和下划线
pyramid.installing.progress=正在安装 Pyramid...
pyramid.installing.title=正在安装 Pyramid
pyramid.name=Pyramid
pyramid.project.not.installed.for.development=未安装项目来进行开发
pyramid.run.setup.py.develop.fix=运行 `setup.py develop`
pyramid.server.description=Pyramid 服务器
pyramid.server.display.name=Pyramid 服务器
pyramid.setup.inspection.name=未安装项目来进行开发
python.coverage.branch=分支覆盖
python.coverage.cant.read.data=无法读取覆盖率数据。
python.coverage.error=错误
python.coverage.error.generating.report=生成报告出错
python.coverage.exit.code=退出代码：{0}
python.coverage.generating.report=正在生成覆盖率报告…
python.coverage.highlight=高亮
python.coverage.highlight.description=高亮
python.coverage.module.not.found=找到包含有效 Python sdk 的模块
python.coverage.report.generated=已生成的报告
python.coverage.report.generated.in={0} 中生成的报告
python.coverage.results.not.found=找不到覆盖率结果。
python.coverage.runner.error=错误
python.coverage.title=Python 覆盖
python.coverage.use.bundled=使用捆绑的 coverage.py
python.debug.autodetect.link=<html><a href\="/">自动检测</a></html>
python.debug.autodetect.sentence=\ 路径映射设置
python.debug.download.link=<html><a href\="/">下载</a></html>
python.debug.download.sources.sentence=\ 来自远程主机的源码
python.debug.downloading.sources=正在下载源码...
python.debug.edit.settings.link=<html><a href\="/">编辑设置</a></html>
python.debug.edit.settings.sentence=\ 远程调试配置中的路径映射
python.debug.host.name.tooltip=IDE 主机名，可从远程主机访问该主机名。
python.debug.path.mappings=路径映射
python.debug.port.tooltip=调试服务器的本地端口（如果想要自动设置，则设为 0 或留空）。
python.debug.remember.for.session=为调试会话记住
python.debug.remote.description=远程调试
python.debug.remote.name=PyRemoteDebug
python.debug.text.pane.text=<html><head></head><body></body></html>
python.duplicates.=函数 (&U)
python.duplicates.class.fields=类字段 (&F)
python.duplicates.class.methods=类方法 (&M)
python.duplicates.dont.show.less.than=不显示包含小于的重复项
python.duplicates.literals=字符串和数字文字 (&L)
python.duplicates.local.vars=局部变量 (&V)
python.duplicates.tokens=令牌
python.duplicates.tokens.title=要匿名的令牌：
python.edit.path.mappings=编辑路径映射
python.pyramid.additional.options=其他选项：
python.pyramid.config.file=配置文件：
python.pyramid.run.browser=运行浏览器：
python.pyramid.scaffold=基架
python.pyramid.tests.path=包含待执行测试的文件或目录的路径
python.remote.file.path=远程文件路径：
python.select.local.file.for.remote=为远程主机中的文件选择本地文件
python.template.configure.dirs=配置模板目录
python.template.file.types=模板文件类型
python.template.folder=模板文件夹
python.template.installing.progress=正在安装 {0}
python.template.installing.title=正在安装 {0}...
python.template.languages=模板语言
python.template.languages.python=Python 模板语言
python.template.unmark.as.template.folder=取消标记为模板文件夹
python.web2py.app.name=应用程序文件夹：
python.web2py.file.display.name=Web2Py 模板文件
python.web2py.error.empty.tag=web2py 标签为空。
python.web2py.select.source.folder.description=选择 Web2Py 源文件夹
python.web2py.select.source.folder.title=选择 Web2Py 源文件夹
python.web2py.use.local=使用本地 Web2Py
python.web2py.project.creation.failed=项目创建失败
python.web2py.cant.download=无法下载 {0}
python.web2py.failed.to.create.application=无法创建应用程序 {0}
python.web2py.error.creating.project=创建项目出错
python.web2py.name=Web2Py
python.web2py.referenced.message=从 {0} 引用
python.web2py.goto.template.message=转到模板
python.web2py.download.progress.title=正在下载 Web2Py
python.web2py.unzip.progress.title=Web2Py 存档解压缩
python.web2py.wrong.project.name.validation.error.message=项目名称应仅包含字母、数字和下划线
python.web2py.empty.source.folder.validation.error.message=Web2Py 源文件夹为空
python.web2py.select.source.folder.validation.error.message=选择有效的 Web2Py 源文件夹
python.web2py.copy.to.itself.validation.error.message=无法将目录复制到自身
python.web2py.app.name.validation.error.message=应用名称应仅包含字母、数字和下划线
python.web2py.download.source.validation.error.message=将从 http\://web2py.com/ 下载 Web2Py
python.web2py.lib.dir.node.presentable.text=Web2py 库
python.profiler.view.call.graph.tab.title=调用图
python.profiler.view.call.tree.title=调用树
python.profiler.view.statistics.tab.title=统计
cython.file.type.name=Cython
python.interpreter.path=Python 解释器路径：
mako.element.is.not.closed=mako 模板的元素 {0} 未关闭
mako.closing.tag.is.not.done=未关闭 mako 模板标签
mako.closing.tag.name.missing=缺少关闭 mako 模板标签名称
mako.end.of.substitution.expected=预期为代换结束
python.wsl.error.no.installed.distributions=找不到安装的 WSL 分发版。确保安装了 WSL 分发版。
python.wsl.add.path.dialog.title=添加路径
action.MarkTemplateDirectory.text=模板目录

python.resources.name=资源
python.resources.description=资源文件夹

python.templates.name=模板
python.templates.description=模板文件夹
python.google.app.engine.model.dependency.diagram=Google App Engine 模型依赖关系图
python.django.model.dependency.diagram=Django 模型依赖关系图
python.class.diagram=Python 类图
python.sqlalchemy.model.dependency.diagram=SQLAlchemy 模型依赖关系图
python.flask.run.server=通过 'flask run' 运行服务器
python.flask.run.server.name=Flask 服务器
python.django.tests=Django 测试
python.copying.remote.files=正在复制远程文件…
python.pyramid.select.configuration.file=选择配置文件\:
python.coverage.report.no.generated.in=未在 {0} 中生成报告
python.package.installation.failed.title=安装 {0} 失败

action.RescanPythonModulesAndPackages.text=重新扫描可用的 Python 模块和包
action.RescanPythonModulesAndPackages.description=重新扫描可用的 Python 解释器模块和包
python.interpreter.rescanning.python.modules.and.packages=正在重新扫描 Python 模块和包
python.scientific.show.plots.in.toolwindow=在工具窗口中显示绘图
configurable.PyScientificConfigurable.display.name=Python Scientific
