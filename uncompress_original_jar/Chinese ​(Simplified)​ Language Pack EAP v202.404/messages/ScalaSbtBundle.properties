### META-INF/SBT.xml
displayname.sbt=sbt
displayname.replace.project.with.project.in=将 Project() 替换为 project.in()

### org/jetbrains/sbt/Sbt.scala
sbt.build.module.description=sbt 模块用于标记内容根，并为 sbt 项目定义提供库
sbt.project.long.description=由 sbt 支持的项目
sbt.project.description=sbt 项目
sbt.build.module.name=sbt 模块

### org/jetbrains/sbt/annotator/SbtAnnotator.scala
sbt.annotation.blankLineRequired=在 0.13.7 版(您的版本是 {0})以前的 *.sbt 文件中，需要用空行来分隔表达式
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt 文件只能包含表达式
sbt.annotation.expectedExpressionType=sbt 文件中预期的表达式类型为 Def.SettingsDefinition
sbt.annotation.expectedExpressionTypeSbt0136=sbt 文件中预期的表达式类型为 DslEntry
sbt.annotation.expressionMustConform=表达式类型 {0} 必须符合 sbt 文件中的 Def.SettingsDefinition
sbt.annotation.expressionMustConformSbt0136=表达式类型 {0} 必须符合 sbt 文件中的 DslEntry

### org/jetbrains/sbt/annotator/SbtDependencyAnnotator.scala
sbt.annotation.unresolvedDependency=未知构件。未解析或无索引

### org/jetbrains/sbt/annotator/dependency/AddSbtDependencyFix.scala
sbt.add.sbt.dependency=添加 sbt 依赖项...
sbt.searching.for.artifacts=正在搜索构件...
sbt.finding.sbt.dependency.declarations=正在查找 sbt 依赖项声明...
sbt.updating.dependency.index=正在更新依赖项索引...
sbt.no.dependencies.found.for.given.import=找不到给定 import 的依赖项
sbt.no.places.to.add.a.dependency.found=找不到要添加依赖项的位置
sbt.add.sbt.dependencies=添加 sbt 依赖项

### org/jetbrains/sbt/annotator/dependency/ui/SbtArtifactChooseDependencyStep.scala
sbt.artifact.search=sbt 构件搜索

### org/jetbrains/sbt/annotator/dependency/ui/SbtPossiblePlacesPanel.scala
sbt.could.not.generate.dependency.string=// 无法生成依赖项字符串，请报告此问题

### org/jetbrains/sbt/annotator/dependency/ui/SbtPossiblePlacesStep.scala
sbt.place.to.add.dependency=要添加依赖项的位置
sbt.select.a.place.from.the.list.above.to.enable.this.preview=// 从上面的列表中选择一个位置以启用此预览

### org/jetbrains/sbt/annotator/quickfix/SbtRefreshProjectQuickFix.scala
sbt.fix.refreshProject=刷新项目

### org/jetbrains/sbt/annotator/quickfix/SbtUpdateResolverIndexesQuickFix.scala
sbt.fix.updateIndexes=更新项目解析器的索引

### org/jetbrains/sbt/codeInspection/SbtReplaceProjectWithProjectInInspection.scala
sbt.inspection.projectIn.name=将 Project() 替换为 project.in()

### org/jetbrains/sbt/language/SbtProjectService.scala
sbt.notification.will.be.disabled.for.all.projects=所有项目均将禁用通知\n\
设置 | 外观与行为 | 通知 | {0}\n\
可用于配置通知。
sbt.unindexed.maven.repositories.sbt.detection=无索引的 Maven 存储库 sbt 检测
sbt.disable.notification=禁用通知
sbt.unindexed.maven.repositories.for.sbt.detection=用于 sbt 检测的无索引 Maven 存储库
sbt.unindexed.maven.repositories.found=<b> {0} 找到无索引的 Maven 存储库</b>
sbt.unindexed.maven.repositories.found.message=如果要使用依赖项补全，请单击<b><a href\="\#open">此处</a></b>，选择所需的存储库，然后按“更新”按钮。<a href\="\#disable">禁用...</a>

### org/jetbrains/sbt/project/SbtExternalSystemManager.scala
sbt.import.noCustomJvmFound=无法确定所选 JDK 中的 Java 虚拟机可执行文件
sbt.import.noProjectJvmFound=无法确定当前项目 SDK 中的 Java 虚拟机可执行文件

### org/jetbrains/sbt/project/SbtNotificationListener.scala
sbt.project.import=sbt 项目导入

### org/jetbrains/sbt/project/SbtProjectResolver.scala
sbt.import.to.intellij.project.model=导入到 IntelliJ 项目模型
sbt.unknown.cause=未知原因
sbt.import.cancelled=sbt 导入已取消\: {0}
sbt.launcher.not.found=在 {0} 中找不到 sbt 启动器
sbt.sincesbtversion.required=需要 sbt {0}+。请更新项目 build.properties。
sbt.import.extracting.structure.failed=提取结构失败

### org/jetbrains/sbt/project/SbtViewContributor.scala
sbt.tasks.defined.in.this.project=此项目中定义的 sbt 任务
sbt.tasks=sbt 任务
sbt.settings.defined.in.this.project=此项目中定义的 sbt 设置
sbt.settings=sbt 设置
sbt.named.sbt.commands.defined.in.this.project=此项目中定义的已命名的 sbt 命令
sbt.commands=sbt 命令

### org/jetbrains/sbt/project/data/service/ModuleExtDataService.scala
sbt.notificationGroupTitle=sbt 导入
sbt.notificationGroupName=sbt
sbt.dataService.scalaLibraryIsNotFound=找不到模块 {1} 的项目 Scala 库 {0}

### org/jetbrains/sbt/project/modifier/BuildFileModifier.scala
sbt.build.file.modification=sbt 构建文件修改

### org/jetbrains/sbt/project/modifier/ui/BuildFileModifiedStatus.java
sbt.build.modified.detected=已检测
sbt.build.modified.automatically=已自动修改
sbt.build.modified.manually=已手动修改
sbt.build.modified.automatically.and.fixed.manually=自动修改并手动修复
sbt.build.modified.unexpected.file.status=异常的构建文件状态\: {0}

### org/jetbrains/sbt/project/modifier/ui/ChangesConfirmationDialog.scala
sbt.build.file.changes=sbt 构建文件更改

### org/jetbrains/sbt/project/module/SbtModuleSettingsEditor.scala
sbt.settings.sbtModuleSettings=sbt
sbt.settings.sbtVersionNotDetected=未检测
sbt.settings.noImplicitImportsFound=找不到隐式 import
sbt.settings.resolvers.url=URL
sbt.settings.resolvers.name=名称
sbt.settings.resolvers.updated=已更新
sbt.settings.resolvers.neverUpdated=从不
sbt.settings.resolvers.mavenUnavailable=禁用 Maven 插件

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.form
sbt.settings.sbtVersionInModule=sbt 版本
sbt.settings.implicitImports=隐式 import
sbt.settings.resolvers=解析器
sbt.settings.resolvers.update=更新

### org/jetbrains/sbt/project/settings/SbtExtraControls.form
sbt.settings.useShell=用于\:
sbt.settings.download=下载\:
sbt.settings.shell.title=sbt shell

### org/jetbrains/sbt/project/settings/SbtExtraControlsEx.scala
sbt.settings.useShellForImport=项目重新加载
sbt.settings.useShellForBuild=内部版本
sbt.settings.remoteDebug=启用调试
sbt.settings.allowSbtVersionOverride=允许覆盖 sbt 版本
sbt.settings.resolveClassifiers=库源
sbt.settings.resolveSbtClassifiers=sbt 源
sbt.settings.resolveClassifiers.tooltip=从 sbt 重新加载项目时下载项目库依赖项的源
sbt.settings.resolveSbtClassifiers.tooltip=从 sbt 重新加载项目时下载 sbt 和 sbt 插件的源
sbt.settings.useShellForImport.tooltip=项目从 sbt shell 而不是新的 sbt 进程中重新加载。这样可以减少重新加载时间，但需要 sbt shell 留在存储区
sbt.settings.useShellForBuild.tooltip=在 sbt shell 中构建项目。推荐用于 sbt 构建配置，它会导致在 IntelliJ IDEA 编译器中的编译工作无法正常进行
sbt.settings.remoteDebug.tooltip=如果 sbt 兼容版本比项目 build.properties 中配置的版本新，则使用最新兼容版本的 sbt 运行 sbt shell。允许 sbt shell 集成利用较新的功能和修复
sbt.settings.allowSbtVersionOverride.tooltip=以可调试的进程启动 sbt shell。允许调试 sbt 插件代码和测试在 sbt shell 中运行

### org/jetbrains/sbt/project/settings/SbtProjectSettingsControl.scala
sbt.settings.project.jdk="项目 JDK\:"

### org/jetbrains/sbt/project/sources/SharedSourcesModuleType.scala
sbt.shared.sources.module=共享源模块
sbt.shared.source.module.description=在编译期间，某个共享源模块的依赖项混入模块源而不是模块输出中

### org/jetbrains/sbt/project/structure/SbtException.scala
sbt.import.error=导入 sbt 项目时出错\: <br/><pre>{0}</pre>
sbt.import.unresolvedDependencies=未解析额依赖项\: <ul>{0}</ul>参见 <a href\="{1}">{1}</a> 中的完整日志

### org/jetbrains/sbt/project/structure/SbtStructureDump.scala
sbt.extracting.project.structure.from.sbt.shell=从 sbt shell 提取项目结构
sbt.project.structure.extracted=已提取项目结构
sbt.import.errors.project.reload.aborted=发生导入错误，已中止项目重新加载
sbt.extracting.project.structure.from.sbt=从 sbt 提取项目结构
sbt.task.failed.see.log.for.details=sbt 任务失败，请参阅日志以了解详细信息
sbt.events=事件
sbt.task.canceled=task canceled

### org/jetbrains/sbt/project/template/DottyProjectTemplatesFactory.scala
project.template.name.dotty.experimental=Dotty (实验性)
project.template.description.dotty=最小 Dotty (Scala 3) 项目 <br>IntelliJ IDEA 中的 Scala 3 支持处于实验性阶段，因为 Scala 3 本身尚未稳定。

### org/jetbrains/sbt/project/template/SbtModuleBuilder.scala
sbt.settings.sbt=sbt(&S)\:
sbt.settings.scala=Scala(&C)\:
sbt.settings.sources=源
sbt.download.scala.standard.library.sources=下载 Scala 标准库源(可用于编辑源代码)
sbt.download.sbt.sources=下载 sbt 源(可用于编辑项目定义)
scala.version.requires.library.version=Scala {0} 需要 {1} {2}
wrong.library.version={0} 版本错误

### org/jetbrains/sbt/project/template/SbtProjectTemplate.scala
sbt.based.scala.project.recommended=基于 sbt 的 Scala 项目(推荐)

### org/jetbrains/sbt/project/template/techhub/TechHubDownloadUtil.scala
sbt.techhub.downloading.location=下载中{0}
sbt.techhub.no.response.status.from.connection.to.url={0} 连接无响应状态
sbt.techhub.response.to.connection.to.url.was.status={0} 连接的响应为 ''{1}''

### org/jetbrains/sbt/project/template/techhub/TechHubModuleBuilder.scala
downloading.list.of.templates=正在下载模板列表…
sbt.project.name.must.be.valid.scala.identifier=sbt 项目名称必须为有效的 Scala 标识符
select.template=选择模板
downloading.template=正在下载模板…

### org/jetbrains/sbt/project/template/techhub/TechHubProjectTemplate.scala
sbt.techhub.lightbend.project.starter=Lightbend 项目启动器
sbt.techhub.sbt.based.project.from.a.lightbend.tech.hub.template=Lightbend Tech Hub 模板中基于 sbt 的项目

### org/jetbrains/sbt/resolvers/SbtIndexesManager.scala
sbt.resolverIndexer.indexDirIsCorruptedCantBeRemoved={0} 中的 sbt 存储库索引已损坏，但无法移除。\n\
请手动移除并重新索引 sbt 存储库
title.resolver.indexer=解析器的索引器
title.updating.indices=正在更新索引...
indicator.updating.name=正在更新\:{0}
indicator.force.rebuilding.dependency.index=强制重建依赖项索引

### org/jetbrains/sbt/resolvers/SbtResolver.scala
sbt.local.cache=本地缓存

### org/jetbrains/sbt/resolvers/exceptions.scala
sbt.resolverIndexer.cantCreateIndexDir=无法创建索引目录\: {0}
sbt.resolverIndexer.indexVersionMismatch=索引版本与该最新版本不同\: {0} 
sbt.resolverIndexer.invalidRepository=存储库不存在或无效\: {0}
sbt.resolverIndexer.remoteRepositoryHasNotBeenIndexed=尚未对远程存储库建立索引\: {0}\n\
{1}
sbt.resolverIndexer.indexFileIsCorrupted={0} 中的 sbt 存储库索引已损坏。\n\
请移除此文件并重新索引 sbt 存储库

### org/jetbrains/sbt/resolvers/indexes/IvyIndex.scala
sbt.resolverIndexer.progress.saving=保存

### org/jetbrains/sbt/runner/SbtConfigurationType.scala
sbt.runner.displayName=sbt 任务
sbt.runner.description=运行 sbt 任务

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.form
sbt.runner.form.tasks=任务：
sbt.runner.form.vmParameters=虚拟机参数\:
sbt.runner.form.environmentVariables=环境变量：
sbt.runner.form.tasksEditorTitle=任务
sbt.runner.form.vmParametersEditorTitle=虚拟机参数
sbt.runner.form.use.sbt.shell=使用 sbt shell
sbt.runner.form.working.directory=工作目录\:

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.java
sbt.runner.choose.working.directory=选择工作目录

### org/jetbrains/sbt/settings/SbtSettingsPane.form
sbt.settings.jvm=JVM
sbt.settings.custom.launcher=自定义(&U)
sbt.settings.maxHeapSize=最大堆大小 (MB)
sbt.settings.vmParams=虚拟机参数
sbt.settings.sbtLauncher=启动器 (sbt-launch.jar)
sbt.settings.bundled=&已捆绑

### org/jetbrains/sbt/settings/SbtSettingsPane.java
sbt.settings.choose.custom.launcher=选择自定义启动器
sbt.settings.choose.sbt.launch.jar=选择 sbt-launch.jar

### org/jetbrains/sbt/shell/SbtProcessManager.scala
sbt.shell.disable.version.override=禁用版本覆盖
sbt.shell.update.sbt.version=更新 sbt 版本
sbt.shell.configure.sbt.jvm=配置 sbt JVM(&C)
sbt.shell.configure.project.jdk=配置项目 JDK(&C)
sbt.shell.started.sbt.shell.with.sbt.version=已使用 sbt 版本 {0} 而不是项目配置的 {1} 启动 sbt shell。
sbt.shell.no.jre.found.at.path=在路径 {0} 中找不到 JRE。改用项目 JDK。
sbt.shell.no.project.jdk.configured=未配置项目 JDK，但要运行 sbt shell 就必须配置项目 JDK。
sbt.shell.inject.settings.comment=// 由 IntelliJ-IDEA Scala 插件生成。\n\
|// 从 IDEA 启动 sbt 时添加设置。\n\
|// 对该文件进行的手动更改将丢失。

### org/jetbrains/sbt/shell/SbtProjectTaskRunner.scala
sbt.shell.refresh.sbt.project=刷新 sbt 项目
sbt.shell.sbt.build.failed=sbt 构建失败
sbt.shell.unable.to.build.sbt.project=无法构建与 IDEA 模块 {0} 相对应的 sbt 项目。
sbt.shell.sbt.build=sbt 构建
sbt.shell.build.interrupted=构建中断
sbt.shell.error.build.interrupted=错误\: 构建中断
sbt.shell.errors.in.build=构建错误
sbt.shell.warnings.in.build=构建警告
sbt.shell.synchronizing.output.directories=正在同步输出目录…

### org/jetbrains/sbt/shell/action/projectWindowActions.scala
sbt.shell.action.run.task=运行
sbt.shell.action.run.task.description=在 sbt shell 中运行任务
sbt.shell.action.show.task=显示结果
sbt.shell.action.show.task.description=在 sbt shell 中显示任务结果
sbt.shell.action.inspect.task=检查
sbt.shell.action.inspect.task.description=在 sbt shell 中检查任务
sbt.shell.action.show.setting=显示值
sbt.shell.action.show.setting.description=在 sbt shell 中显示设置
sbt.shell.action.inspect.setting=检查
sbt.shell.action.inspect.setting.description=在 sbt shell 中检查设置
sbt.shell.action.run.command=运行
sbt.shell.action.run.command.description=在 sbt shell 中运行命令
sbt.shell.action.help=帮助
sbt.shell.action.help.description=在 sbt shell 中获取帮助

### org/jetbrains/sbt/shell/action/shellWindowActions.scala
sbt.shell.start=启动 sbt shell
sbt.shell.restart=重启 sbt shell
sbt.shell.stop=停止 sbt shell
sbt.shell.execute.task=执行 {0}
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.attach.debugger=将调试器附加到 sbt shell
sbt.shell.enable.debugging.in.sbt.settings=在 sbt 设置中启用 sbt shell 调试，然后重启 Shell 以附加调试
sbt.shell.debug=调试 sbt shell
