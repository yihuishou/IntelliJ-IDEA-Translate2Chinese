add.element.fix.name=添加 <{0}> 元素
add.attribute.fix.name=添加 "{0}" 属性
add.element.fix.family=添加属性/元素

remove.element.fix.name=移除 <{0}> 元素
remove.attribute.fix.name=移除 "{0}" 属性
remove.element.fix.family=移除属性/元素

message.invalid.value.quotation=无效的描述符给''{0}''
dom.usage.type=使用在 XML 描述符

create.new.element=创建新的{0}''{1}''
create.new.element.family=创建新元素
choose.file=选择文件
value.converter.format.exception=不能转换字符 ''{0}'' 为类 ''{1}''
value.converter.format.exception.empty.string=不能转换空字符为类 ''{0}''

action.remove=移除 (&E)
error.cannot.convert.default.message=无效的值\:''{0}''
action.edit=编辑
value.should.be.integer=值为整数
dom.elements.tree.childs.contain.errors=子下级包含错误
action.add=添加
error.unknown.enum.value.message=未知的枚举值''{0}''
model.highlighting.identity.in.other.file={0}已存在名称,在文件''{1}''中
model.highlighting.identity={0}已存在此名称
value.must.be.identifier=值必须是标识符
value.must.not.be.empty=值不得为空
attribute.0.should.be.defined=需定义''{0}''属性
child.tag.0.should.be.defined=需定义''{0}''子标记
define.0.attribute=定义 {0} 属性
define.attribute=定义特性
insert.required.tag.fix.family=插入所需的子标签
insert.required.tag.fix=插入所需的子标签{0}
big.text.control.window.title=文本
dialog.title.remove.xml.element=移除
