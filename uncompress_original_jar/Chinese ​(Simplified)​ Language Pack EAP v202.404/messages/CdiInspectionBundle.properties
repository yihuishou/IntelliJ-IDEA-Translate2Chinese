model.inspection.group.name=CDI (上下文和依赖项注入)

inspection.name.stereotype.restriction.errors=@Stereotype 限制
inspection.name.injected.errors=@Inject 错误
inspection.name.observer.method.errors=@Observer 方法错误
inspection.name.alternative.errors=@Alternative 错误
inspection.name.decorator.errors=@Decorator 不一致错误
inspection.name.specialize.errors=@Specializes 不一致错误
inspection.name.managed.bean.inconsistency.errors=托管的 bean 不一致错误
inspection.name.disposer.method.errors=Disposer 方法错误
inspection.name.disposer.method.to.produces.errors=Disposer 方法的生产者未知
inspection.name.interceptor.errors=@Interceptor 错误
inspection.name.unproxyable.bean.types.inconsistency.errors=无法代理的 bean 类型不一致
inspection.name.stereotype.errors=@Stereotype 错误
inspection.name.ambiguous.dependencies=注入点不明确的依赖项
inspection.name.typed.annotation=@Typed 注解错误
inspection.name.bean.normal.scope.inconsistency=Bean 范围不一致
inspection.name.bean.scope.inconsistency=Bean @Scope 不一致
inspection.name.beans.configuration.errors=beans.xml 中的配置错误

CdiManagedBeanInconsistencyInspection.no.appropriate.constructor=托管的 Bean 必须有不带参数的构造函数，或带有 @Inject 注解的构造函数
CdiManagedBeanInconsistencyInspection.unallowed.ancestor=托管的 Bean 不得继承 ''{0}''
CdiManagedBeanInconsistencyInspection.parameterized.class=托管的 Bean 不能为参数化类型
CdiManagedBeanInconsistencyInspection.static.inner.class=托管的 Bean 不得为非 static 内部类
CdiManagedBeanInconsistencyInspection.not.concrete.class=托管的 Bean 必须是具体的类或 @Decorator

CdiInjectionInspection.field.cannot.be.static=static 字段上不允许 @Inject 注解
CdiInjectionInspection.field.cannot.be.final=不允许在最终字段中使用 @Inject 注解

CdiInjectInspection.more.than.one.injected.constructor=托管的 Bean 必须有一个包含 @Inject 注解的构造函数
CdiInjectInspection.wrong.injected.method.annotation=@Inject 方法不能注解 ''{0}''
CdiInjectInspection.injected.method.cannot.be.static=@Inject 方法不能为 static
CdiInjectInspection.injected.with.disposes.parameters=@Inject 方法不能注解参数 ''{0}''
CdiInjectInspection.injected.method.cannot.be.abstract=@Inject 方法不能为 abstract
CdiInjectInspection.field.cannot.be.annotated.produces=注入的字段不能注解 @Produces

CdiStereotypeRestrictionsInspection.different.scopes.in.stereotypes = 所有 stereotype 必须指定相同的范围，或者必须在 Bean 中指定范围

CdiObservesInspection.multiple.observes.parameters.not.allowed = 方法只能包含一个 @Observes 参数
CdiObservesInspection.wrong.observe.method.annotation= 观察者方法不能注解 ''{0}'' 
CdiObservesInspection.observer.method.with.wrong.parameters=观察者方法不能注解参数 ''{0}''

CdiDecoratorInspection.cannot.find.decorates=装饰器的委托属性必须用 @Delegate 注解
CdiDecoratorInspection.too.many.decorates.in.decorator=装饰器必须有且只有 @Delegate 注解的委托属性
CdiDecoratorInspection.annotation.not.allowed.for.decorator=不允许对装饰器类进行 ''{0}'' 注解
CdiDecoratorInspection.decorates.type.must.implements.all.decorator.interfaces=装饰器的委托类型必须实现或扩展装饰的每个类型。不支持\: {0}
CdiDecoratorInspection.injection.point.must.be.constructor.or.initializer=包含 @Delegate 参数的方法必须是构造函数或初始值设定项方法 (@Injected)
CdiDecoratorInspection.delegate.injection.point.expected=@Delegate 字段必须有 @Injected 注解
CdiDecoratorInspection.class.must.be.decorator=非装饰器的 Bean 类不能有 @Delegate 注解的注入点
CdiDecoratorInspection.class.cannot.be.final=装饰器不能为最终类

CdiSpecializesInspection.specializes.method.must.be.non.static=专门化方法不能为 static
CdiSpecializesInspection.specializes.method.must.be.producer=专门化方法必须使用 @Produces 进行注解 
CdiSpecializesInspection.specializes.method.must.override.producer.of.superclass=专门化方法必须覆盖直接超类上的 @Produces 方法
CdiSpecializesInspection.specialized.class.has.multiple.specializes=多个类专门化同一超类\: {0}
CdiSpecializesInspection.specialized.class.not.defined=专门化 bean 必须扩展另一个 bean
CdiSpecializesInspection.specialized.class.has.duplicated.named.anno=@Named 注解不能用于专门化类和专用类
CdiSpecializesInspection.specializes.deployment.type.precedence=专门化 Bean 必须具有比专用 Bean 更高的优先级部署类型

CdiDisposerMethodInspection.too.many.dispose.parameters=方法不能有多个用 @Dispose 注解的参数
CdiDisposerMethodInspection.non.abstract.disposer.method=Disposer 方法不能为 abstract

CdiInterceptorInspection.no.binding.type=@Interceptor 必须指定至少一个拦截器绑定

CdiUnproxyableBeanTypesInspection.unproxyable.type.detected=注入的正常范围的 bean 无法代理
CdiUnproxyableBeanTypesInspection.injected.in.passivating.scoped.bean.must.be.serializable=不能将非序列化类型的 bean 注入到钝化范围的 bean 中
CdiUnproxyableBeanTypesInspection.passivating.scoped.bean.must.be.serializable= 声明钝化范围的托管型 bean 必须为 java.io.Serializable

CdiStereotypeInspection.qualified.annotations.not.allowed=不允许对 stereotype 使用限定符注解
CdiStereotypeInspection.non.empty.named.annotations.not.allowed=不允许对 stereotype 使用非空 @Named 注解
CdiStereotypeInspection.not.allowed.for.stereotypes=不允许用于 stereotype

CdiInspectionPointsInspection.unsatisfied.dependency=依赖项不满足要求\: 没有一个 bean 与注入点相匹配
CdiInspectionPointsInspection.ambiguous.dependency=依赖项不明确\: 有多个与注入点相匹配的 bean
CdiInspectionPointsInspection.new.annotation.with.other.qualifiers=@New 不能与其他限定符组合

CdiTypedAnnotationInspection.incorrect.bean.type=Bean 类型与 @Typed 注解的类型不相符。
CdiTypedAnnotationInspection.non.producer=应当应用于生产者

CdiScopeInspection.singleton.bean.incorrect.scopes=单例 bean 必须为 @ApplicationScoped 或 @Dependent
CdiScopeInspection.session.stateless.bean.incorrect.scopes=无状态会话 bean 的范围必须为 @Dependent

CdiNormalScopeInspection.public.field.in.normal.scoped.beans=非默认(@Dependent)范围的 Bean 不得具有 public 字段 
CdiDomBeansInspection.class.must.be=此处应为 {0} 类
CdiDomBeansInspection.add.annotation=添加 @{0}
CdiDomBeansInspection.add.annotation.family=添加注解
CdiDomBeansInspection.duplicated.alternative.classes=类已在 <alternatives> 中定义
CdiDomBeansInspection.duplicated.stereotype.classes=Stereotype 已在 <alternatives> 中定义
alternative.bean.should.not.be.vetoed=替代 bean 不应被否决
CdiUnknownProducersForDisposerMethodInspection.cannot.find.corresponding.producers=找不到相应的生产者
