buildsystem.type.gradle.groovy=Gradle Groovy
buildsystem.type.gradle.kotlin=Gradle Kotlin
buildsystem.type.intellij=IntelliJ
buildsystem.type.intellij.full=IntelliJ 构建系统
buildsystem.type.maven=Maven

error.template.not.found=找不到 id 为 {0} 的模板
error.required.settings.are.not.present=未配置以下所需设置
error.configurator.not.found=找不到模块类型 {0}
error.invalid.module.dependency=模块 {0} 至 {1} 的模块依赖关系无效

module.configuration.group.android.native=Android 本机
module.configuration.group.ios=iOS
module.configuration.group.linux=Linux
module.configuration.group.macos=macOS
module.configuration.group.windows.mingw=Windows (MinGW)

module.kind.android.module=Android 模块
module.kind.ios.module=iOS 模块
module.kind.js.module=JS Module
module.kind.module=模块
module.kind.mpp.module=MPP 模块
module.kind.target=目标

plugin.buildsystem.setting.type=构建系统
plugin.buildsystem.setting.type.error.wrong.project.kind={0} project cannot be generated using {1}

plugin.kotlin.downloading.kotlin.versions=正在下载 Kotlin 版本列表
plugin.kotlin.setting.modules=模块
plugin.kotlin.setting.modules.error.duplicated.modules=有 {0} 个名称为 {1} 的模块
plugin.kotlin.setting.modules.error.duplicated.targets=有 {0} 个名称为 {1} 的目标

plugin.kotlin.setting.project.kind=项目类型

project.kind.android=Android
project.kind.kotlin.js=Kotlin/JS
project.kind.multiplatform=Multiplatform
project.kind.singleplatform=JVM

project=项目

plugin.structure.setting.location=位置
plugin.structure.setting.location.error.is.not.empty=目录不为空
plugin.structure.setting.name=名称
plugin.structure.setting.group.id=组 ID
plugin.structure.setting.artifact.id=工件 ID
plugin.structure.setting.version=版本

plugin.templates.setting.template=Project Template

plugin.android.setting.sdk=Android SDK


validation.should.not.be.blank=指定 {0}
validation.identifier={0} 应仅包含字母、数字{1}
validation.identifier.additional.symbols=和符号\: {0}
validation.file.should.exists={0} 的文件应存在

version.error.bad.format=设置 {0} 的版本格式不正确
parse.error.no.value.for.key=未找到键 {0} 的值

module.type.jvm=Kotlin/JVM
module.type.js=Kotlin/JS
module.type.common=通用
module.type.android=Android
module.type.native=Kotlin/Native

module.type.ios=iOS

module.name=模块名称
module.name.with.name=模块名称 {0}

module.configurator.js=适用于浏览器的 JS

module.configurator.android=Android
module.configurator.android.setting.android.plugin=Android 插件
module.configurator.android.setting.android.plugin.application=Android 应用程序
module.configurator.android.setting.android.plugin.library=Android

module.configurator.common=通用

module.configurator.jvm=JVM
module.configurator.jvm.setting.target.jvm.version=目标 JVM 版本
module.configurator.jvm.setting.java.support=Java 语言支持

module.configurator.mpp=多平台
module.configurator.ios=IOS
module.configurator.ios.requires.xcode=需要 Xcode

module.configurator.js.browser=浏览器
module.configurator.js.node=Node.js

module.configurator.js.css=CSS Support
module.configurator.js.target.settings.kind=目标种类
module.configurator.js.target.settings.kind.library=库
module.configurator.js.target.settings.kind.application=应用程序

module.configurator.tests.setting.framework=测试框架
module.configurator.tests.setting.framework.junit4=JUnit 4
module.configurator.tests.setting.framework.junit5=JUnit 5
module.configurator.tests.setting.framework.test.ng=TestNG
module.configurator.tests.setting.framework.js=JavaScript
module.configurator.tests.setting.framework.common=通用
module.configurator.tests.setting.framework.none=无
module.configurator.native.for.current.system=您的系统

project.template.empty.singleplatform.title=Application
project.template.empty.singleplatform.description=使用 Kotlin/JVM 编写的后端应用程序。

project.template.empty.mpp.title=Application
project.template.empty.mpp.description=适用于支持共享通用代码的不同平台的应用程序。

project.template.empty.jvm.console.title=控制台应用程序
project.template.empty.jvm.console.description=使用 Kotlin/JVM 编写的控制台应用程序。将它用于原型制作或测试目的。

project.template.mpp.lib.title=Library
project.template.mpp.lib.description=不同平台之间共享通用代码的库。

project.template.full.stack.title=完整堆栈 Web 应用程序
project.template.full.stack.description=将 Kotlin/JS 用于前端且将 Kotlin/JVM 用于后端的完整功能 Web 应用程序。

project.template.native.console.title=原生应用程序
project.template.native.console.description=使用 Kotlin/Native 编写、用作特定平台下的独立应用程序。

project.template.frontend.title=前端应用程序
project.template.frontend.description=使用 Kotlin/JS 编写的前端应用程序(如果您已有后端)。

project.template.mpp.mobile.title=Mobile Application
project.template.mpp.mobile.description=使用 Kotlin Multiplatform Mobile、适用于 iOS 和 Android 的移动应用程序，支持在各个平台之间共享通用代码。

project.template.mpp.mobile.lib.title=Mobile Library
project.template.mpp.mobile.lib.description=支持在 iOS 和 Android 之间共享代码的库。


module.template.console.jvm.title=控制台应用程序
module.template.console.jvm.description=可在控制台中工作、简单的“Hello World\!”Kotlin/JVM 应用程序

module.template.ktor.server.title=Ktor server
module.template.ktor.server.description=用于构建 Web 应用程序的可配置 Ktor Web 服务器
module.template.ktor.server.setting.engine=Ktor 服务器引擎
module.template.ktor.server.setting.engine.netty=Netty
module.template.ktor.server.setting.engine.tomcat=Tomcat
module.template.ktor.server.setting.engine.jetty=Jetty

module.template.native.console.title=原生应用程序
module.template.native.console.description=可用于操作系统的简单的 Kotlin/Native 应用程序

module.template.js.simple.title=前端应用程序
module.template.js.simple.description=可配置的 Kotlin/JS 前端应用程序
module.template.js.simple.run.configuration.dev=连续模式下的 BrowserDevelopmentRun
module.template.js.simple.run.configuration.prod=连续模式下的 BrowserProductionRun
module.template.js.simple.setting.rendering.engine=正在渲染引擎
module.template.js.simple.setting.rendering.kotlinx.html=使用静态类型的 Kotlinx.html DSL
module.template.js.simple.setting.rendering.react=使用 Kotlin 包装的 React 库
module.template.js.simple.setting.rendering.react.styled=将 Kotlin 包装的 React 框架与样式组件一同使用



