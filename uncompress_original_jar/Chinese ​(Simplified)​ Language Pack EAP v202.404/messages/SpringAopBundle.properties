aop.inspection.group=Spring AOP
aop.errors.inspection.display.name=Spring AOP 错误
aop.warnings.inspection.display.name=Spring AOP 警告
missing.aspectj.autoproxy.inspection.display.name=缺少 aspectj-autoproxy
aop.warning.aspectj.isnt.enabled=未启用 @AspectJ 支持
aop.enable.aspectj.fix.text=将 <aop\:aspectj-autoproxy/> 添加到 Spring 配置
aop.advice.matching.aspect.bean=一些建议与此 Bean 匹配

jdk.proxy.intercepts.class=Bean 属性必须具有接口类型\: ''{0}''
use.cglib.proxying=使用 CGLIB 代理

error.pointcut.or.pointcut.ref.should.be.defined=应定义 pointcut 或 pointcut-ref 属性
warning.pointcut.should.have.id=切入点应具有 ID
this.pointcut.designator.isn.t.supported.by.spring=Spring 不支持 {0} 切入点指示符

SpringAopAnnotator.annotator.name=AOP (XML)
JdkProxiedBeanTypeInspection.key=设置了 JDK 代理的 Bean 类型
JdkProxiedBeanTypeInspection.could.not.determine.type=无法确定设置了 JDK 代理的 Bean 类型