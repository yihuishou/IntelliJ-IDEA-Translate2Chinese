action.Docker.AddDockerConnection.text=Docker 连接
action.Docker.AddDockerConnection.description=添加 Docker 连接
action.Docker.FilterUntaggedImages.text=未标记的映像
action.Docker.FilterStoppedContainers.text=已停止容器
group.Docker.Filter.text=Docker
action.Docker.RemoteServers.ExecInContainer.text=Exec
action.Docker.RemoteServers.ExecInContainer.description=在所选容器中运行命令
action.Docker.RemoteServers.Attach2Container.text=附加
action.Docker.RemoteServers.Attach2Container.description=附加到所选容器
action.Docker.RemoteServers.ShowContainerProcesses.text=显示进程
action.Docker.RemoteServers.ShowContainerProcesses.description=显示所选容器的进程列表
action.Docker.RemoteServers.InspectContainerOrImage.text=检查
action.Docker.RemoteServers.CopyContainerImageId.text=复制映像 ID
action.Docker.RemoteServers.CopyContainerImageId.description=将所选容器的映像 ID 或标签复制到剪贴板
action.Docker.RemoteServers.CopyContainerId.text=复制容器 ID
action.Docker.RemoteServers.CopyContainerId.description=将所选容器的 ID 复制到剪贴板
action.Docker.RemoteServers.CopyImageId.text=复制映像 ID
action.Docker.RemoteServers.CopyImageId.description=复制所选映像的 ID 到剪贴板
action.Docker.RemoteServers.ShowContainerLog.text=显示日志
action.Docker.RemoteServers.ShowContainerLog.description=显示所选容器的日志
action.Docker.RemoteServers.SelectContainerImage.text=显示映像
action.Docker.RemoteServers.SelectContainerImage.description=在服务树中显示所选容器的映像
action.Docker.RemoteServers.ScaleComposeService.text=Scale
action.Docker.RemoteServers.ScaleComposeService.description=扩展服务
action.Docker.RemoteServers.StopComposeService.text=停止
action.Docker.RemoteServers.StopComposeService.description=停止服务
action.Docker.RemoteServers.StartComposeService.text=启动
action.Docker.RemoteServers.StartComposeService.description=启动服务
action.Docker.RemoteServers.PullImage.text=拉取映像...
action.Docker.RemoteServers.PullImage.description=从存储库中拉取映像
action.Docker.RemoteServers.PushImage.text=推送映像...
action.Docker.RemoteServers.PushImage.description=将所选映像推送到存储库
action.Docker.RemoteServers.DeleteImage.text=删除图像
action.Docker.RemoteServers.DeleteImage.description=删除所选映像
action.Docker.RemoteServers.CreateContainer.text=创建容器
action.Docker.RemoteServers.CreateContainer.description=为所选映像创建和运行容器
action.Docker.RemoteServers.DeleteContainer.text=删除容器
action.Docker.RemoteServers.DeleteContainer.description=删除所选容器
action.Docker.RemoteServers.StopContainer.text=停止容器
action.Docker.RemoteServers.StopContainer.description=停止所选容器
action.Docker.RemoteServers.StartContainer.text=启动容器
action.Docker.RemoteServers.StartContainer.description=启动所选容器
action.Docker.RemoteServers.DownComposeApp.text=下
action.Docker.RemoteServers.DownComposeApp.description=停止容器，并移除容器、网络、卷和映像
action.Docker.RemoteServers.StopComposeApp.text=停止
action.Docker.RemoteServers.StopComposeApp.description=停止所有服务
group.Docker.RemoteServersViewToolbar.text=Docker
DockerConverterProvider.conversion.description=Docker 运行配置将转换为新格式
DockerFileDetector.Notifier.title.one=Dockerfile 检测
DockerFileDetector.Notifier.title.many=Dockerfile 检测
DockerFileDetector.Notifier.message.one=您可以为以下文件创建 Docker 运行配置\: <br>
DockerFileDetector.Notifier.message.full=您可以为以下文件创建 Docker 运行配置\: <br>
DockerFileDetector.Notifier.message.limited=您可为 {0} 个文件创建 Docker 运行配置，其中包括以下文件\:<br>
DockerFileDetector.Notifier.disable=不再询问
dockerTools.name=工具
dockerfile.brackets=中括号
dockerfile.comma=逗号
dockerfile.comments=注释
dockerfile.dot=点
dockerfile.keyword=关键字
dockerfile.number=数字
dockerfile.parenths=括号
dockerfile.string=字符串
dockerfile.variable=变量
dockerfile.displayName=Dockerfile
DockerCloudType.debug.not.supported=''{0}'' 不支持调试模式
DockerCloudType.presentable.name=Docker
DockerCloudType.run.configuration.type.presentable.name=Docker
DockerPropertiesRuntimeEditor.containers.names.warning.message=请注意，由于容器的名称将被更改，与此容器相关的所有链接都将断开。确定仍要更改容器名称吗?
DockerPropertiesRuntimeEditor.containers.names.warning.title=正在更改容器名称
DockerPropertiesRuntimeEditor.container.name.error.empty.message=不允许使用空容器名称
DockerPropertiesRuntimeEditor.container.name.error.invalid.message=容器名称 {0} 无效，仅允许文字、数字和标点 [_.-] 字符
DockerPropertiesRuntimeEditor.container.name.error.title=容器名称无效
DockerPropertiesRuntimeEditor.container.name.text=容器名称\:
DockerPropertiesRuntimeEditor.save.text=保存
DockerVolumeBindingConfigurable.BrowseFolderAction.title=主机路径
DockerVolumeBindingConfigurable.BrowseFolderAction.description=选择卷主机路径
DockerVolumeBindingConfigurable.mapping.warning.message=应在 Docker 设置中配置路径映射
DockerVolumeBindingConfigurable.mapping.warning.title=警告
DockerVolumeBindingConfigurable.container.path.text=容器路径\:
DockerVolumeBindingConfigurable.host.path.text=主机路径\:
DockerVolumeBindingConfigurable.read.only.text=只读
InspectDockerAction.description.container=检查所选容器
InspectDockerAction.description.image=检查选定镜像
InspectDockerAction.tab.title=检查
ShowContainerProcessesAction.tab.title=进程
CreateContainerAction.popup.title=创建容器
CreateContainerAction.popup.defaultAction=创建...
DockerDeleteProvider.title=删除
DockerDeleteProvider.confirmation.title=确认删除
DockerDeleteProvider.confirmation.text.both.types=确定要删除{0}和{1}吗?
DockerDeleteProvider.confirmation.text.single.type=确定要删除{0}吗?
DockerDeleteProvider.confirmation.image.one=1 个镜像
DockerDeleteProvider.confirmation.image.many={0} 个镜像
DockerDeleteProvider.confirmation.container.one=1 个容器
DockerDeleteProvider.confirmation.container.many={0} 个容器
DockerGroupRuntime.ContainersGroup.groupName=容器
DockerGroupRuntime.ImagesGroup.groupName=图像
DockerColorAnnotator.unresolvedVariableRef=无法解析变量 ''{0}''
DockerFileFindUsagesProvider.usageType.envVar=ENV 变量
DockerFileFindUsagesProvider.usageType.argVar=ARG 变量
DockerFileFindUsagesProvider.usageType.stage=阶段声明
DockerFileFindUsagesProvider.usageType.unknown=声明

DockerFileRunLineMarkerProvider.action.group.run=运行
DockerFileRunLineMarkerProvider.action.group.build=构建镜像
DockerFileRunLineMarkerProvider.BuildAsTemporaryRunConfig.text=在 ''{0}'' 上构建镜像
DockerFileRunLineMarkerProvider.BuildExistingRunConfig.text=为 ''{0}'' 构建镜像

DockerRunLineMarkerProviderBase.tooltip=在 Docker 上运行
DockerRunLineMarkerProviderBase.RunExistingRunConfig.text=运行''{0}''
DockerRunLineMarkerProviderBase.EditExistingRunConfig.text=编辑 ''{0}''...
DockerRunLineMarkerProviderBase.EditExistingRunConfig.dialogTitle=编辑运行配置
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.text=新建运行配置…
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.dialogTitle=编辑运行配置
DockerRunLineMarkerProviderBase.RunAsTemporaryRunConfig.text=在 ''{0}'' 上运行

DockerRunConfigurationCreator.editConfiguration.title.new=创建 Docker 配置
DockerCloudConfigurable.loadMachines.task.title=加载机器
DockerCloudConfigurable.error.apiUrlRequired=需要 API URL
DockerCloudConfigurable.error.machineRequired=需要 Docker 机器
DockerCloudConfigurable.error.connectionNotSpecified=指定连接类型
DockerCloudConfigurable.error.certificatesFolder.missing={0} 下没有证书文件夹
DockerCloudConfigurable.chooser.certificates.title=选择证书位置
DockerCloudConfigurable.task.loading.machines.title=加载机器设置
DockerCloudConfigurable.docker.for.mac.radio.title=Docker for Mac
DockerCloudConfigurable.docker.for.windows.radio.title=Docker for Windows
DockerCloudConfigurable.connect.daemon.text=使用以下方式连接到 Docker 守护进程\:
DockerCloudConfigurable.unix.socket.text=Unix 套接字
DockerCloudConfigurable.docker.machine.text=Docker 机器\:
DockerCloudConfigurable.tcp.socket.text=TCP 套接字
DockerCloudConfigurable.configure.executable.text=配置可执行文件
DockerCloudConfigurable.engine.url.text=引擎 API URL\:
DockerCloudConfigurable.certificates.folder.text=证书文件夹\:
DockerCloudConfigurable.path.mappings.text=路径映射：
DockerCloudConfigurable.email.text=电子邮件\:
DockerCloudConfigurable.password.text=密码\:
DockerFileArgumentCountInspection.display.name=参数数量错误
DockerFileArgumentCountInspection.error.exactly.one.argument.required=只需要一个参数
DockerFileArgumentCountInspection.error.at.least.N.arguments.required=至少需要 {0} 个参数
DockerFileAssignmentsInspection.display.name='key\=value' 对中有空格
DockerFileAssignmentsInspection.error.spacing.not.allowed=此处不允许空格
DockerFileAddOrCopySemanticInspection.display.name='ADD'/'COPY' 语义
DockerFileAddOrCopySemanticInspection.error.target.must.be.folder=目标必须是目录，并以 '/' 结尾
DockerFileAddOrCopySemanticInspection.error.quick.fix=添加尾随的 '/'
DockerMappingConfigurable.browse.title=共享文件夹路径
DockerMappingConfigurable.browse.description=选择共享文件夹路径
DockerMappingConfigurable.displayName=路径映射
DockerMappingConfigurable.error.local.path.required=需要本地路径
DockerMappingConfigurable.error.remote.path.required=需要虚拟机路径
DockerMappingConfigurable.virtual.machine.path.text=虚拟机路径\:
DockerMappingConfigurable.local.path.text=本地路径\:
docker.path.mapping.editor.table.virtual.machine.path.header=虚拟机路径
docker.path.mapping.editor.table.local.path.header=本地路径
docker.registry.configurable.connection.status.connecting=连接中...
docker.registry.configurable.connection.status.successful=连接成功
docker.registry.configurable.connection.status.cannot.connect=无法连接\: {0}
DockerContainerSettingsUI.exposedPortsHyperlink=<html>将公开端口发布到主机接口\:</html>
DockerContainerSettingsUI.executable.panel.title=可执行文件
DockerContainerSettingsUI.entrypoint.text=入口点\:
DockerContainerSettingsUI.command.text=命令\:
DockerContainerSettingsUI.all.text=所有
DockerContainerSettingsUI.specify.text=指定
DockerContainerSettingsUI.bind.ports.text=绑定端口\:
DockerContainerSettingsUI.bind.mounts.text=绑定挂载\:
DockerContainerSettingsUI.environment.variables.text=环境变量：
DockerContainerSettingsUI.run.options.text=运行选项\:
DockerPortBindingsField.dialogTitle=端口绑定
DockerPortBindingsField.dialogEmptyText=无端口绑定
DockerPortBindingsField.PortBindingsTable.hostPort=主机端口
DockerPortBindingsField.PortBindingsTable.containerPort=容器端口
DockerPortBindingsField.PortBindingsTable.hostIP=主机 IP
DockerPortBindingsField.PortBindingsTable.protocol=协议
DockerPortBindingsEditor.hostPort=主机端口
DockerPortBindingsEditor.containerPort=容器端口
DockerPortBindingsEditor.hostIP=主机 IP
DockerPortBindingsEditor.protocol=协议
DockerVolumeBindingsField.dialogTitle=绑定挂载
DockerVolumeBindingsField.dialogEmptyText=无绑定挂载
DockerVolumeBindingsField.VolumeBindingsTable.source=主机路径
DockerVolumeBindingsField.VolumeBindingsTable.destination=容器路径
DockerVolumeBindingsField.VolumeBindingsTable.readOnly=只读
DockerComposeFilesTextField.DockerComposeFileDialog.title=Docker Compose 配置文件
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOrFolder=选择配置文件或文件夹
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOnly=选择配置文件
DockerDeploymentSourcePathCombo.dialogTitle=Dockerfile
DockerDeploymentSourcePathCombo.dialogDescription=指定要构建和运行的 Dockerfile 
DockerFileAndContextFolderUI.ContextFolderField.dialogTitle=上下文文件夹
DockerFileAndContextFolderUI.ContextFolderField.dialogDescription=指定上下文文件夹或默认留空
DockerBuildSettingsUI.BuildArgsField.dialogTitle=构建参数
DockerBuildSettingsUI.BuildArgsField.dialogEmptyText=无构建参数
DockerBuildSettingsUI.DockerBuildOptionsField.onParseError=无法解析构建 CLI 选项\: {0}
DockerBuildSettingsUI.dockerfile.text=Dockerfile\:
DockerBuildSettingsUI.context.folder.text=上下文文件夹\:
DockerBuildSettingsUI.image.tag.text=镜像标记\:
DockerBuildSettingsUI.build.args.text=构建参数\:
DockerBuildSettingsUI.build.options.text=构建选项\:
DockerContainerSettingsUI.EnvVarsField.dialogTitle=环境变量
DockerContainerSettingsUI.EnvVarsField.dialogEmptyText=无变量
DockerContainerSettingsUI.DockerRunOptionsField.onParseError=无法解析运行 CLI 选项\: {0}
DockerCliOptionsField.onParseError=无法解析命令行选项\: {0}
SingletonDeploymentSourceType.error.image.tag.atMaxOne=最多允许一个标记
SingletonDeploymentSourceType.error.image.tag.format=镜像标记格式无效
SingletonDeploymentSourceType.error.container.name.format=容器名称无效\: 应为 `[a-zA-Z0-9][a-zA-Z0-9_.-]*`
DockerImageDeploymentSourceType.name=Docker 镜像
DockerImageDeploymentSourceType.suggestRunConfigurationName=Docker 镜像
DockerImageDeploymentSourceType.deploymentName={0} 镜像 ID\: {1}
DockerImageDeploymentSourceType.error.image.id.required=需要镜像 ID 或名称
DockerComposeDeploymentSourceType.name=Docker-compose
DockerComposeDeploymentSourceType.deploymentName=Compose\: {0}
DockerComposeDeploymentSourceType.suggestRunConfigurationName={0}\: Compose 部署
DockerComposeDeploymentSourceType.error.path.required=需要 Compose 文件的路径
DockerComposeDeploymentSourceType.error.file.does.not.exist=''{0}'' 下没有 Compose 文件
DockerFileDeploymentSourceType.name=Dockerfile
DockerFileDeploymentSourceType.deploymentName={0} Dockerfile\: {1}
DockerFileDeploymentSourceType.suggestRunConfigurationName={0}
DockerFileDeploymentSourceType.error.path.required=需要 Dockerfile 文件的路径
DockerFileDeploymentSourceType.error.dockerfile.does.not.exist=''{0}'' 下没有 Dockerfile

DockerBeforeRunTaskProvider.name=调试前启动 Docker
DockerBeforeRunTaskProvider.description=调试前启动 Docker\: `{0}`
DockerBeforeRunTaskProvider.notifier=在运行任务前启动 Docker
DockerBeforeRunTaskProvider.Dialog.title=配置 Docker

DockerEnvVarsRuntimeEditor.name=环境变量
DockerPortBindingRuntimeEditor.name=端口绑定
DockerPortBindingRuntimeEditor.publish.ports.checkbox.title=发布所有端口
DockerVolumeBindingsRuntimeEditor.name=卷绑定
DockerPropertiesRuntimeEditor.name=属性

DockerPropertiesRuntimeEditor.property.container.id=容器 ID
DockerPropertiesRuntimeEditor.property.container.names=容器名称
DockerPropertiesRuntimeEditor.property.image.id=镜像 ID
DockerPropertiesRuntimeEditor.property.image.created=已创建
DockerPropertiesRuntimeEditor.property.image.size=大小
DockerPropertiesRuntimeEditor.property.image.tags=标记

DockerPropertiesRuntimeEditor.action.copy.to.clipboard.name=复制到剪贴板

DockerFileSystem.error.modification.not.supported=Docker 容器文件系统不支持修改\: {0}
DockerFileSystem.error.can.not.get.contents=无法获取 {0} 的内容
DockerContainerBrowserTab.displayName=模板
DockerContainerBrowserTab.emptyText=启动容器以浏览文件

DockerFileChooser.emptyText=无法访问文件系统根。可能尚不支持这种 Docker 容器。
DockerFileChooser.loadingText=正在获取文件系统根…
DockerFileChooser.emptyPathText=选择要查看路径的项目
DockerFileChooser.RefreshAction.text=刷新
DockerFileChooser.RefreshAction.description=刷新 Docker 容器文件系统树

DockerContainerBrowser.downloadTask.title=从 Docker 容器下载文件
DockerContainerBrowser.DownloadAction.text=下载到临时目录
DockerContainerBrowser.DownloadAction.description=将文件从 Docker 容器下载到临时目录
DockerContainerBrowser.ViewInEditorAction.text=在编辑器中查看
DockerContainerBrowser.ViewInEditorAction.description=在编辑器中查看 Docker 容器中的文件

DockerRootType.displayName=Docker 文件

DockerWritingAccessProvider.readOnlyMessage=Docker 容器中的文件是只读的
configurable.DockerLinkConfigurable.display.name=链接
configurable.DockerLinkConfigurable.ContainerNamesLoader.task.title=加载容器名称…
configurable.DockerLinkConfigurable.name.text=名称\:
configurable.DockerLinkConfigurable.alias.text=别名：
configurable.DockerMachineConfigurable.display.name=Docker
configurable.DockerEnvVarConfigurable.display.name=环境变量
configurable.DockerEnvVarConfigurable.name.text=名称\:
configurable.DockerEnvVarConfigurable.value.text=值\:
configurable.DockerPortBindingConfigurable.display.name=端口绑定
configurable.DockerPortBindingConfigurable.container.port.text=容器端口\:
configurable.DockerPortBindingConfigurable.protocol.text=协议\:
configurable.DockerPortBindingConfigurable.host.ip.text=主机 IP\:
configurable.DockerPortBindingConfigurable.host.port.text=主机端口\:
configurable.DockerRegistryListConfigurable.empty.selection.string=要配置 Docker 注册表，请点击 '+'
configurable.DockerRegistryListConfigurable.display.name=Docker 注册表
configurable.DockerRegistryListConfigurable.AddRegistryAction.text=添加
configurable.DockerVolumeBindingConfigurable.display.name=卷绑定
configurable.PushImageConfigurable.display.name=推送映像
configurable.PushImageConfigurable.registry.text=注册表\:
configurable.PushImageConfigurable.repository.text=存储库\:
configurable.PushImageConfigurable.tag.text=标签\:
settings.docker.executable=Docker 可执行文件\:
settings.docker.machine.executable=Docker 机器可执行文件：
settings.docker.compose.executable=Docker Compose 可执行文件\:
settings.select.docker.machine.executable=选择 Docker 机器可执行文件\:
settings.choose.docker.compose.executable.location=选择 Docker Compose 可执行文件位置
settings.choose.docker.executable.location=选择 Docker 可执行文件位置
checkbox.wait.for.healthcheck=等待 HEALTHCHECK

DockerRemoteDebugRunConfigurationExtension.editorTitle=Java 远程调试

DockerComposeCredentialsEditor.validate.server.not.selected=未选择 Docker 服务器
DockerComposeCredentialsEditor.validate.files.not.chosen=未选择配置文件
DockerComposeCredentialsEditor.validate.no.services.defined=配置文件中未定义任何服务
DockerComposeCredentialsEditor.validate.service.name.not.selected=未选择服务名称
DockerComposeCredentialsEditor.server.text=服务器\:
DockerComposeCredentialsEditor.configuration.files.text=配置文件\:
DockerComposeCredentialsEditor.service.text=服务\:
DockerComposeCredentialsEditor.environment.variables.text=环境变量 (&E)
DockerComposeCredentialsEditor.processing=正在处理 Docker Compose 配置…
DockerComposeCredentialsEditor.no.service.placeholder=<Select service>

DockerComposeSettingsEditor.form.name=Docker Compose
DockerComposeSettingsEditor.form.command=命令和选项\: 
DockerComposeSettingsEditor.form.command.preview=命令预览\:

DockerComposeCredentialsType.name=Docker Compose

DockerCredentialsEditor.validate.server.not.selected=未选择 Docker 服务器
DockerCredentialsEditor.validate.image.not.specified=未指定 Docker 镜像名称
DockerCredentialsEditor.StartDockerMachineDialog.message=要启动 Docker 机器 ''{0}'' 吗?
DockerCredentialsEditor.StartDockerMachineDialog.title=Docker 机器未运行
DockerCredentialsEditor.server.text=服务器\:
DockerCredentialsEditor.image.name.text=镜像名称\:

DockerCredentialsType.name=Docker

DockerInterpreterContainerSettingsEditorDialog.title=编辑 Docker 容器设置

DockerInterpreterContainerSettingsEditor.disable.networking.text=禁用网络
DockerInterpreterContainerSettingsEditor.network.mode.text=网络模式\:
DockerInterpreterContainerSettingsEditor.publish.all.ports.text=发布所有端口
DockerInterpreterContainerSettingsEditor.run.options.text=运行选项\:

DockerTargetBuildImageStep.description=正在构建 Docker 镜像…

DockerTargetPullImageStep.description=正在拉取 Docker 镜像…

DockerTargetConfigurable.section.title=Docker 容器
DockerTargetConfigurable.server.row.label=Docker 服务器\:
DockerTargetConfigurable.build.radio.text=构件
DockerTargetConfigurable.pull.radio.text=拉取
DockerTargetConfigurable.image.row.label=图像文件\:
DockerTargetConfigurable.dockerfile.row.label=Dockerfile
DockerTargetConfigurable.context.folder.row.label=上下文文件夹\:
DockerTargetConfigurable.optional.row.title=可选
DockerTargetConfigurable.build.options.row.label=构建选项\:
DockerTargetConfigurable.build.args.row.label=构建参数\:
DockerTargetConfigurable.rebuild.automatically.checkbox.text=每次运行代码之前自动重新构建镜像
DockerTargetConfigurable.image.tag.row.label=镜像标记\:
DockerTargetConfigurable.run.options.row.label=运行选项\:
DockerTargetConfigurable.run.options.comment.text=Docker 运行命令的参数。<br/>例如 -p 8080\:8080 可以公开端口 8080

AddDockerConnectionAction.title=Docker 连接

ComposeScaleAction.Dialog.message=容器数量\:
ComposeScaleAction.Dialog.title=扩展

DockerBeforeRunTaskUI.ports.table.title=端口转发\:
DockerBeforeRunTaskUI.command.field.title=自定义命令\:
DockerBeforeRunTaskUI.options.field.title=自定义选项\:

DockerComposeExecutionFailed.notification.action.title=显示设置…

DockerMachineUtil.starting.machine.template=正在启动 Docker 机器 ''{0}''
DockerMachineUtil.starting.machine.title=正在启动 Docker 机器

DockerRegistryConfigurable.ConnectionTester.task.title=连接中...
DockerRegistryConfigurable.address.text=地址\:
DockerRegistryConfigurable.username.text=用户名：
DockerRegistryConfigurable.password.text=密码\:
DockerRegistryConfigurable.email.text=电子邮件\:
DockerRegistryConfigurable.test.connection.text=测试连接
DockerRegistryConfigurable.server.text=服务器\:

DockerRuntimeEditorBase.save.button.title=正在保存…
DockerServiceViewContributor.contributor.descriptor.name=Docker
ContainerLogTab.title=日志
DockerBuildLogTab.title=构建日志
DockerComposeDetails.ComposeDeployLogTab.title=部署日志

ExecInContainerAction.Case.Dialog.message=命令\:
ExecInContainerAction.Case.Dialog.title=Exec
ExecInContainerAction.ListPopup.title=在容器中运行命令
ExecInContainerAction.ListPopup.textFor.create=创建...
ExecInContainerAction.tab.title=执行\: {0}
DockerImageGroupDetails.ImagePullTab.title=图像控制台
ImagePullPanel.image.to.pull.label=要拉取的镜像\:
ImagePullPanel.image.to.pull.comment=按 {0} 启动
ImagePullPanel.action.pull=拉取选定镜像
ImagePullPanel.terminal.name=Docker 镜像
ImagePullPanel.terminal.info.using.default.tag=正在使用默认标记\: 最新
ImagePullPanel.terminal.error.reference.format=引用格式无效\: {0}
ImagePullPanel.queue.label=镜像在队列中拉取\: {0}

ToolBasedDockerComposeConfigurationParser.progress.title=正在处理 Docker Compose 配置…
DockerSearchContext.BadResponseException.message=响应代码\: 来自 URL 的 {0}\: {1}

DockerRemoteDebugExtensionEditor.port.text=端口\:

DockerExtraHostConfigurable.hostname.text=主机名\:
DockerExtraHostConfigurable.ip.text=IP\:

DockerComposeDeploymentEditor.services.popup.title=切换服务
DockerComposeDeploymentEditor.compose.files.text=Compose 文件\:
DockerComposeDeploymentEditor.services.text=服务\:
DockerComposeDeploymentEditor.environment.variables.text=环境变量：
DockerComposeDeploymentEditor.options.panel.title=选项
DockerComposeDeploymentEditor.force.build.text=--build，强制构建镜像
DockerComposeDeploymentEditor.force.build.tooltip.text=在启动容器之前构建镜像
DockerComposeDeploymentEditor.remove.volumes.text=--volumes，移除 `down` 上的卷

DockerDeploymentEditor.image.id.text=镜像 ID 或名称\:
DockerDeploymentEditor.run.built.image.text=运行构建的镜像
DockerDeploymentEditor.container.name.text=容器名称\:
DockerDeploymentEditor.command.preview.text=命令预览\:
DockerRunConfigurationPanel.configuration.text=Docker 配置\:
DockerRunConfigurationPanel.service.text=服务\:
DockerRuntimeEditor.save.text=保存
RegistrySelectionEditor.new.text=新...
progress.text.preparing.docker.target=正在准备 Docker 目标…
progress.text.preparing.volumes=正在准备卷…
progress.text.docker.upload.volume.progress.message=来自 {0} 的上传将挂载为 {1}
progress.text.docker.download.volume.progress.message=来自 {1} 的下载将保存到 {0}