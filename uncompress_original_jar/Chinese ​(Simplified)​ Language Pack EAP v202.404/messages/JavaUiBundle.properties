action.TemplateProjectStructure.text=新项目的结构...
action.TemplateProjectStructure.description=配置所有新项目的默认结构
build.script.found.notification=找到 {0} 构建 {1,choice,1\#脚本|1<脚本}
build.script.found.notification.import=导入
build.script.found.notification.import.all=全部导入
build.scripts.from.multiple.providers.found.notification=找到构建脚本
project.structure.automatically.detected.notification=已根据项目源自动配置项目
project.structure.automatically.detected.notification.gotit.action=知道了
project.structure.automatically.detected.notification.configure.action=手动配置...
task.searching.for.project.sources=正在检测项目结构...
notification.text.duplicated.urls.were.removed=从 {0} 中移除了重复的 URL。这些 URL 之所以重复，是由于以前的 {1} 版本中存在错误，并且可能会导致性能问题。
dialog.title.cannot.import=无法导入
message.cannot.import.anything.from.0=无法从 {0} 导入任何内容
chooser.title.select.file.or.directory.to.import=选择要导入的文件或目录
dialog.title.create.library=选择库
dialog.title.edit.library=编辑库
notification.title.repository.library.synchronization=存储库库同步
action.description.add.0.support=添加 {0} 支持
dialog.title.library.already.exists=库已经存在
dialog.title.libraries.are.required=必须提供这些库
label.project.layout.panel.name=名称\:
label.downloading.options.dialog.version=&版本\:
dialog.title.downloading.options=下载选项
label.add.to.module=添加到模块(&A)：
radio.button.use.library.from.0=使用 {0} 中的库
warning.message.the.module.file.0.already.exist.and.will.be.overwritten=项目文件 ''{0}'' 已存在.
error.resolve.with.log_link=<html>{0}<br><br>请参阅 IDE 日志以获取更多详细信息 (帮助 | <a href\="{1}">显示日志</a>)<html>
select.in.project.settings=项目结构
label.artifact.configurable.type=按类型分组\: 
configurable.RemoteRepositoriesConfigurable.display.name=远程 Jar 存储库
project.new.wizard.module.name.title=模块名 (&M)\:
action.name.inline.artifact=内联原型
action.text.add.packaging.element=添加...
configurable.library.prefix=库
project.roots.no.jdk.on.project.title=创建SDK
find.usage.view.no.usages.text=没有发现用法
title.select.jdk=选择JDK
libraries.remove.confirmation.title=移除库
add.group.framework.separator=框架
label.library.will.be.created.description.text={0}级库 <b>{1}</b> 以及 {2} 个文件将被创建
drag.n.drop.text.0.packaging.elements={0}元素
dialog.title.change.module.names=更改模块名称
project.module.compile.output.path=使用模块编译输出路径
add.new.jdk.text=添加新SDK
library.sources.node=源
prompt.new.project.file.name=输入文件名来创建新的{0}{1}
module.paths.output.label=输出目录\:
action.text.pack.element.into.0=打包到 {0}
add.new.global.library.text=新建全局库
prompt.please.specify.java.sources.directory=请指定从中可以找到项目源文件的目录。\n此路径应对应于默认（根、未命名、顶层）包。\n注意：该程序仅识别位于这些目录下的源文件。
action.text.add.to.modules=添加到模块...
dialog.message.artifact.0.already.exists=构件 ''{0}'' 已存在\!
project.settings.display.name=项目结构
button.unmark.resource=取消标记资源
project.new.wizard.module.content.root.chooser.title=选择模块内容根
project.new.wizard.from.existent.sources.title=从现有来源创建{0} (&E)
configurable.FrameworkDetectionConfigurable.display.name=检测
settings.remote.repo.service.connection.successful=服务连接成功
facet.banner.text=Facet ''{0}''
dialog.title.search.library.in.maven.repositories=搜索 Maven 存储库中的库
new.library.file.chooser.title=新的库文件
action.mark=标记
project.import.open.existing=现有{1}在 ''{2}''中. 是否打开现有项目或者删除它,然后导入 ''{3}''?
module.paths.test.output.title=选择测试输出目录
message.text.dependencies.were.successfully.collected.in.0.toolwindow="{0}" 工具窗口中已成功收集依赖关系
progress.title.0.library.files={0} 库文件
project.import.open.existing.openExisting=打开现有项目
title.mark.source.directory=标记源目录
configurable.artifact.prefix=构件
library.attach.sources.description=选择库源所在的JAR/ZIP文件或目录
action.name.facet.navigate=导航
action.attach.external.project.description=将 {0} 项目链接到当前的 IDE 项目
dialog.message.0.do.you.want.to.proceed={0}\n\n您想继续吗?
message.text.stop.searching.for.frameworks={0}目前正在搜索框架.您想停止搜索吗?
libraries.remove.confirmation.text=库''{0}''和{1} 以及更多的{1, choice, 1\#库|2\#库} 正在项目中使用。\n 您确定要删除所有选定的库吗?
jdk.combo.box.none.item=<无>
error.resolve.generic=解析错误
action.name.extract.artifact=提取构件...
prompt.overwrite.project.file={1}文件 ''{0}''已存在.是否覆盖?
module.circular.dependency.warning.description=<html><b>以下模块之间有循环依赖关系\:</b> {0}</html>
action.text.0.disabled.if.elements.are.sorted={0} （如果对元素进行排序，则禁用）
error.project.undefined=没有定义外部项目配置文件
dialog.title.extract.artifact=提取构件
find.pointcut.applications.not.found.title=信息
artifact.source.items.tree.tooltip=<html>双击元素放入默认位置<br>拖放元素添加到所需位置<br>弹出菜单中有更多操作可用</html>
library.attach.sources.action.busy.text=附加...
action.text.new.module=添加模块
dialog.title.edit.repository.0=编辑 {0}
button.unmark.test.resource=取消标记测试资源
project.roots.module.duplicate.name.message=重复的模块名称
title.question=问题
prompt.please.select.project.jdk=请选择项目SDK,作为所有项目模块的默认SDK.
project.roots.module.groups.text=模块组用于逻辑组织项目模块.
project.roots.external.annotations.description=<html>管理附加到此模块的外部注解.</html>
settings.remote.repo.artifactory.nexus.or.bintray=Artifactory、Nexus 或 Bintray 服务 URL
module.new.action=新模块
project.roots.native.library.node.text=原生库位置
button.add.selected=添加选定内容
label.project.roots.not.found=项目源文件未找到.
progress.text.processing.0.project.roots=正在处理 {0} 项目根...
label.missed.libraries.text=在模块依赖关系列表中找不到''{0}''库
message.text.error.creating.deployment.descriptor=创建部署项目错误\:{0}
error.message.the.selected.node.consist.of.several.elements.so.it.cannot.be.edited=所选节点由多个元素组成，因此无法对它进行编辑。\n关闭"显示元素内容"复选框以编辑输出布局。
project.structure.empty.text=<html><body><center>在此处选择要查看或编辑其详细信息的设置</center></body></html>
checkbox.0.library.files.to.copy=库文件复制到\:
checkbox.0.library.files.to.move=库文件移动到\:
library.source.mismatch=库源与类{0}的字节码不符
dialog.title.add.frameworks.support=添加框架支持
classpath.add.module.dependency.action=模块依赖...
label.new.name.for.0.1={0} ''{1}'' 的新名称：
module.libraries.choose.sources.button=选择源 (&S)...
combobox.item.global.library=全局库
popup.title.select.library.type=选择库类型
label.text.the.following.frameworks.are.detected=<html>在项目中检测到多个框架。请检查以下项目并排除错误检测到的项目。</html>
project.roots.library.problem.message=依赖关系列表中的无效项''{0}''
sdk.configure.annotations.tab=注解
project.roots.jdk.banner.text=SDK ''{0}''
progress.text.searching.frameworks=搜索框架. 请稍候.
module.new.action.description=向项目添加新模块
module.paths.validation.duplicate.source.root.in.same.module.error=源根"{0}"在模块"{1}"中重复.
progress.title.downloading.sources=正在下载源码
label.text.output.directory=输出目录\:
prompt.project.wizard.directory.does.not.exist={0}"{1}"\n不存在。它将由{2}创建。
project.roots.path.tab.title=路径
dialog.title.copy.artifact=复制构件
button.mark.all=标记所有 (&M)
module.group.banner.text=模块组 ''{0}''
artifacts.add.copy.action=添加其副本
sdk.configure.editor.title=SDK编辑器
configurable.ErrorPaneConfigurable.display.name=问题
project.inherit.compile.output.path=继承项目编译输出路径
library.unnamed.text={0}和{1, choice, 1\#另一个文件|2\#{1}个文件}
error.message.module.name.prefix.contains.empty.string=前缀必须是由点分隔的字词序列
project.roots.classpath.format.label=依赖存储格式\:
project.import.select.title=选择{0}导入项目
rename.message.prefix.module=模块
module.javadoc.add.path.prompt=选择模块javadoc文档的JAR/zip文件或目录
project.import.open.existing.reimport=删除现有项目并导入
tab.title.output.layout=输出布局
output.tab.title=输出
project.new.wizard.module.file.chooser.title=选择模块文件父目录
action.text.put.source.item.into.0=置于 {0}
action.text.library.0.to.1.copy=复制到 {0}...
action.text.library.0.to.1.move=移动到 {0}...
settings.remote.repo.no.services=无服务
directory.module.file=模块文件目录
label.please.enter.project.name=输入名称创建一个新的{0}{1}.
error.message.required.library.is.not.configured=无法为项目启用{0},因为它们的库未配置.
project.roots.module.jdk.problem.message=模块SDK未定义
banner.slogan.artifact.0=构件''{0}''
action.description.change.module.names=通过更改模块名称的通用前缀，来调整模块的自动分组
module.paths.exclude.output.checkbox=排出输出目录
project.roots.project.jdk.problem.message=项目SDK未定义
project.import.default.name=从{0}导入的
label.text.specify.artifact.name=指定构件名称\:(&N)
message.no.module.dependency.candidates=未发现要依赖的模块
dialog.title.download.library.from.maven.repository=从 Maven 存储库下载库
module.module.language.level=语言级别 (&L)\: 
project.import.show.settings.after=导入后打开项目结构 (&O)
prompt.stop.searching.for.sources={0}是当前找到的源码,是否停止搜索?
label.component.file.location={0}文件位置\: (&L)
dialog.title.remove.elements=移除元素
project.settings.title=\ 项目设置
dialog.title.obsolete.library.files.remover.delete.files=删除未使用的文件
error.message.module.name.cannot.be.empty=模块名称不能为空
file.chooser.directory.for.downloaded.libraries.description=下载的库将被复制到选定的目录
project.structure.platform.title=平台设置
description.select.project.file.directory={0}文件将被存储在该目录
checkbox.text.build.on.make=包含在项目构建中 (&B)
project.facets.display.name=Facet
module.paths.searching.source.roots.progress=搜索{0}中的源根
label.library.level=级别 (&L)：
sdk.configure.javadoc.tab=文档路径
add.external.annotations.path.title=添加外部注解的路径
library.source.show.diff=展示差异
prompt.relative.path.to.sources.empty=源码的相对路径是空的.是否标记"{0}"作为一个源码目录?
project.new.wizard.progress.title=初始化 ...
sdk.paths.specify.url.button=指定URL...
dialog.text.enter.common.prefix.comment=<html>这些模块在 IDE 中按照名称进行分组。<br>如果多个模块的名称具有通用的前缀，则会显示在一起。</html>
copy.module.dialog.title=复制模块
project.directory.is.already.taken=目录 ''{0}'' 已被项目 ''{1}'' 占用。请选择其他位置。
progress.title.loading.templates=正在加载模板
create.default.library.type.action.name=Java
project.new.wizard.import.description=<html>从外部模型({2})创建{0} {1}</html>
label.project.roots.have.been.found=找到项目的源文件。请选择将被添加到项目根的目录。这些路径对应于默认（根、未命名、顶层）包。\n注意：该程序仅识别位于这些目录下的源文件。
error.title.required.library.is.not.configured=未配置
combobox.item.module.library=模块库
add.new.project.library.text=新建项目库
action.AnActionButton.text.remove=移除
display.name.artifacts=构件
error.message.library.0.already.exists=已存在库 ''{0}''
notification.title.io.error=IO异常
import.module.action.text=从现有来源{0, choice, 0\#导入 |1\#}{1, choice, 0\#Java |1\#}模块...
library.name.not.specified.title=库名未指定
classpath.message.library.already.added=库''{0}''已经添加到此模块中
library.javadocs.node=JavaDoc
notification.title.repository.libraries.cleanup=存储库库清理
label.relative.output.path=相对输出路径 (&P)：
settings.remote.repo.no.repositories.found=找不到存储库
error.message.library.name.is.not.specified=未指定库名
settings.remote.repo.maven.jar.repositories=Maven jar 存储库：
file.location.should.be.absolute={0}位置路径应该是绝对的
sdk.configure.classpath.tab=类路径
label.module.name=模块名\: (&M)
module.paths.test.output.label=测试输出目录\:
project.language.level.name=<html><b>项目语言级别\:</b></html>
project.language.level.description=<html>此语言级别是所有项目模块的默认级别。<br>可以根据需要为每个模块配置模块特定语言级别。</html>
module.add.error.title=添加模块
module.paths.validation.source.root.belongs.to.another.module.error=源根"{0}"\n不能在模块"{1}"中定义,因为它属于嵌套模块"{2}"的内容
button.stop.searching=停止搜索 (&S)
label.enter.new.name.for.merge.result=为合并结果输入新名称：
dialog.title.merge.module.or.library=合并
library.choose.one.to.attach=<html><body>多个库包含文件.<br>选择要附加源的库</body></html>
radio.create.source.directory=创建源码目录 (&C)
dialog.title.add.framework.0.support=添加 {0} 支持
action.text.put.into.0.and.link.via.manifest=置于 ''{0}'' 并通过清单链接
project.roots.no.jdk.on.project.message=在项目中设置创建的SDK?
prompt.please.select.module.jdk=选择{0}设为此模块
project.new.wizard.module.file.title=模块文件位置 (&U)\:
module.javadoc.add.url.button=添加 JavaDoc URL...
action.stop.searching=停止搜索
dialog.title.project.initialization.failed=项目初始化失败
project.roots.display.name=模块
settings.remote.repo.artifactory.nexus.or.bintray.service.urls=Artifactory、Nexus 或 Bintray 服务 URL：
dialog.title.add.repository.0=添加 {0}
action.text.cancel.exclusion=取消排除
title.test.resources=测试资源
multiple.facets.banner.0.1.facets={0} {1} facet
title.resources=资源
combobox.item.project.library=项目库
action.text.import.module=导入模块
prompt.overwrite.project.folder={0}文件夹已存在于{1}中.是否覆盖?
label.library.name=名称\:
button.configure.e=配置...
project.roots.module.banner.text=模块 ''{0}''
label.text.no.frameworks.detected=未检测到框架.
directory.module.content.root=模块内容根
label.missed.libraries.prefix=以下库丢失\:
library.classes.node=类
notification.title.downloading.failed=下载失败
classpath.chooser.title.add.module.dependency=选择模块
action.name.rename.packaging.element=收藏列表的新名称
module.remove.confirmation.title=移除模块
settings.label.project.format=项目格式：
prompt.enter.project.file.location=输入{0}文件位置
dependencies.used.in.popup.title=用于
module.libraries.attach.sources.button=附加源 (&S)...
label.enter.library.name=输入库名称：
module.paths.validation.duplicate.content.error=为"{1}"和"{2}"定义了内容根"{0}".\n项目中的两个模块不能共享相同的内容根.
quarantine.dialog.message=操作系统将此文件夹标记为“隔离”,可能是因为您已从网络下载。从这些文件夹打开文件可能无法正常工作。要清除隔离状态吗？\n {0}
label.project.jdk=项目SDK\:
label.java.source.files.have.been.found=找到模块的源文件。 请选择将被标记为源路径的目录。这些路径对应于默认（根、未命名、顶层）包。\n注意：该程序仅识别位于这些目录下的源文件。
project.new.wizard.module.content.root.chooser.description=所选目录将被标记为模块内容根
library.configure.title=配置库
modules.order.export.export.column=导出
action.text.analyze.this.dependency=分析 This 依赖关系
project.import.wizard.title=从{0}导入
action.attach.external.project.text=链接 {0} 项目
configurable.GlobalLibrariesConfigurable.display.name=全局库
project.directory.is.not.writable=目录 ''{0}'' 似乎不可写。请选择其他位置。
module.remove.last.confirmation=您确定要从此项目中移除{0, choice, 1\#唯一的模块|2\#全部模块}?\n不会删除磁盘上的文件.
title.select.project.file.directory=选择{0}文件目录
dialog.title.cannot.create.0.facet=无法创建 {0} Facet
settings.remote.repo.maven.repository.url=Maven 存储库 URL
progress.searching.for.sources=正在{0}中搜索源代码. 请稍候...
project.roots.plain.mode.action.text.enabled=显示模块分组
configurable.JdkListConfigurable.display.name=SDK
enter.module.copy.name.error.message=输入模块复制的名称
module.javadoc.add.path.title=添加路径到JavaDoc
project.roots.external.annotations.tab.title=外部注解
error.message.no.files.were.downloaded.for.0=未为 {0} 下载任何文件
sdk.configure.title=配置SDK
dialog.title.0.library.copy=复制库
dialog.title.0.library.move=移动库
dialog.text.enter.common.prefix=为 {0} 个选定模块的名称指定前缀：
class.file.decompiled.text=反编译 .class文件
settings.remote.repo.Maven.Repository.URL=maven 存储库 URL
project.roots.tooltip.library.has.broken.paths=库''{0}''已经丢失路径.
project.sdk.not.defined=未定义项目 JDK
module.sdk.not.defined=未定义模块 JDK
label.enter.artifact.name=输入构件名称：
project.new.wizard.import.title=从外部模型导入{0} (&M)
library.name.already.exists.error=库"{0}"已经存在
progress.title.searching.source=正在搜索源...
error.source.directory.should.be.under.module.content.root.directory=源目录不能在模块内容根目录下
project.new.wizard.module.file.description=模块.iml文件将被放置在选定的目录中
dialog.mesage.0.was.not.loaded={0} 未加载。
project.roots.replace.library.entry.message=您真的想替换旧的图书馆''{0}''吗?
setup.library.dialog.title=安装库
warning.text.0.do.you.want.to.overwrite.these.files={0}覆盖{1,choice,1\#该|2\#这些}文件吗?
action.continue.searching=继续搜索
new.project.action.text={0, choice, 0\#新建|1\#}{1, choice, 0\#Java |1\#}项目...
project.import.default.name.dotIdea=从{0}导入的
chooser.description.select.directory.where.external.annotations.are.located=选择外部注解所在的目录
label.source.directory=以下目录将被标记为源码目录\:
chooser.title.directory.for.library.files=库文件目录
rename.module.title=重命名模块
action.text.change.module.names=更改模块名称...
error.message.module.name.prefix.contains.invalid.chars=前缀必须由可在文件名中使用的字符组成 
path.0.is.invalid.error.message=路径''{0}''无效
classpath.add.simple.module.library.action=JARs或目录...
project.new.wizard.from.existent.sources.description=<html>在现有来源上创建{0} {1}结构</html>
dialog.title.copy.library=复制库
action.text.sort.elements.by.names.and.types=按名称和类型对元素进行排序
dialog.title.new.library=新建库...
can.t.find.library.for.0=找不到 {0} 的库
empty.module.selection.string=在此处选择一个模块以查看或编辑其详细信息
library.name.already.exists.title=库已经存在
message.text.creating.deployment.descriptor=创建部署描述
modules.order.export.scope.column=范围
choose.modules.dialog.title=选择模块
class.file.open.source.action=打开源文件
library.java.attach.files.description=选择库类,源,文档或本机库所在的文件或目录
project.roots.project.banner.text=项目 ''{0}''一般设置
library.attach.sources.action=附加源
quarantine.cleaner=隔离清除器
chooser.title.attach.external.annotations=附加外部注解
dialog.title.cannot.change.library.0.copy=无法复制
dialog.title.cannot.change.library.0.move=无法移动
library.name.not.specified.error=请输入库名
error.directory.read.only=目录 "{0}" 是只读的
project.roots.javadoc.tab.description=<html>管理附加到此模块的外部 JavaDoc。外部 JavaDoc 重写模块中可能具有的 JavaDoc 注解。</html>
dialog.title.rename.module.or.library.0=重命名 {0}
module.remove.confirmation=从项目移除{1, choice, 1\#模块 ''''{0}''''|2\#{1}个模块}?\n不会删除磁盘上的文件.
title.no.jdk.specified=未指定SDK
project.roots.error.message.invalid.roots=无效{0}根
label.available.elements=可用元素 
new.library.file.chooser.description=选择jar文件所在的本地类库
dialog.message.obsolete.library.files.remover.delete.files=以下选定的 {0,choice,1\#文件不再|2\#文件不再}使用：{1}是否要删除{0, choice,1\#它|2\#它们}您可能无法完全撤消此操作！
module.paths.searching.source.roots.title=添加源根
project.roots.library.banner.text={1} ''{0}''
settings.remote.repo.no.remote.repositories=无远程存储库
module.libraries.target.jdk.module.radio=模块SDK (&M)\:
dialog.title.cannot.create.facet=无法创建 Facet
classpath.panel.navigate.action.text=导航
facet.defaults.display.name=默认
quarantine.clean.progress=隔离清除器状态
quarantine.error.message=清除隔离状态时出错\: {0}
chooser.title.exclude.from.library=从库中排除
radio.do.not.create.source.directory=不要创建源码目录 (&D)
jdk.missing.item=<无 SDK>
button.set.default=设置默认值
prompt.enter.relative.path.to.module.content.root=为模块内容根输入相对路径  (例如\: java{0}src)\:
classpath.add.library.action=库...
error.cannot.parse.project=无法解析 {0} 项目
project.new.wizard.module.root.title=内容根 (&R)\:
sdk.configure.save.settings.error=无法保存设置
action.description.add.the.library.to.the.dependencies.list.of.chosen.modules=将此库添加到所选模块的依赖项列表
settings.remote.repo.service.url=服务 URL
project.language.level.combo.item=项目默认
dialog.title.include.transitive.dependencies=包括传递依赖项
action.do.not.mark=不要标记
dialog.title.split.module.or.library.0=拆分 {0}
intention.family.maven.libraries=Maven 库
facet.type.banner.text=''{0}''Facets
module.add.error.message=向项目添加模块时出错\: {0}
label.project.format=项目格式：
module.0.already.exists.error.message=模块''{0}''已存在
info.text.found.0.br.showing.1=<html>找到：{0}<br>显示：{1}</html>
file.chooser.directory.for.downloaded.libraries.title=下载的库的目录
artifacts.create.action=创建 {0}
action.text.extract.source.item.into.0=提取到 {0}
library.remove.action=移除
button.unmark.all=取消标记所有 (&U)
error.message.please.enter.valid.coordinate.discover.it.or.select.one.from.the.list=请输入有效的坐标、发现它或从列表中选择一个
warning.message.some.required.libraries.wasn.t.downloaded=某些必需的库未被下载.您需要它吗?
library.source.open.class=打开 .class文件
chooser.description.select.directories.which.should.be.excluded.from.the.library.content=选择应从库内容中排除的目录。IDE 不会处理排除目录的内容。
configurable.ProjectLibrariesConfigurable.display.name=库
dialog.title.failed.to.download.library=下载库失败
intention.text.add.0.library.to.module.dependencies=将 {0} 库添加到模块依赖项
prompt.select.source.directory=选择源代码目录
label.text.please.select.desired.technologies=<html>请选择所需的技术.<br>这将下载所有需要的库,并在项目配置中创建Facet.</html>
module.paths.output.title=选择输出目录
module.paths.validation.duplicate.source.root.error=模块"{0}"\n能包含源根"{1}".\n根已经属于模块"{2}"
chooser.title.select.directory.containing.module.files=选择包含模块文件的目录
module.javadoc.title=JavaDoc
title.directory.does.not.exist=目录不存在
add.external.annotations.path.description=选择模块源的外部注解所在的路径
sdk.configure.sourcepath.tab=源路径
loading.text.looking.for.jdks=正在查找 JKS...
error.message.please.enter.valid.library.files.path=请输入有效的库文件路径
add.new.module.text.full=模块
project.roots.classpath.format.default.descr=IntelliJ IDEA (.iml)
module.classpath.button.edit=编辑... (&I)
choose.modules.dialog.description=库 ''{0}'' 将添加到选定的模块中。
dialog.message.no.suitable.modules.for.0.facet.found=找不到适合 {0} facet 的模块
project.roots.output.compiler.title=编译器输出
tab.name.all.facets=全部Facets
section.title.test.resource.folders=测试资源文件夹
module.circular.dependency.warning.short={0}之间存在循环依赖关系
import.project.action.text=从现有来源{0, choice, 0\#导入 |1\#}{1, choice, 0\#Java |1\#}项目...
action.description.remove.packaging.elements=移除所选元素
section.title.resource.folders=资源文件夹
classpath.chooser.description.add.module.dependency=选择当前模块应该依赖的模块\:
module.libraries.target.jdk.select.title=选择项目SDK
error.message.the.selected.node.belongs.to.0.element.so.it.cannot.be.edited=所选节点属于 ''{0}'' 元素，因此无法对它进行编辑。\n关闭"显示元素内容"复选框以编辑输出布局。
action.description.inline.module.dependency=将没有源根目录的模块的依赖关系替换为其依赖关系列表
module.libraries.target.jdk.project.radio.name=<b>项目 SDK(&P)\:</b>
module.libraries.target.jdk.project.radio.description=该 SDK 是所有项目模块的默认值。<br>可以根据需要为每个模块配置特定于该模块的 SDK。
project.roots.plain.mode.action.text.disabled=隐藏模块分组
dialog.title.configure.library.0=配置 {0}
directory.project.file.directory={0}文件目录\n
project.roots.replace.library.entry.title=库已经添加
add.new.header.text=添加
classpath.title.adding.dependency=添加依赖关系...
library.root.node=根
settings.project.name=<html><b>项目名称：</b></html>
action.text.inline.module.dependency=内联模块依赖关系
action.name.remove.packaging.element=移除
project.compiler.output.name=<html><b>项目编译器输出\:</b></html>
project.compiler.output.description=<html>此路径用于存储所有项目编译结果。<br>在此路径下创建每个模块的相应目录。<br>该目录包含两个子目录\: 生产和测试，分别用于存储生产代码和测试源。<br>可以根据需要为每个模块配置特定于该模块的编译器输出路径。</html>
prompt.confirm.project.no.jdk=要创建一个没有指定SDK的项目?SDK是编译必需的.用于调试或运行应用.
settings.remote.repo.service.connection.failed=服务连接失败
dialog.message.no.suitable.parent.0.facets.found=找不到合适的父级 {0} facet
action.text.hide.content=隐藏内容
error.message.failed.to.download.sources.0=下载源码失败：{0}
error.message.failed.to.save.0=无法保存 {0}
notification.content.libraries.reloaded={0, choice, 0\#没有任何库|1\#一个库|2\#{0} 个库} 成功重新加载
action.description.convert.to.repository.library=将常规库转换为存储库库，该库还存储其 Maven 坐标，因此 IDE 可以自动下载库 JAR（如果缺少）
action.text.convert.to.repository.library=转换为存储库库...
button.text.replace=替换
dialog.message.no.files.were.downloaded=未下载任何文件。是否要尝试其他坐标？
dialog.title.no.files.were.downloaded=下载库失败
dialog.title.replace.library=替换库
dialog.message.cannot.detect.maven.coordinates=无法从库 JAR 检测 Maven 坐标
dialog.message.multiple.maven.coordinates=在库 JAR 中找到多个 Maven 坐标
dialog.message.do.you.want=是否要手动搜索 Maven 存储库？
dialog.title.cannot.detect.maven.coordinates=无法检测到 Maven 坐标
task.title.comparing.jar.files=正在比较 JAR 文件...
action.text.class.path.move.up=上移(如果项目按排序顺序显示，则禁用)
action.text.class.path.move.down=下移(如果项目按排序顺序显示，则禁用)
configurable.empty.text.select.library=在此处选择一个库以查看或编辑其详细信息
action.name.text=文本文件
dialog.message.cannot.file.copy=无法复制文件 {0}\: {1}
dialog.message.cannot.file.move=无法移动文件 {0}\: {1}