dart.color.settings.description.error=分析错误
dart.color.settings.description.warning=分析警告
dart.color.settings.description.hint=分析提示
dart.color.settings.description.block.comment=块注释
dart.color.settings.description.doc.comment=文档注释
dart.color.settings.description.line.comment=行注释

dart.color.settings.description.number=数字
dart.color.settings.description.string=字符串
dart.color.settings.description.symbol.literal=符号文字
dart.color.settings.description.valid.string.escape=转义序列
dart.color.settings.description.invalid.string.escape=无效的转义序列
dart.color.settings.description.operator=运算符
dart.color.settings.description.parenths=括号
dart.color.settings.description.brackets=方括号
dart.color.settings.description.braces=大括号
dart.color.settings.description.comma=逗号
dart.color.settings.description.dot=点
dart.color.settings.description.semicolon=分号
dart.color.settings.description.colon=冒号
dart.color.settings.description.fat.arrow=粗箭头
dart.color.settings.description.bad.character=坏字符

dart.color.settings.description.annotation=注解
dart.color.settings.description.class=类
dart.color.settings.description.constructor=构造函数

dart.color.settings.description.dynamic.local.variable.declaration=动态局部变量声明
dart.color.settings.description.dynamic.local.variable.reference=动态局部变量引用
dart.color.settings.description.dynamic.parameter.declaration=动态参数声明
dart.color.settings.description.dynamic.parameter.reference=动态参数引用

dart.color.settings.description.enum=枚举
dart.color.settings.description.enum.constant=枚举常量
dart.color.settings.description.function.type.alias=函数类型别名

dart.color.settings.description.identifier=标识符
dart.color.settings.description.instance.field.declaration=实例字段声明
dart.color.settings.description.instance.field.reference=实例字段引用
dart.color.settings.description.instance.getter.declaration=实例 getter 声明
dart.color.settings.description.instance.getter.reference=实例 getter 引用
dart.color.settings.description.instance.method.declaration=实例方法声明
dart.color.settings.description.instance.method.reference=实例方法引用
dart.color.settings.description.instance.setter.declaration=实例 setter 声明
dart.color.settings.description.instance.setter.reference=实例 setter 引用

dart.color.settings.description.import.prefix=导入前缀
dart.color.settings.description.keyword=关键字
dart.color.settings.description.label=标签
dart.color.settings.description.library.name=库名称

dart.color.settings.description.local.function.declaration=局部函数声明
dart.color.settings.description.local.function.reference=局部函数引用
dart.color.settings.description.local.variable.declaration=局部变量声明
dart.color.settings.description.local.variable.reference=局部变量引用

dart.color.settings.description.parameter.declaration=参数声明
dart.color.settings.description.parameter.reference=参数引用

dart.color.settings.description.static.field.declaration=static 字段声明
dart.color.settings.description.static.getter.declaration=static getter 声明
dart.color.settings.description.static.getter.reference=static getter 引用
dart.color.settings.description.static.method.declaration=static 方法声明
dart.color.settings.description.static.method.reference=静态方法引用
dart.color.settings.description.static.setter.declaration=static setter 声明
dart.color.settings.description.static.setter.reference=static setter 引用

dart.color.settings.description.top.level.function.declaration=顶层函数声明
dart.color.settings.description.top.level.function.reference=顶层函数引用
dart.color.settings.description.top.level.getter.declaration=顶层 getter 声明
dart.color.settings.description.top.level.getter.reference=顶层 getter 引用
dart.color.settings.description.top.level.setter.declaration=顶层 setter 声明
dart.color.settings.description.top.level.setter.reference=顶层 setter 引用
dart.color.settings.description.top.level.variable.declaration=顶层变量声明

dart.color.settings.description.type.name.dynamic='dynamic' 类型
dart.color.settings.description.type.parameter=类型参数
dart.color.settings.description.unresolved.instance.member.reference=不可解析的动态引用

dart.analysis.progress.title=正在分析...
dart.analysis.progress.with.file=分析 {0}

cannot.resolve.reference=无法解析引用
dart.file=Dart 文件
new.dart.file.title=新 Dart 文件
create.dart.file.0=创建 Dart 文件 {0}
dart.title=Dart
dart.sdk.path.label=Dart SDK 路径(&D)\:
version.label=版本：
set.sdk.to.see.sample.content.options=请设置 Dart SDK 路径。
dart.sdk.bad.dartpub.path=找不到 pub 可执行文件\: \n\
{0}
overrides.method.in=覆盖 ''{1}'' 中的方法 ''{0}''
overrides.operator.in=覆盖 ''{1}'' 中的运算符 ''{0}''
implements.method.in=实现 ''{1}'' 中的方法 ''{0}''
fields.to.generate.getters=选择字段生成Getter
fields.to.generate.setters=选择字段生成Setter
fields.to.generate.getters.setters=选择字段生成Getter和Setter
dart.override.method=选择要覆盖的方法
dart.implement.method=选择要实现的方法

runner.command.line.configuration.name=Dart 命令行应用
runner.command.line.configuration.description=Dart 命令行应用程序

remote.debug.configuration.name=Dart 远程调试
remote.debug.configuration.description=Debug 远程 Dart 命令行应用程序
remote.debug.search.sources.in=在其中搜索源码(&E)\:
remote.debug.hint=<html>启动后，此调试配置将提示要连接的 Dart 服务协议 URL。<br/><br/>对于 <a href\='https\://dart.dev/tools/dart-vm'>Dart VM</a> apps pass <code>--enable-vm-service</code> 以及可能的 <code>--pause_isolates_on_start</code> VM 选项。<br/>对于其他上下文，例如 Dart Web 应用 — 使用适当的标志和选项。</html>

webdev.debug.configuration.name=Dart Web
webdev.debug.configuration.description=使用 webdev 工具启动 Dart Web 应用程序
choose.html.main.file=选择 HTML 文件
old.dart.sdk.for.webdev=使用 Webdev 调试 Dart Web 应用时需要 Dart SDK {0}+，当前版本\: {1}。

dart.project.description=创建用于 Dart 编程语言的项目
project.template.not.selected=未选择项目模板
dart.web.app.title=Dart Web 应用
dart.commandline.app.title=Dart 命令行应用
choose.dart.main.file=选择 Dart 文件
choose.dart.directory=选择 Dart 目录
livetemplate.description.iter=迭代 (for..in)
livetemplate.description.itar=遍历数组元素
dart.language.id=Dart
dart.surround.with.parenthesis=(表达式)
dart.surround.with.not.parenthesis=\!(表达式)
working.dir.0=工作目录\: {0}
dart.pub.get.title=Pub Get
dart.pub.upgrade.title=Pub 升级
dart.pub.outdated.title=Pub Outdated
dart.pub.build.title=Pub Build
dart.webdev.build.title=Webdev Build
dart.pub.cache.repair.title=Pub Repair Cache
dart.pub.cache.repair.message=<html><a href\='https\://dart.dev/tools/pub/cmd/pub-cache'>pub cache repair</a> 命令对系统缓存中所有托管的包和 git 包执行干净的重装<br/>。<br/><br/>是否开始修复缓存?</html>
refactoring.introduce.selection.error=无法使用所选元素执行重构
refactoring.introduce.variable.dialog.title=引入变量
runner.test.configuration.name=Dart 测试
runner.test.configuration.description=Dart 单元测试运行配置
dart.pub.exception=异常\: {0}
dart.refactoring.extract.method.error=提取方法错误
refactoring.introduce.final.variable.dialog.title=引入常量
dart.extract.method=提取方法
dart.refactoring.introduce.error=引入错误
dart.refactoring.introduce.anchor.error=无法找到结果的位置
dart.refactoring.move.file.dialog.title=移动文件例外
dart.refactoring.move.file.dialog.error.applying.change=尝试应用移动文件重构时发生异常。
dart.refactoring.move.file.dialog.error.computing.change=尝试为文件移动计算文件更改时发生异常\: {0}“

dart.fix.getter.none.found=找不到要为之生成 getter 的 private 字段
dart.fix.setter.none.found=找不到要为之生成 setter 的 private 字段
dart.fix.gettersetter.none.found=找不到要为之生成 getter/setter 的 private 字段
dart.fix.implement.none.found=找不到要实现的方法
dart.fix.override.none.found=找不到要覆盖的方法

dart.hierarchy.object=所有类派生自对象

inspections.group.name=Dart
dart.sdk.is.not.configured=未配置 Dart SDK
setup.dart.sdk=设置 Dart SDK
dart.support.is.not.enabled.for.project=未为项目启用 Dart 支持
dart.support.is.not.enabled.for.module.0=未为模块 ''{0}'' 启用 Dart 支持
enable.dart.support=启用 Dart 支持
open.dart.settings=打开 Dart 设置
dart.support.enabled.for.module.0=为模块 ''{0}'' 启用了 Dart 支持
dart.support.enabled=已启用 Dart 支持
dart.sdk.0.open.dart.settings=<html>Dart SDK {0}<br/><br/><a href\="settings">打开 Dart 设置</a></html>
old.dart.sdk.configured=要正确地突出显示代码，必须具备 Dart SDK {0}+。当前版本\: {1}
download.dart.sdk=下载 Dart SDK
dart.sdk.update.title=Dart SDK 更新
new.dart.sdk.available.for.download..notification=<html>有新版本的 Dart SDK ({0}) 可供下载。<br/>当前版本\: {1}。<br/><br/><a href\="download">下载 Dart SDK</a>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<a href\="settings">打开 Dart 设置</a></html>
dart.sdk.update.check.failed=无法检查 Dart SDK 更新。
checking.dart.sdk.update=检查 Dart SDK 更新
dart.sdk.0.is.up.to.date=所配置的 Dart SDK {0} 已是最新版本。
new.dart.sdk.0.available.for.download..dialog=<html>Dart SDK ({0}) 的新版本可供<a href\="{1}">下载</a>。</html>
dart.sdk.0.available.for.download=<html>Dart SDK ({0}) 可供<a href\="{1}">下载</a>。</html>

outdated.dependencies.inspection.name=包依赖项过时
pub.get.never.done=尚未运行 'Pub get'
pubspec.edited=已编辑 Pubspec
pub.get=Pub get
pub.upgrade=Pub upgrade
pub.outdated=Pub outdated
webdev.build=Webdev build...
open.pubspec=打开 pubspec
ignore.warning=忽略更改

path.package.reference.inspection.name=路径包引用
pubspec.yaml.not.found.in=在 {0} 中找不到 pubspec.yaml 文件
path.package.reference.to.itself=Dart 包无法将自身列为依赖项
folder.0.not.in.project.content=文件夹 {0} 不在项目内容中
configure.folder.0.as.content.root=将文件夹 {0} 配置为内容根
configure.folder.as.content.root=将文件夹配置为内容根
add.content.root.title=添加内容根
can.not.add.content.root=无法添加内容根。\n\
{0}
configure.project.roots=配置项目根...
content.root.added.title=内容根已添加
content.root.added.to.project=<html>以下文件夹配置为该项目的附加内容根\: <br/><pre>{0}</pre><br/>要查看项目根配置，请打开<a href\="config">{1} | {2}</a></html>
content.root.added.to.module=<html>以下文件夹配置为模块 ''{0}'' 的附加内容根\: <br/><pre>{1}</pre><br/>要查看项目根配置，请打开<a href\="config">项目结构 | 模块| {0} </a></html>

path.to.dart.file.not.set=未指定 Dart 源代码路径
dart.file.not.found=找不到 Dart 文件\: {0}
not.a.dart.file=指定的文件并非 Dart 文件\: {0}
not.a.dart.file.or.directory=指定的文件并非 Dart 文件或目录\: {0}
work.dir.does.not.exist=工作目录不存在\: {0}
test.dir.not.in.project=目录不在 Dart 项目中

path.to.html.file.not.set=未指定 HTML 文件路径
html.file.not.found=找不到 HTML 文件\: {0}
not.a.html.file=指定的文件并非 HTML 文件\: {0}
html.file.not.within.dart.project=HTML 文件应位于 Dart 项目中
html.file.right.in.dart.project.root=HTML 文件应位于子文件夹(如 'web')中，不应位于 Dart 项目根中

dart.generate.constructor=Generate Constructor
dart.generate.named.constructor=生成命名构造函数
dart.generate.toString=生成 toString()
dart.generate.equalsAndHashcode=Generate \=\=() 和 hashCode
project.0=项目 ''{0}''
enable.dart.support.for.project.0=为项目 ''{0}'' 启用 Dart 支持(&E)
enable.dart.support.check.box=启用 Dart 支持(&E)
enable.dart.support.for.following.modules=为以下模块启用 Dart 支持(&N)
enable.dart.support.for.following.projects=为以下项目启用 Dart 支持(&N)\:
error.path.to.sdk.not.specified=错误\: 未指定 Dart SDK 路径。
error.folder.specified.as.sdk.not.exists=错误\: 指定为 Dart SDK 主页的文件夹不存在。
error.sdk.not.found.in.specified.location=错误\: 在指定位置找不到 Dart SDK。
warning.no.modules.selected.dart.support.will.be.disabled=警告\: 未选择任何模块。该项目将禁用 Dart 支持。
warning.no.projects.selected.dart.support.will.be.disabled=\ 警告\: 未选择任何项目。Dart 支持将被禁用。
debugger.trying.to.connect=正在尝试连接
connect.to.running.app.title=连接到运行的应用
enter.url.to.running.dart.app=调试正在运行的 Dart 或 Flutter 应用程序的服务 URL\: 
connect.to.running.app.comment=正在运行的 Dart 进程具有 VM 调试器服务，IDE 可以通过 URL 连接到该服务。在命令行启动进程后，将打印此 URL。
dart.line.breakpoints.title=Dart 行断点
test.0.in.1={0}在{1}
all.tests.in.0={0} 中的测试
open.observatory.action.text=打开 Observatory
open.observatory.action.description=打开 Observatory\: 面向 Dart 应用的分析器
dart.pop.frame.action.text=丢帧 (Dart)
dart.pop.frame.action.description=将当前框架从堆栈中弹出
stop.dart.webdev.server=停止 Dart Webdev 服务器
dart.webdev.server.output.contains.errors=<html><a href\="">Dart Webdev 服务器</a>输出包含错误。</html>
dart.webdev.server.output.contains.warnings=<html><a href\="">Dart Webdev 服务器</a>输出包含警告。</html>
stop.pub.process.action=停止 Pub 进程
rerun.pub.command.action.name=重新运行 Pub 命令
rerun.pub.command.action.description=再次运行相同的 Pub 命令

checkbox.collapse.parts=部分
checkbox.collapse.generic.parameters=泛型参数
dart.project.generate.sample.content.label=生成示例内容(&G)\:
dart.project.templates.loading.message=正在加载 Dart 项目模板...

toolwindow.stripe.Dart_Analysis=Dart 分析
dart.reanalyze.action.name=重新分析 Dart 源
dart.reanalyze.action.description=重新分析所有 Dart 源文件（不重启 Dart 分析服务器）
dart.restart.server.action.name=重启 Dart 分析服务器
filter.problems=过滤
filter.problems.description=筛选“Dart 分析”工具窗口中显示的问题
reset.filter=重置筛选器
group.by.severity=按严重程度分组
group.by.severity.description=按严重程度分组\: 表的顶部为错误，然后是警告，最后是提示
analysis.server.settings=分析器设置
analysis.server.settings.description=Dart 分析服务器设置
analysis.server.settings.title=Dart 分析服务器设置
open.dart.plugin.settings=启用 Dart 插件设置
analysis.server.settings.diagnostics=查看分析器诊断
analysis.server.settings.package.analysis=对当前包的范围分析
analysis.server.settings.ml.completion=启用基于机器学习的代码补全(&M)
analysis.server.settings.ml.completion.disabled=启用基于机器学习的代码补全 (Dart SDK 2.5+)
action.DartProblemsViewPanel.open.documentation.text=打开文档
action.DartProblemsViewPanel.open.documentation.description=在浏览器中打开详细的问题描述

analysis.server.terminated=分析服务器已终止
analysis.server.not.running=分析服务器未运行。
dart.vm.file.does.not.exist.at.0=以下位置不存在 Dart VM 文件\: {0}
analysis.server.snapshot.file.does.not.exist.at.0=在以下位置不存在 Dart Analysis Server 快照文件\: {0}
dart.vm.file.is.not.executable.at.0=Dart VM 文件在位置 {0} 不可执行
analysis.server.snapshot.file.is.not.readable.at.0=Dart Analysis Server 快照文件在以下位置无法读取\: {0}
issue.occurred.with.analysis.server=分析服务器发生了问题

action.Dart.DartSortMembers.text=对 Dart 文件中的成员排序
action.Dart.DartSortMembers.description=对 Dart 代码中的成员排序
dart.sort.members.action.name.ellipsis=对 Dart 文件中的成员排序...
dart.sort.members.hint.failed=无法对成员排序
dart.sort.members.hint.already.good=成员排序\: 成员已排序
dart.sort.members.hint.success=已成功对代码排序
dart.sort.members.files.no.dart.files=找不到适用的 Dart 文件。
dart.sort.members.files.dialog.question=对 {0, choice, 1\#个选定的文件|2\#the {0} 个选定的 Dart 文件}运行 Dart 成员排序器?

action.Dart.DartStyle.text=使用 Dartfmt 重新格式化代码
action.Dart.DartStyle.description=使用 dartfmt（Dart 样式格式化程序）格式化 Dart 代码
dart.style.action.name.ellipsis=使用 Dartfmt 重新格式化代码...
dart.style.hint.failed=重新格式化代码失败
dart.style.hint.already.good=重新格式化\: 无格式更改
dart.style.hint.success=重新格式化\: 代码成功格式化
dart.style.files.no.dart.files=找不到适用的 Dart 文件。
dart.style.files.dialog.question=对 {0, choice, 1\#个选定的文件|2\#the {0} 个选定的 Dart 文件}运行 dartfmt?
organized.directives=整理的指令
line.length=行长度(&L)
dartfmt.tooltip=<html>使用 Dart SDK 中的 <code>dartfmt</code> 工具格式化代码。参见<a href\='https\://github.com/dart-lang/dart_style/wiki/FAQ'>常见问题解答</a>。</html>

action.Dart.DartFix.text=使用 Dartfix 将代码迁移到 NNBD
action.Dart.Dartfix.description=使用 Dartfix 将 Dart 代码迁移到 NNBD
dart.fix.action.name.ellipsis=使用 Dartfix 修复代码...

failed.to.create.file.0.1=无法创建文件 {0}\:\n\
{1}

dart.quick.assist.family.name=Dart Analysis Server 提供的快速协助
goto.super.class.chooser.title=选择超类
usages.in.comments.to.rename=要重命名的注释中的用法
usages.in.code.to.rename=代码中要重命名的用法
dynamic.usages.to.rename=要重命名的代码中的潜在(动态)用法
rename.need.reRun=无法重命名。\n\
找到用法后，代码发生了更改。\n\
请再次调用重命名重构。

exportable.DartCodeFoldingSettings.presentable.name=代码折叠设置

analysis.server.status.good.text=提交分析器反馈...

analysis.server.show.diagnostics.text=查看分析器诊断...
analysis.server.show.diagnostics.error=打开 Dart Analysis Server 诊断页面时出错

dart.feedback.url=https\://github.com/dart-lang/sdk/issues/new?title\={0}\\&body\=
dart.feedback.template=\n\
\n\
\n\
\#\# 版本信息\n\
\n\
- `IDEA {0}`\n\
- `{1}`\n\
- `{2}`
dart.feedback.error=\n\
\n\
\#\# 异常\n\
```\n\
{0}\n\
```
dart.feedback.file=\n\
\n\
有关其他日志信息，请附加 file\://{0}的内容。

dart.analysis.server.error=遇到 Dart Analysis Server 错误。
dart.smartKeys.insertDefaultArgValues.text=在补全时插入默认参数值
dart.editor.showClosingLabels.text=在 Dart 源代码中显示关闭标签
dialog.paste.on.import.title=粘贴时更新导入
dialog.paste.on.import.text=<html>您粘贴的代码片段使用的库在新上下文中无法访问。<br/><br/>是否更新新文件中的导入?</html>

action.Dart.pub.cache.repair.text=Pub 缓存修复...
action.Dart.pub.cache.repair.description=运行 'pub cache repair'
action.Dart.build.text=Webdev Build...
action.Dart.build.description=运行 'webdev build'
action.Dart.pub.outdated.text=Pub Outdated
action.Dart.pub.outdated.description=运行 'pub outdated'
action.Dart.pub.upgrade.text=Pub Upgrade
action.Dart.pub.upgrade.description=运行 'pub upgrade'
action.Dart.pub.get.text=Pub Get
action.Dart.pub.get.description=运行 'pub get'
action.Generate.EqualsAndHashcode.Dart.text=\=\=() 和哈希码
action.Generate.ToString.Dart.text=toString()
action.Generate.GetSetAccessor.Dart.text=Getter 和 Setter
action.Generate.SetAccessor.Dart.text=Setter
action.Generate.GetAccessor.Dart.text=Getter
action.Generate.Named.Constructor.Dart.text=命名的构造函数
action.Generate.Constructor.Dart.text=构造函数
action.Dart.Analyzer.Diagnostics.text=Dart 分析器诊断
action.Dart.Analyzer.Diagnostics.description=查看 Dart 分析器诊断
action.Dart.Restart.Analysis.Server.text=重启 Dart 分析服务器
action.Dart.Restart.Analysis.Server.description=重启 Dart 分析服务器
action.Dart.Reanalyze.text=重新分析 Dart 源
action.Dart.Reanalyze.description=重新分析所有 Dart 源文件
action.Dart.NewDartFile.text=Dart 文件
action.Dart.NewDartFile.description=创建新 Dart 文件
action.Dart.stop.dart.webdev.server.text=停止 Dart Webdev 服务器

validation.info.not.a.valid.name=非有效名称！
action.description.run.pub.build=运行 'pub build'
action.text.pub.build=Pub Build...
action.text.webdev.build=Webdev Build...
action.description.run.webdev.build=运行 'webdev build'
border.breaking.policy=中断策略
radio.text.break.on.all.exceptions=在遇到所有异常时都中断
radio.text.break.on.uncaught.exceptions=在遇到未捕捉的异常时中断
breakpoint.type.title.dart.exception.breakpoint=Dart 异常断点
intention.family.name.suppress.errors.and.warnings.in.dart.code=禁止 Dart 代码中的错误和警告
intention.text.suppress.0=禁止 ''{0}''
intention.text.suppress.0.using.eol.comment=使用 EOL 注释禁止 ''{0}''
intention.text.suppress.0.1=禁止 ''{0}'' {1}
find.usages.type.top.level.variable=顶层变量
find.usages.type.local.variable=局部变量
find.usages.type.reference=引用
find.usages.type.library=库
label.text.method.name=方法名称\:
checkbox.text.extract.all.0.occurrences=提取全部 {0} 个匹配项
dialog.title.extract.method=提取方法
checkbox.text.extract.getter=提取 getter
checkbox.text.extract.all.occurrences=提取所有匹配项
notification.content.you.can.enable.it.back.in.the.a.href.event.log.a.settings=您可以在<a href\='>事件日志</a>设置中重新启用它。
notification.title.warning.disabled=警告被禁用。
progress.title.activating.package.webdev=激活包 'webdev'
progress.title.loading.coverage.data=正在加载覆盖率数据...
checkbox.text.0.1.occurrences={0}（{1} 个匹配项）
progress.title.activating.coverage.package=激活覆盖包...
checkbox.text.enable.asserts=启用断言
checkbox.text.checked.mode=已检查模式
button.browse.dialog.title.select.dart.sdk.path=选择 Dart SDK 路径
label.text.name=名称\:
dialog.title.extract.local.variable=提取局部变量
dialog.title.rename.0=重命名 {0}
progress.text.checking.availability.at.the.selection=选择时检查可用性。
progress.text.validating.the.specified.parameters=验证指定参数。
coverage.string.0.of.1.files={1} 个文件中的 {0} 个
coverage.string.0.of.1.files.covered=包含 {1} 个文件中的 {0} 个
file.type.description.dart=Dart
intention.family.name.dart.0=Dart/{0}
validation.info.input.and.output.folders.must.be.different=输入文件夹和输出文件夹不得相同
validation.info.output.folder.not.specified=未指定输出文件夹
validation.info.input.folder.not.specified=未指定输入文件夹
validation.info.build.mode.not.specified=未指定构建模式
button.browse.dialog.title.output.folder=输出文件夹
button.text.build2=构建
action.title.dart.rename.refactoring=Dart 重命名重构