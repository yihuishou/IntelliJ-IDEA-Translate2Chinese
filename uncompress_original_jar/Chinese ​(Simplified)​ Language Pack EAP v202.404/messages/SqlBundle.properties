sql.inspections.group.name=SQL
sql.quickfix.family=SQL
intentions.category.sql=SQL

inspection.name.identifier=标识符应加引号
inspection.name.resolve=未解析的引用
inspection.name.type=类型兼容性
inspection.name.unused=未使用的变量
inspection.name.unused.subquery.item=未使用的子查询项
inspection.name.insert.values=VALUE 子句基数
inspection.name.ambiguous.column=不明确的引用
inspection.name.dialect=SQL 方言检测
inspection.name.current.schema=已内省当前控制台架构
inspection.name.storage=SQL 源修改检测
inspection.name.no.datasources=未配置数据源
inspection.name.derived.table=每个派生表都应具有别名
inspection.name.should.be.in.group.by=列应按子句分组
inspection.name.constant.condition=常量条件
inspection.name.auto_increment.duplicate=自动增量重复
inspection.name.drop.indexed.column=索引取决于列
inspection.name.deprecated.type=弃用的类型
inspection.name.add.not.null=添加没有默认值的非 null 列
inspection.name.using.column.check=检查 using 子句列
inspection.name.null.comparison=null 比较
inspection.name.signature=函数签名
inspection.side.effect.statements=具有副作用的语句
inspection.name.delete.update.without.where=删除或更新不带 where 子句的语句
inspection.name.join.without.on='delete' 语句中的 'join' 子句不安全
inspection.name.unreachable.code=不可到达的代码
inspection.name.illegal.cursor.state=非法光标状态

inspection.name.mysql.parsing=MySQL\: 语法
inspection.name.mysql.load.data.path=LOAD 语句路径
inspection.name.pg.select.from.procedure=Postgres\: 从过程调用中选择

dialog.sql.dialects.caption=<html>要更改文件、目录或整个项目使用的 SQL 方言 {0}，请根据需要添加其路径，然后从下拉列表中选择一种方言。{1} 方言可能无法使用高级编码辅助。<br></html>
dialog.sql.dialects.value.title=SQL 方言
dialog.sql.dialects.override.question=以递归方式重写 SQL 方言?
dialog.sql.dialects.override.title=SQL 方言
sql.dialects.configurable=SQL 方言
dialog.sql.resolve.caption=<html>要为文件、目录或整个项目配置非限定 SQL 名称解析，请根据需要添加其路径，然后在下拉列表中选择所需的数据源、数据库和架构。<br></html>
dialog.sql.resolve.value.title=解析范围
dialog.sql.resolve.override.question=以递归方式重写解析范围?
dialog.sql.resolve.override.title=SQL 解析范围
sql.resolve.configurable=SQL 解析范围

# inspection error messages
unable.to.resolve.symbol.0=无法解析符号 ''{0}''
unable.to.resolve.symbol.0.1=无法解析 {0} ''{1}''
identifier.expected=预期为标识符
0.expected=''{0}'' 是预期的
one.of.expected.0=应为以下之一\: {0}
0.unexpected=未预料到的 ''{0}''
quickfix.change.dialect.family.text=更改 SQL 方言
quickfix.change.dialect.text=将 {0} 方言更改为…
incompatible.types=''{0}'' 与 ''{1}'' 不兼容
already.exists=''{0}''已存在。
duplicate.column=重复列 ''{0}''
unknown.function=未知数据库函数 ''{0}''
column.aliases.required=''{0}'' 需要列别名
column.alias.required=''{0}'' 需要列别名
unexpected.token.0.expected.1=意外的 ''{0}''，应为 ''{1}''
operator.0.not.supported.by.dialect.1=''{1}'' 方言不支持 ''{0}'' 运算符
identifier.1.should.be.quoted=''{0}'' 是保留关键字，应加引号
identifier.should.start.with.letter=未加引号的标识符应以字母开头
incorrect.values.number=应为 {0} 个值，得到 {1} 个
ambiguous.column.short.reference=不明确的列引用\: {0}
derived.table.alias=每个派生表都应具有别名
column.should.be.in.group.by=选择列表中的列 ''{0}'' 无效，因为它未包含在聚合函数或 GROUP BY 子句中
columns.should.be.in.group.by=选择列表中的列 ''{0}'' 无效，因为它们未包含在聚合函数或 GROUP BY 子句中
condition.always.true=条件 ''{0}'' 始终为 ''true''
condition.always.false=条件 ''{0}'' 始终为 ''false''
delete.without.where=不带 'where' 的 'Delete' 语句会清除表中的所有数据
update.without.where=不带 'where' 的 'Update' 语句会同时更新所有表行
update.without.where.skip.self.refs=如果查询中存在自引用(即 set id \= id + 1)，不发出警告
update.without.where.skip.limit=如果存在 'limit' 子句，不发出警告
join.without.on='delete' 内的 'join' 子句不安全\: 'on' 或 'where' 应引用左侧的表
subquery.item.never.used=子查询项 ''{0}'' 从未使用
subquery.item.star.includes.unused=未使用的列中存在 ''select *'' 结果\: {0}。考虑替换为 ''{1}''

help.file.0.not.found=未找到帮助文件 ''{0}''
action.text.create.sql.datasource=DDL 数据源
dialog.title.data.source.properties=数据源属性
title.border.ddl.files=DDL 文件
dialog.title.choose.ddl.files=选择要添加的 DDL 文件
error.text.data.source.cyclic.dependency.found=不允许循环依赖关系
generic.sql.dialect.usage.error.message={0} 使用 {1} 方言

sql.color.page.title=SQL

quickfix.name.split.string.literal=拆分字符串文字
quickfix.name.quote.identifier=为标识符加引号
quickfix.name.unquote.identifier=为标识符取消加引号
quickfix.name.add.to.group.by=按子句添加到组
quickfix.name.introduce.alias=引入别名
quickfix.name.create.table.definition=创建表定义
quickfix.name.create.table.declaration=创建临时表声明
sql.framework.support.provider.title=SQL 支持
sql.framework.support.provider.project.default=项目默认设置
label.text.default.dialect=默认方言(&D)\:

surround.with.quote.template=引用
sql.notebook.line.marker.provider.name=笔记本行标记

action.sql.ExtractFunctionAction.text=提取例程...
action.sql.IntroduceAliasAction.text=表别名...
action.sql.SelectCurrentStatement.text=选择当前语句
action.sql.SelectInDatabaseView.text=在数据库视图中选择
action.sql.ExtractNamedQueryAction.text=子查询作为 CTE
action.sql.ChangeDialect.toolbar.text=更改 SQL 方言
action.sql.ChangeDialect.text=更改 SQL 方言
configurable.SqlCodeCompletionConfigurable.display.name=SQL
settings.sql.title=SQL
settings.join.clauses=JOIN 子句
settings.use.aliases.in.completion.for.join=为 JOIN 补全使用别名
settings.invert.order.of.operands.in.auto.generated.on.clause=反转自动生成的 ON 子句中操作数的顺序
settings.suggest.non.strict.foreign.keys.based.on.the.name.matching=根据名称匹配建议非严格外键
settings.table.aliases=表别名
settings.automatically.add.aliases.when.completing.table.names=补全表名时自动添加别名
settings.suggest.alias.names.in.completion.after.table.names=在表名之后的补全中建议别名
settings.custom.aliases=自定义别名：
settings.no.custom.aliases=无自定义别名
settings.add.alias=添加别名
settings.remove.alias=移除别名
settings.no.column.reference.rules=无列引用规则
settings.column.pattern=列模式
settings.target.column.pattern=目标列模式
settings.add.rule=添加规则
settings.remove.rule=移除规则
settings.check=检查...
settings.test.rule=测试规则
settings.column.name=名称
settings.column.alias=别名
settings.folding.put.underscores.inside.numeric.literals=对数字文字（6 位或更长）使用下划线
settings.folding.title=SQL
settings.smart.keys.insert.string.concatenation.on.enter=按 Enter 时插入字符串串联
settings.smart.keys.close.code.blocks.on.enter=按 Enter 时结束代码块
settings.smart.keys.qualify.object.on.code.completion.and.refactorings.with=在代码补全和重构时限定对象：
settings.smart.keys.database.schema=数据库/架构：
settings.smart.keys.table=表\:
settings.smart.keys.alias=别名：
settings.smart.keys.join.condition=加入条件：
settings.smart.keys.always=始终
settings.smart.keys.on.collisions=在冲突时
settings.smart.keys.never=从不
settings.inlay.in.insert.values=在 INSERT 值中
settings.inlay.in.select.expressions=在 SELECT 表达式中
settings.inlay.for.references=对于 * 参照
settings.inlay.show.column.names=显示列名称：
settings.code.style.keywords=关键字
settings.code.style.types=类型
settings.code.style.identifiers=标识符
settings.code.style.aliases=别名
settings.code.style.quoted.identifiers=引用的标识符
settings.code.style.use.original.case=使用原始大小写
settings.code.style.identifier.quotation=标识符引用
settings.code.style.quotation.character=引用字符
settings.code.style.align.the.first.word.of.clause=对齐子句的第一个单词
settings.code.style.collapse.short.statement=折叠短语句
settings.code.style.place.into.on.the.new.line=将 INTO 放到新行
settings.code.style.place.into.clause.elements.on=将 INTO 子句元素放到
settings.code.style.place.values.clause.elements.rows.on=将 VALUES 子句元素（行）放到
settings.code.style.place.columns.or.values=放置列或值
settings.code.style.wrap.columns.or.values=包装列或值
settings.code.style.place.comma=放置逗号
settings.code.style.wrap.subqueries=包装子查询
settings.code.style.keep.elements.on.one.line.if.less=如果 ≤ 此值，则将元素保持在同一行上
settings.code.style.use.as=使用 AS
settings.code.style.place.join.in.join-only.queries.under=将 JOIN 放在此项目下的仅联接查询中
settings.code.style.place.on.using.under=将 ON/USING 放在此项目下方
settings.code.style.place.top.level.and.or=放置顶层 AND/OR
settings.code.style.place.subquery=放置子查询
settings.code.style.wrap.alter.instructions=包装 alter 指令
settings.code.style.minimum.blank.lines.between.declaration=声明之间的最小空行数
settings.code.style.maximum.blank.lines.between.declaration=声明之间的最大空行数
settings.code.style.keep.blank.lines.in.code=保留代码中的空行
settings.code.style.wrap.variables=包装变量
settings.code.style.use.spaces.around.operators=在运算符周围使用空格
settings.code.style.align.end=对齐 END
settings.code.style.keep.section.elements.under.section.header=将节元素保持在节标题下
settings.code.style.align.section.elements=对齐节元素
settings.code.style.align.line.comments.at.right.of.elements=对齐元素右侧的行注释
settings.code.style.put.spaces.within.parentheses=将空格放在括号内
settings.code.style.collapse.short.multi.row.values=折叠较短的多行值
settings.code.style.align.equals=对齐 `\=`
settings.code.style.new.line.after.all.distinct=在 ALL, DISTINCT 后面使用新行
settings.code.style.align.as=对齐 AS
settings.code.style.wrap.the.first.join=包装第一个 JOIN
settings.code.style.wrap.the.next.join=包装下一个 JOIN
settings.code.style.indent.join=缩进 JOIN
settings.code.style.align.joined.tables=对齐联接的表
settings.code.style.align.table.aliases=对齐表别名
settings.code.style.wrap.on.using=包装 ON/USING
settings.code.style.align.asc.desc=对齐 ASC/DESC
settings.code.style.align.defaults=对齐默认值
settings.code.style.align.nullabilities=对齐可空值
settings.code.style.align.alter.instructions=对齐 alter 指令
settings.code.style.wrap.constraint=包装 CONSTRAINT
settings.code.style.wrap.key.check=包装 KEY/CHECK
settings.code.style.wrap.references=包装 REFERENCES
settings.code.style.wrap.cascade.and.deferrability=包装级联和可延迟性
settings.code.style.indent.content=缩进内容
settings.code.style.wrap.the.beginning.of.the.query=包装查询的开头
settings.code.style.indent.query=缩进查询
settings.code.style.wrap.first.option=包装第一个选项
settings.code.style.wrap.next.option=包装下一个选项
settings.code.style.indent.options=缩进选项
settings.code.style.align.options=对齐选项
settings.code.style.wrap.every.statement=包装每个语句
settings.code.style.put.new.line.around.semicolon=在分号周围放置新行
settings.code.style.wrap.section=包装节
settings.code.style.align.assignments=对齐赋值
settings.code.style.align.expressions=对齐表达式
settings.code.style.align.types=对齐类型
settings.code.style.wrap.as=包装 AS
settings.code.style.wrap.opening=包装左 $$
settings.code.style.wrap.the.content.after.opening=包装左 $$ 后的内容
settings.code.style.wrap.before.closing=包装右 $$ 前面的内容
settings.code.style.wrap.options.after.closing=包装右 $$ 后面的选项
settings.code.style.wrap.else=包装 ELSE
settings.code.style.wrap.inner.code=包装内部代码
settings.code.style.indent.then.and.else=缩进 THEN 和 ELSE
settings.code.style.indent.end.if=缩进 END IF
settings.code.style.wrap.loop=包装 LOOP
settings.code.style.indent.loop=缩进 LOOP
settings.code.style.indent.end.loop=缩进 END LOOP
settings.code.style.collapse.when.short=较短时折叠
settings.code.style.add.space.before.left.parentheses=在 `(`前面添加空格
settings.code.style.place.comma.to.begin=放置逗号以开始
settings.code.style.align.operands.in.binary.expressions=对齐二进制表达式中的操作数
settings.code.style.space.within.parenthesized.sub.expressions=空格在括号内子表达式内部
settings.code.style.space.within.parentheses=空格在括号内
settings.code.style.space.before.comma=空格在逗号前
settings.code.style.space.after.comma=空格在逗号后
settings.code.style.wrap.when=包装 WHEN
settings.code.style.indent.when.if.wrapped=包装时 WHEN
settings.code.style.wrap.then=包装 THEN
settings.code.style.align.then=对齐 THEN
settings.code.style.align.else.under.then.when.then.aligned=在 THEN 对齐的情况下，将 ELSE 对齐 THEN 下面
settings.code.style.keep.new.line.after.then.else=在 THEN, ELSE 后面使用新行
settings.code.style.collapse.short.clause=折叠短子句
settings.code.style.inherit.general.sql.style=继承常规 SQL 样式
settings.code.style.disable.formatting=禁用格式设置
settings.code.style.word.case=单词大小写
settings.code.style.quotation=引用
settings.code.style.common=通用
settings.code.style.insert.statement.and.values.clause=INSERT 语句和 VALUES 子句
settings.code.style.update.statement=UPDATE 语句
settings.code.style.with.clause=WITH 子句
settings.code.style.select.clause=SELECT 子句
settings.code.style.from.clause=FROM 子句
settings.code.style.where.and.having.clauses=WHERE 和 HAVING 子句
settings.code.style.group.by.and.order.by.clauses=GROUP BY 和 ORDER BY 子句
settings.code.style.subquery=子查询
settings.code.style.create.alter.table=CREATE/ALTER TABLE
settings.code.style.create.schema=CREATE SCHEMA
settings.code.style.constraint=CONSTRAINT
settings.code.style.views=视图
settings.code.style.postfix.options=后缀选项
settings.code.style.declared.variables=已声明变量
settings.code.style.routine.arguments=例程参数
settings.code.style.routine.statement=例程语句
settings.code.style.if.then.else=IF … THEN … ELSE
settings.code.style.loops=循环
settings.code.style.code=代码
settings.code.style.cortege=Cortege
settings.code.style.binary.expression=二进制表达式
settings.code.style.function.or.procedure.call=函数或过程调用
settings.code.style.case.clause=CASE 子句
settings.code.style.expressions=表达式
settings.code.style.queries=查询
settings.code.style.case=Case
settings.code.style.wrapping=自动换行
settings.code.style.do.not.change=不更改
settings.code.style.as.in.common=与 Common 中相同
settings.code.style.yes=是
settings.code.style.no=否
settings.code.style.auto=自动
settings.code.style.to.left=至左侧
settings.code.style.to.left.with.indent=至左侧并缩进
settings.code.style.to.right=至右侧
settings.code.style.to.begin=至开头
settings.code.style.to.end=至结尾
settings.code.style.at.the.end=在结尾
settings.code.style.to.lower=改为小写
settings.code.style.to.upper=改为大写
settings.code.style.to.title=至标题
settings.code.style.in.the.middle=在中间
settings.code.style.place.the.opening.parenthesis=将左括号放置
settings.code.style.place.elements=将元素放置
settings.code.style.place.the.closing.parenthesis=将右括号放置
settings.code.style.wrap.elements=换行元素
settings.code.style.place.elements.on=将元素放置在
settings.code.style.place.clause.elements.on=将子句元素放置在
settings.code.style.on.the.same.line=在同一行上
settings.code.style.aligned=对齐
settings.code.style.indented=缩进
settings.code.style.same.line.aligned=同一行并对齐
settings.code.style.wrapped.unindented=换行并且不缩进
settings.code.style.wrapped.aligned=换行并对齐
settings.code.style.wrapped.indented=换行并且缩进
settings.code.style.under.opening=在左括号下
settings.code.style.under.elements=在元素下
settings.code.style.unindented=不缩进
settings.code.style.as.keywords=As 关键字
settings.code.style.as.identifiers=As 标识符
settings.code.style.chop=截断
settings.code.style.chop.if.long=如果过长则截断
settings.code.style.wrap.if.long=换行如果过长
settings.code.style.same.line=同一行
settings.code.style.new.line=新行
settings.code.style.never=从不
settings.code.style.always=始终
settings.code.style.subqueries.only=仅子查询
settings.code.style.table.as.usual=表(照常)
settings.code.style.FROM.indented=FROM 缩进
settings.code.style.FROM=FROM
settings.code.style.JOIN=JOIN
settings.code.style.table=表
settings.code.style.table.indented=表缩进
settings.code.style.align.with.CASE=与 CASE 对齐
settings.code.style.align.with.WHEN=与 WHEN 对齐
settings.code.style.add.always=始终添加
settings.code.style.remove=移除
settings.code.style.quote=引用
settings.code.style.unquote=取消引用
settings.code.style.double.quotes.or.another="双引号" 或另一个
settings.code.style.double.quotes.only=仅 "双引号"
settings.code.style.double.quotes.or.brackets="双引号" 或 [方括号]
settings.code.style.double.quotes.or.grave.accent="双引号" 或 `重音符`
settings.code.style.brackets.or.double.quotes=[方括号] 或 "双引号"
settings.code.style.brackets.only=仅 [方括号]
settings.code.style.grave.accents.or.double.quotes=`重音符` 或 "双引号"
settings.code.style.grave.accents.only=仅 `重音符`
settings.code.style.preview.dialect=预览方言\:
preview.update=预览更新
preview.delete=预览删除
dialog.message.you.have.no.directories.attached.to.your.project=没有目录附加到您的项目
dialog.title.nothing.to.choose.from=没有要选择的内容
progress.details.interrupted=已中断
progress.text.building=正在构建 `{0}`
dialog.message.cannot.perform.refactoring=无法执行重构
dialog.title.cannot.perform.refactoring=无法执行重构
dialog.message.only.primitives.are.supported=仅支持基元类型的表达式
command.name.extract.variable=提取变量
data.source.chooser.title=数据源
intention.name.add.column=将列 ''{0}'' 添加到 ''{1}'' 表
intention.name.add.table=将表添加到数据源
intention.name.declare.variable=声明变量
intention.name.declare.pl.variable=声明 PL 变量
intention.name.introspect.schema.fix=内省 {0}
intention.name.refresh.schema.fix=刷新{0}
intention.name.attach.session=附加会话
intention.name.go.to.sql.resolution.scopes=转到 SQL 解析范围
inspection.message.unable.to.resolve.in.this.context=在此上下文无法解析 *
inspection.message.invalid.column.index=列索引无效
sql.resolve.inspection.checkbox.suppress.for.quoted=对带引号的标识符禁止，它们可能被视为字符串
inspection.message.sql.dialect.not.configured=未配置 SQL 方言。
intention.name.change.dialect.to=将方言更改为…
intention.name.use.dialect=使用 {0}
global.sql.dialect.setting.text=全局 SQL 方言
sql.code.style.settings.tab.title=代码生成