eclipse.name=Eclipse
eclipse.import.operation=导入
eclipse.import.label.select.workspace=选择 Eclipse 项目目录(&S)\:
eclipse.import.title.select.workspace=选择 Eclipse 项目目录
eclipse.import.title.module.dir=选择 IntelliJ IDEA 项目和模块文件的目录
eclipse.import.modules.location=在其中创建模块文件\: 
eclipse.import.modules.colocated=Eclipse 项目目录(&E)\: 
eclipse.import.modules.dedicated=专用目录(&D)\:
eclipse.import.link=将创建的 IntelliJ IDEA 模块链接到 Eclipse 项目文件(&L)
eclipse.import.projects.list=要导入的 Eclipse 项目
eclipse.import.action.skip=无操作
eclipse.import.error.duplicate.name=错误\: 名称重复
eclipse.import.action.convert=将创建 .iml
eclipse.import.action.link=将创建 .iml 并关联到 .classpath
eclipse.import.warning.undefinded.libraries=所导入的项目引用了未知的全局库
eclipse.import.count.undefined.libraries= ({0}更多...)
eclipse.import.converting=转换 Eclipse 项目
eclipse.import.scanning=扫描 Eclipse 项目
eclipse.export.dialog.title=导出到 Eclipse
eclipse.export.operation=导出
eclipse.export.title=导出 Eclipse 项目
eclipse.export.modules.list.title=_选择模块
eclipse.export.nothing.to.do=无法导出任何模块。您不能导出符合以下条件的模块\: \n\
1）没有内容根\n\
2）有多个内容根\n\
3）已转换为 Eclipse 兼容格式
eclipse.switch.modules.to.eclipse=将所选模块切换为 Eclipse 兼容格式(&E)
eclipse.export.reading.modules=读取模块数据
eclipse.export.converting.projects=将模块转换为 Eclipse 项目
eclipse.export.saving.projects=保存 Eclipse 项目
eclipse.export.nested.error=错误\: 项目嵌套
eclipse.export.action.skip=无操作
eclipse.export.action.redundant=导出冗余(已关联)
eclipse.export.action.link=将创建 .classpath 并从 .iml 关联
eclipse.export.action.convert=将创建 .classpath
eclipse.export.too.many.content.roots=模块 {0} 使用 Eclipse 格式，该格式仅支持一个内容根
eclipse.export.incompatible=不兼容(多个内容根或没有任何内容根)
eclipse.classpath.storage.description=Eclipse (.classpath)
eclipse.title.modules.to.rename=模块名称不匹配
eclipse.message.renamed.module=''{0}'' 到 ''{1}''\n\

eclipse.message.modules.to.rename=关联以下模块的 Eclipse 项目似乎已重命名\: \n\
\n\
{0}\n\
这可能导致出现无法解析的模块依赖项。\n\
您想重命名 IDEA 模块以匹配 Eclipse 项目吗?
eclipse.title.rename.failed=模块名称重复
eclipse.message.rename.failed=由于模块名称重复，无法重命名以下模块\: \n\
\n\
{0}
eclipse.title.unresolved.projects=未解析的模块引用
eclipse.message.unresolved.projects=一些模块包含未解析的 Eclipse 样式的项目相关库引用\: \n\
\n\
{0}
eclipse.file.type.descr=Eclipse 项目
eclipse.create.library.title=找到 Eclipse 安装
eclipse.create.library.description=<html>您要导入的某些项目依赖于 Eclipse 平台。<br>IntelliJ IDEA 将创建一个名为 {0} 的全局库，其中就包含 Eclipse 库。</html>
eclipse.import.code.style.default.option=使用默认的项目代码样式
eclipse.import.code.style.import.option=从 Eclipse 项目导入代码样式
eclipse.import.code.style.default.hint=设置 | 编辑器 | 代码样式
eclipse.import.code.style.import.hint=<html>每个项目支持一种代码样式。并非所有 Eclipse 代码样式设置都可以映射到 Intellij IDEA 设置，<br>因此将使用最佳近似值。
eclipse.import.code.style.organize.imports.box=导入“整理导入”设置
list.empty.text.code.styles.not.found=找不到代码样式
border.text.choose.project.code.style=选择项目代码样式
button.browse.dialog.description.locate.user.libraries.file=找到要导出的项目库所在的 .userlibraries 文件
button.browse.dialog.title.locate.user.libraries=找到 .userlibraries
dialog.message.incompatible.modules.found=<html><body>找不到 Eclipse 不兼容的模块\: <ul><br><li>{0}</ul><br>要继续吗? 继续可能会丢失配置。</body> </html>
dialog.title.module.files.found=找到模块文件
dialog.message.0.module.files.found.1.would.you.like.to.reuse.them=找到 {0} 个模块文件\: \n\
{1}。\n\
您想要重用它们吗?
notification.content.imported.projects.contain.unknown.natures=导入的项目包含未知性质\: <br>{0}<br>导入后某些设置可能会丢失。