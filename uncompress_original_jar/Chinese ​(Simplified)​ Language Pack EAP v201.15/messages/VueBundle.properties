vue.create.single.file.component.action.text=Vue 组件
vue.create.single.file.component.action.description=创建 Vue 组件文件

vue.documentation.vue=Vue
vue.documentation.section.library=库\:
# vue.documentation.section.* properties are used indirectly
vue.documentation.section.argument=参数\:
vue.documentation.section.required=必填
vue.documentation.section.pattern=模式\:
vue.documentation.section.default=默认\:

# vue.documentation.type.* properties are used indirectly
vue.documentation.type.functional.component=函数组件
vue.documentation.type.component=组件
vue.documentation.type.directive=指令
vue.documentation.type.filter=过滤
vue.documentation.type.component.method=组件方法
vue.documentation.type.component.event=组件事件
vue.documentation.type.slot=插槽
vue.documentation.type.component.property=组件属性
vue.documentation.type.component.computed.property=组件计算属性
vue.documentation.type.component.data.property=组件数据属性
vue.documentation.type.directive.modifier=指令修饰符
vue.documentation.type.directive.argument=指令参数

vue.file.type.name=Vue.js
vue.file.type.description=Vue.js 模板

vue.inspection.display.name.data.function=数据函数
vue.inspection.display.name.duplicate.tag=重复的模板/脚本标记
vue.inspection.message.attribute.does.not.accept.value={0} 不接受任何值
vue.inspection.message.data.property.should.be.function=数据属性应是一个函数
vue.inspection.message.duplicate.tag=顶级标记 {0} 重复
vue.inspection.message.filter.function.with.no.args=筛选器函数应至少接受一个参数
vue.inspection.message.filter.invalid.number.of.arguments=筛选器参数数量无效，应为 {0} 个
vue.inspection.message.unresolved.filter=未解析的筛选器 {0}

vue.live.template.context.component=Vue 组件
vue.live.template.context.script.tag=Vue 脚本标记内容
vue.live.template.context.template=Vue 模板
vue.live.template.context.template.tag.element=Vue 模板标记元素
vue.live.template.context.top.level=Vue 顶级元素

vue.param.hints.show.names.for.filters=对于筛选器参数

vue.parser.message.expected.comma.or.end.of.expression=应为逗号或表达式结尾
vue.parser.message.expected.end.of.expression=应为表达式结尾
vue.parser.message.expected.identifier.or.string=应为标识符或字符串
vue.parser.message.expected.in.or.of=应为 'in' 或 'of'
vue.parser.message.expected.lparen.pipe.or.end.of.expression=应为 (, | 或表达式结尾
vue.parser.message.expected.pipe.or.end.of.expression=应为 | 或表达式结尾
vue.parser.message.statements.not.allowed=Vue 表达式中不允许使用语句
vue.parser.message.unterminated.interpolation=未终止的插值

vue.project.generator.name=Vue.js
vue.project.generator.description=使用 <a href\='https\://cli.vuejs.org'>Vue CLI</a> 创建新的 <a href\='https\://vuejs.org'>Vue.js</a> 项目。
vue.project.generator.presentable.package.name=Vue CLI(&C)
vue.project.generator.use.default.project.setup=使用默认项目设置(babel, eslint)(&D)

vue.quickfix.wrap.with.function.text=在函数中包装数据对象
vue.quickfix.wrap.with.function.family=包装对象

vue.template.intention.extract.component=提取 Vue 组件
vue.template.intention.extract.component.family.name=提取 Vue 组件
vue.template.intention.extract.component.description=将 Vue.js 模板的所选部分提取到新的单文件组件，并通过 props 传递使用的数据和方法
vue.template.intention.extract.component.error.component.name=组件名称无效\: {0}
vue.template.intention.extract.component.error.component.exists=组件 {0} 已存在
vue.template.intention.extract.component.error.file.exists=文件{0}已经存在

vuex.inspection.message.unresolved.action=无法解析 Vuex 操作 {0}
vuex.inspection.message.unresolved.getter=无法解析 Vuex getter {0}
vuex.inspection.message.unresolved.mutation=无法解析 Vuex 突变 {0}
vuex.inspection.message.unresolved.namespace=未知 Vuex 模块命名空间 {0}
vuex.inspection.message.unresolved.state=无法解析 Vuex 状态 {0}
vuex.inspection.message.unresolved.symbol=无法解析 Vuex 符号 {0}