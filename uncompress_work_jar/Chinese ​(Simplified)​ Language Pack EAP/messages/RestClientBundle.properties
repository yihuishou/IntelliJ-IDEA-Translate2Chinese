accessing.url=正在访问 URL {0}
http.request.element.name=HTTP 请求
reference.tool.windows.rest.client=REST客户端
http.request.notification.title=HTTP 请求编辑器

# actions
http.request.action.name=HTTP 请求
http.request.action.description=HTTP 请求
http.request.new.file=HTTP 请求
http.request.new.file.description=创建新的 HTTP 请求文件
action.com.intellij.ws.actions.ConvertCurlToHttpRequestAction.text=将 cURL 转换为 HTTP 请求
group.HTTPClientGroup.text=HTTP 客户端
action.WebServicesPlugin.CreateRESTClient.text=测试 RESTful Web 服务
action.RESTClient.RunRequest.text=加载到 REST 客户端
action.HTTPClient.OpenCollection.text=打开 HTTP 请求集合
http.request.reformat.response.action.title=重新格式化 HTTP 响应
http.request.reformat.response.action.view.as.text=作为{0}查看
http.request.reformat.response.action.view.as.description=作为{0}重新格式化并高亮显示文件
http.request.reformat.response.action.view.as.raw.text=作为文本查看
http.request.reformat.response.action.view.as.raw.description=将响应正文显示为原始文件
http.request.save.log.file.action.title=将 HTTP 客户端请求保存到历史记录
action.RESTClient.ShowHistory.text=显示 HTTP 请求历史记录
http.request.show.log.file.action.toolbar=打开日志
http.request.show.log.file.action.description=打开包含已执行 HTTP 请求的日志文件
http.request.show.log.file.action.failed=无法找到 HTTP 请求日志文件
http.request.show.log.file.action.failed.default.project=无法打开默认项目的 HTTP 请求日志文件
http.request.show.log.file.action.failed.open.config=打开配置
http.request.create.scratch.file.with.request.action.title=创建 HTTP 请求临时文件
http.request.create.scratch.file.with.request.failed=无法创建 HTTP 请求临时文件
http.request.create.scratch.file.with.request.file.is.invalid=创建的 HTTP 请求临时文件无效
http.request.open.requests.collection.action.toolbar=示例
http.request.open.requests.collection.action.description=打开 HTTP 请求的内置集合
http.request.open.requests.collection.action.failed.default.project=无法打开默认项目的 HTTP 请求集合
http.request.open.requests.collection.action.failed.no.file=无法找到 HTTP 请求集合
action.HTTPClient.AddRequest.text=添加请求
http.request.add.request.action.failed.find.template=无法找到此请求的模板
http.request.add.request.action.error.adding.request=添加 HTTP 请求时出错
http.request.add.request.action.error.adding.request.message=当前的编辑器不是文本编辑器
http.request.add.request.action.get=GET 请求
http.request.add.request.action.post.text.body=POST 文本正文
http.request.add.request.action.post.parameters.body=POST 参数正文
http.request.add.request.action.form.text.field=带文本字段的 POST 表单
http.request.add.request.action.form.file.field=带文件字段的 POST 表单

action.HTTP.Request.NewFile.text=HTTP 请求
action.HTTP.Request.NewFile.description=创建新的 HTTP 请求文件
group.HTTPClientNewEnvironmentFile.text=HTTP 环境文件
http.request.create.new.public.environment.file.action.text=为 HTTP 请求创建环境文件
http.request.create.new.private.environment.file.action.text=为 HTTP 请求创建私有 HTTP 环境文件
http.request.create.new.environment.file.action.toolbar=添加环境文件
http.request.create.new.public.environment.file.detailed.description=常规(用于常见变量，例如主机或查询参数)
http.request.create.new.private.environment.file.detailed.description=私有(用于敏感数据，例如密码或令牌)
http.request.create.new.environment.file.fail.notification=无法创建文件\: 当前目录已包含所有可能的环境文件
http.request.create.new.environment.file.command.name=创建 HTTP 环境文件

# request collections
# These keys are used dynamically as "http.request.collection." + collectionFileName.replace("-", ".")
# See: com.intellij.ws.actions.HttpRequestOpenCollectionAction.getCollectionName
http.request.collection.get.requests=GET 请求
http.request.collection.post.requests=POST 请求
http.request.collection.requests.with.authorization=带授权的请求
http.request.collection.requests.with.tests=带测试的请求

# http requests log
http.request.log.file.is.ignored=无法打开日志文件，因为它已包含在忽略的列表中。<br/>从“忽略文件和文件夹”中移除 ''{0}'' 以使用请求日志文件。
http.request.log.file.is.excluded=无法打开日志文件，因为它已被标记为排除。<br/>取消排除 ''{0}'' 目录以使用请求日志文件。
http.request.log.file.wrong.type=无法打开日志文件，因为 ''*.http'' 扩展被标记为 ''{0}''，但应为 ''HTTP Requests''。
http.request.log.ignored.files.provider.title=基于编辑器的 HTTP 客户端请求

# cookie jar
http.request.cookie.jar.presentable.name=Cookie 存储文件
http.request.cookie.jar.action.title=将 HTTP 响应 Cookie 保存到 Cookie Jar
http.request.cookie.jar.inspection.attributes.missing=Cookie 格式错误\: 缺少一些 TAB 分隔的特性。Cookie 必须遵循以下格式\:“domain\tpath\tname\tvalue\texpirationDate”
http.request.cookie.jar.inspection.too.many.attributes=Cookie 格式错误\: TAB 分隔的特性对于 Cookie 过多。Cookie 必须遵循以下格式\:“domain\tpath\tname\tvalue\texpirationDate”
http.request.cookie.jar.inspection.empty.domain=Cookie 格式错误\: 不允许空 domain 特性
http.request.cookie.jar.inspection.empty.path=Cookie 格式错误\: 不允许空 path 特性
http.request.cookie.jar.inspection.empty.date=Cookie 格式错误\: 不允许空 date 特性。预期日期格式\:“Tue, 01-Jan-2019 00\:00\:00”，会话 Cookie 为”-1“
http.request.cookie.jar.inspection.expired.cookie=Cookie 已过期。调整到期日期，否则此 Cookie 将在下一次请求后删除
http.request.cookie.jar.inspection.date.format=Cookie 格式错误\: 日期格式错误。预期日期格式\:“Tue, 01-Jan-2019 00\:00\:00”，会话 Cookie 为”-1“
http.request.cookie.jar.cookie.preserved=Cookie 在请求之间保留\:
http.request.cookie.jar.cookie.preserved.failed=无法保留 Cookie，{0}\:

# run
rest.client.request.url.is.invalid=url 无效，因此无法执行请求
rest.client.request.file.path.is.invalid=无法找到输入文件 ''{0}''
rest.client.request.file.path.is.empty=输入文件的路径为空
rest.client.request.query.is.invalid=查询参数 ''{0}'' 无效，因此无法执行请求
rest.client.request.cannot.create.file=无法为多部分字段 ''{0}'' 创建临时文件
rest.client.request.cannot.create.file.post=无法为 POST 主体创建临时文件
rest.client.request.cannot.find.environment=无法找到 ''{0}'' 环境
rest.client.request.multiple.environments=找到了多个具有 ''{0}'' 环境的文件
rest.client.request.execute.cancel=HTTP 请求被中断
rest.client.request.execute.cancel.post.process=\n\nHTTP 请求在响应后处理期间被中断
rest.client.cannot.execute.response.handler.failed.title=JavaScript 响应处理程序执行失败
rest.client.cannot.execute.response.processor.log.disabled=由于禁用了文件登录，无法显示响应
rest.client.cannot.execute.response.handler.engine.doesnot.exists=无法找到执行 JavaScript 的引擎。
rest.client.request.cannot.find.response.handler=无法找到 ''{0}'' 响应处理程序脚本
rest.client.request.response.handler.console=响应处理程序脚本的输出将在此处显示。\n\n
rest.client.request.response.handler.execution=正在执行响应处理程序脚本…
rest.client.request.run.request.tooltip=运行 HTTP 请求
rest.client.request.run.debug.request.tooltip=运行/调试 HTTP 请求
rest.client.request.execute.with.environment=使用 ''{1}'' 环境{0}
rest.client.request.execute.with.default.environment=使用默认环境{0}
rest.client.request.execute.with.no.environment=无环境{0}
rest.client.request.execute.with.text={0}方式…
rest.client.request.execute.environment.popup.header=选择环境
action.HTTPClient.RunAll.text=在文件中运行所有请求
rest.client.request.execute.all.text=全部{0}
rest.client.request.execute.all.with.environment.text=使用 ''{1}'' 环境全部{0}
rest.client.request.run.test.console.root=HTTP 请求
rest.client.request.response.handler.tab.name=响应处理程序
rest.client.request.test.tab.name=测试
rest.client.request.execute.notification=HTTP 客户端执行
rest.client.request.response.handler.failed.on.execution=执行响应处理程序期间失败
rest.client.request.test.result=测试失败\: {0}，已通过\: {1}
rest.client.request.response.body.empty=<Response body is empty>

# Request error
http.client.request.error.message.begin=由于 {1} 处的{0}，URI 无效
http.client.request.error.message.description=未替换的变量 ''{0}''
http.client.request.error.message.quickfixes.title=可能的解决方案\:
http.client.request.error.message.add.to.env.quickfix=向现有环境添加变量
http.client.request.error.message.add.env.file.quickfix=添加新的环境文件
http.client.request.error.message.run.with.env.quickfix=在环境中运行
http.client.request.error.message.add.to.env.no.env.error=无配置的环境
http.client.request.error.message.add.to.env.already.has.var.error=所有环境均已包含 ''{0}'' 变量
http.client.request.error.message.run.with.env.no.env.error=没有任何环境包含变量 ''{0}''

# debug
debug.http.client.can.not.resolve.host.name=无法解析 URL 的主机名\: {0}
debug.http.client.can.not.parse.url=无法从字符串解析 url\: {0}
debug.http.client.no.debugger.extensions=无法调试 {0}\: 未定义调试器扩展
debug.http.client.no.debugger.extension.by.name=无法调试 {0}\: 名称为 {1} 的调试器扩展不存在

# refactorings
rest.client.refactoring.move.request.name=移动 HTTP 请求
rest.client.refactoring.move.request.description=将 HTTP 请求移动到单独的文件
rest.client.refactoring.ui.path.label=路径\:
rest.client.refactoring.ui.browse.select.path=选择路径
rest.client.refactoring.ui.browse.select.path.description=选择目标文件路径
rest.client.refactoring.no.requests=无法找到要移动的 HTTP 请求
rest.client.refactoring.request.is.invalid=无法移动所选请求
rest.client.refactoring.file.is.invalid=包含 HTTP 请求的文件无效
rest.client.refactoring.cannot.create.file=无法创建目标文件
rest.client.refactoring.target.file.is.invalid=目标文件无效或不存在。
rest.client.refactoring.target.file.same.as.original=目标文件与当前文件相同。
rest.client.refactoring.not.inside.project=目录不在项目内
rest.client.refactoring.file.not.valid.name=“{0}”不是有效的文件名
rest.client.refactoring.file.is.empty=目标文件路径为空
rest.client.refactoring.is.a.directory=所选路径应指向文件而不是目录
rest.client.refactoring.empty.selection=应至少选择一个请求
rest.client.refactoring.invalid.variable.name=名称 ''{0}'' 无效，因此无法重命名环境变量
rest.client.refactoring.invalid.dynamic=动态变量不支持重命名操作

# highlighting
http.request.highlighting.method.type=方法类型
http.request.highlighting.comment=注释
http.request.highlighting.requests.separator=请求分隔符
http.request.highlighting.request.port=请求端口
http.request.highlighting.request.parameter.name=请求参数名称
http.request.highlighting.request.parameter.value=请求参数值
http.request.highlighting.header.field.key=标头字段键
http.request.highlighting.header.field.value=标头字段值
http.request.highlighting.header.message.body=请求正文
http.request.highlighting.header.input.file.sign=输入文件符号
http.request.highlighting.header.input.file.path=输入文件路径
http.request.highlighting.header.difference.file.sign=响应历史记录符号
http.request.highlighting.header.difference.file.path=响应历史记录路径
http.request.highlighting.multipart.boundary=多部分边界
http.request.highlighting.environment.variable=环境变量
http.request.highlighting.variable.braces=变量大括号

# find usages
http.request.find.usages.type.variable=变量
http.request.find.usages.type.dynamic.variable=DynamicVariable

# diff
http.request.diff.compare.with=比较对象…
http.request.diff.line.marker.provider=HTTP 响应差异
http.request.diff.compare.with.file=与 {0} 比较
http.request.diff.compare.with.description=将响应输出与先前结果之一比较
http.request.diff.compare.with.dialog.title={0} vs {1} ({2})
http.request.diff.compare.with.dialog.title.directories={0}vs{1}
http.request.diff.compare.with.can.not.resolve=无法找到文件 ''{0}''

# ui
rest.clien.ui.deprecation.message=此 REST 客户端已弃用。在编辑器中试用我们的新 HTTP 客户端。
rest.clien.ui.deprecation.convert.action=将请求转换为新格式

# run-configuration
http.request.run.configuration.panel.title=配置
http.request.run.configuration.name=HTTP 请求
http.request.run.configuration.description=执行 '*.http' 或 '*.rest' 文件中描述的 HTTP 请求
http.request.run.configuration.env.label=环境 (&E)：
http.request.run.configuration.env.combo.box.tooltip=定义要在请求中使用的变量的环境
http.request.run.configuration.no.env.name=无环境
http.request.run.configuration.file.label=&文件\:
http.request.run.configuration.index.label=请求(&R)\:
http.request.run.configuration.index.description=文件中 '@name' 文档注释或请求顺序的值
http.request.run.configuration.file.is.not.configured=未配置 HTTP 请求文件路径
http.request.run.configuration.file.doesn.exists=无法找到要执行的文件
http.request.run.configuration.request.doesn.exists=无法找到要执行的 HTTP 请求，选择了 \#{0} 个，但只有一个请求
http.request.run.configuration.request.doesn.exists.many=无法找到要执行的 HTTP 请求，选择了 \#{0} 个，但只有 {1} 个请求
http.request.run.configuration.run.single.request=运行单个请求
http.request.run.configuration.run.all.in.file=运行文件中的所有请求

# doc comment tags
http.request.doc.comment.documentation.no.redirect=该标记可为请求禁用自动重定向处理
http.request.doc.comment.documentation.no.log=该标记可禁用自动响应日志记录，当响应可能包含敏感信息时较为实用
http.request.doc.comment.documentation.no.cookie=该标记可禁用在请求之间保留 Cookie。<br/>此请求将不会使用 Cookie jar 中的 Cookie，也不会保留响应中的 Cookie。
http.request.doc.comment.documentation.use.os.credentials=带有该标记的请求将尝试从操作系统获取授权票证。

# converter
http.request.convert.curl.ui.title=将 cURL 转换为 HTTP 请求
http.request.convert.curl.ui.title.toolbar=从 cURL 转换
http.request.convert.curl.ui.ok.action=&转换
http.request.convert.curl.to.http.request.failed.title=无法将 cURL 转换为 HTTP 请求
http.request.convert.curl.is.not.curl=输入字符串不是 curl
http.request.convert.curl.no.url=无法在 curl 命令中找到 url
http.request.convert.curl.unknown.option=不支持选项 ''{0}''
http.request.convert.curl.no.data=无法找到选项 ''{0}'' 的必需数据
http.request.convert.curl.method.not.supported=不支持自定义 HTTP 方法\: ''{0}''
http.request.convert.curl.invalid.url=curl 命令的 url 无效\: ''{0}''
http.request.convert.curl.invalid.header=头名称不应为空\: ''{0}''
http.request.convert.curl.custom.path.in.form.data=无法解析表单数据中文件的路径\: ''{0}''
http.request.convert.curl.form.data.no.value=无法解析表单数据，值为空\: ''{0}''
action.DumbAware.RESTClient.text.submit.request=提交请求
action.DumbAware.RESTClient.text.update.resource.paths.from.code=从代码更新资源路径
action.DumbAware.RESTClient.text.close=关闭

# microservices
http.request.microservices.generate.from.endpoints.view.title=生成 HTTP 请求
http.request.microservices.generate.from.endpoints.view.fail.title=HTTP 编辑器中的请求生成失败
http.request.microservices.generate.from.endpoints.view.fail.message=部分 URL 无效\:
http.request.microservices.generate.from.endpoints.view.fail.dropdown=无效 URL