uml.class.diagram.file.name=''{0}'' 类图
building.diagram=构建 {0}
error=错误
new.class=新建类
new.enum=新建枚举
new.record=新记录
new.interface=新建接口
cant.create.element=无法在目录 {1} 中创建 {0}
add.new.field.title=向 {0} 添加新字段或常量
add.new.enum.constant.title=向 {0} 添加新的枚举常量
create.new.method.dialog.title=创建新方法
create.new.constructor.dialog.title=创建新构造函数
create.method=创建(&C)
final.class.cant.be.inherited=类 {0} 是 final
node.is.interface=接口只能继承一个接口
error.cant.create.edge=无法创建关系链接
preview=预览
this.will.remove.relationship.link.between.classes=这将移除类之间的关系链接并修改类 {0}。继续？
remove.relationship.link=移除关系链接
class.must.be.abstract.or.implement.methods=类 ''{0}'' 必须声明为抽象或实现所需的抽象方法
class.must.be.abstract.title=实现方法或将类声明为抽象
generate.methods=生成方法
make.abstract=抽象化
initializer.is.empty=初始化器为空
constant.in.interface.must.have.initializer=接口中的常量必须具有初始化器
class.is.readonly=类 ''{0}'' 是只读的
file.is.readonly=文件 ''{0}'' 是只读的
annotation.class.cant.be.extended.or.implemented=注解不能继承/实现其他类/接口
remove.annotation.from.class=从 {1} 中移除注解 @{0}
relationship.already.exists={0} 与 {1} 之间的关系已存在
show.supers.for={0} 的超类
UML=UML
uml.file.name.for.changes=\ ''{0}'' 的更改
other=其它
select.uml.provider=选择图类型
dependencies=依赖
uml.structure.view=图元素
abstract=抽象(&B)
set.up.jdk=未设置 JDK
make.class.abstract=使类抽象
change.visibility.group.text=更改可见性级别
change.scope.group.text=更改范围
modules.diagram.presentable.name=项目模块
uml.java.presentable.name=Java 类图
uml.jigsaw.presentable.name=Java 模块图
diff.presentable.name=显示差异
add.modules.libraries=添加模块和库...
looking.for.dependencies=查找依赖
dependencies.for.module=模块 ''{0}'' 的依赖
show.modules.dependencies=显示模块依赖
fit.content.after.layout=在布局后调整内容(&F)
do.relayout.when.new.elements.were.added=添加新元素时重新布局(&R)
default.layout=默认布局(&L)：
default.scope=默认作用域(&S)：
change.list.contains.too.many.files=更改列表 ''{0}'' 包含超过 {1} 个文件
show.categories.title=显示类别
uml.java.calculating.dependencies=计算依赖
uml.java.package.title=包 {0}
uml.java.default.package.title=顶级包
action.UML.Find.text=查找元素图
action.UML.ShowStructure.text=查看结构
action.UML.SaveDiagram.text=保存 UML 图
action.Uml.ShowDiff.text=以 UML 显示差异
action.Uml.ExpandNodes.text=展开节点
action.Uml.CollapseNodes.text=折叠节点
action.Diagram.DeselectAll.text=取消全选
action.Diagram.SelectAll.text=全选
action.UML.ShowChanges.text=以 UML 显示本地更改
action.ShowUmlDiagramPopup.text=显示 UML 弹出窗口
action.ShowUmlDiagram.text=显示 UML 图
action.Uml.NewElement.text=新建
group.Uml.NewGroup.text=图表
group.UML.Group.text=图
group.UML.Group.description=图
group.UML.Group.Simple.text=图
group.UML.Group.Simple.description=图
group.UML.EditorGroup.text=图
group.UML.EditorGroup.description=图
configurable.UmlConfigurable.display.name=图
settings.select.categories.text=选择每次显示图表时默认启用的类别
color.descriptor.node.header=节点标头
color.descriptor.node.background=节点背景
color.descriptor.realization.edge=实现边缘
color.descriptor.generalization.edge=泛化边缘
color.descriptor.default.edge=默认边缘
color.descriptor.annotation.edge=默认边缘
color.descriptor.inner.class.edge=内部类边缘
color.descriptor.note.background=注释背景
color.descriptor.note.border=注释边界
dialog.message.can.t.save.converted.content.into.file.check.read.only.status=无法将转换的内容保存到文件中。请检查是否为只读状态。
dialog.title.old.diagram.format=旧图表格式
dialog.message.this.file.has.old.format.would.you.like.to.convert.it=此文件为旧格式。要进行转换吗?
action.text.show.0.1=显示 {0}{1}…
dialog.description.save.uml.class.diagram.as.uml=将 UML 类图另存为 .uml
dialog.title.save.file=保存文件
configurable.display.name.diagrams=图
group.action.text.new=新建
dialog.title.edit.note=编辑注释
dialog.message.note.text=注释文本
popup.title.select.target.node=选择目标节点                         
goto.class.prompt.text.enter.class.name.to.add=输入要添加的类名
dialog.title.add.a.note=添加注释
popup.title.select.change.list=选择更改列表
file.type.description.diagram=图表
task.title.calculating.paths=计算路径
dialog.message.can.t.show.more.than.0.changes.at.one.diagram=在一个图表中显示的变更数不能超过 {0} 个。
action.name.show.diagram.structure=显示图表结构
action.name.set.edge.creation.mode=设置边缘创建模式
action.name.select.all=全选
command.edit.note=编辑注释
notification.message.scope.has.been.changed.to.b.all.b=范围已被更改为<b>全部</b>
action.name.change.visibility.to.0=将可见性更改为 {0}
action.name.safe.delete=安全删除
action.name.show.dependencies=显示依赖项
action.name.collapse.nodes=折叠节点
action.name.expand.nodes=展开节点
action.name.change.scope.to.0=将范围更改为{0}
command.add.elements=添加元素
action.name.create.line=创建行
action.name.add.note=添加注释
action.name.save.diagram=保存图表
action.name.deselect.all=取消全选
action.name.add.elements2=添加元素
action.name.enable.category=启用{0}
action.name.disable.category=禁用{0}