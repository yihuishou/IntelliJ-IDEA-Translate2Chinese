# Message we display for inspection if user uses custom class type members that do not exist
custom.type.mimic.name=\u52A8\u6001\u7C7B\u57FA\u4E8E {0}

### Refactoring

refactoring.extract.method.error.interrupted.execution.flow=\u6267\u884C\u6D41\u4E2D\u65AD\u65F6\u65E0\u6CD5\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.star.import=\u65E0\u6CD5\u4F7F\u7528\u4EE3\u7801\u5757\u5185\u7684 star \u5BFC\u5165\u8BED\u53E5\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.yield=\u65E0\u6CD5\u4F7F\u7528\u4EE3\u7801\u5757\u5185\u7684 'yield' \u8BED\u53E5\u6267\u884C\u91CD\u6784

### Annotators ###
ANN.deleting.none=\u5220\u9664 None
ANN.assign.to.none=\u8D4B\u503C\u7ED9 None
ANN.cant.assign.to.call=\u65E0\u6CD5\u5206\u914D\u7ED9\u51FD\u6570\u8C03\u7528
ANN.cant.delete.call=\u65E0\u6CD5\u5220\u9664\u51FD\u6570\u8C03\u7528
ANN.cant.aug.assign.to.generator=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u751F\u6210\u5668\u8868\u8FBE\u5F0F
ANN.cant.aug.assign.to.tuple.or.generator=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u5143\u7EC4\u6587\u5B57\u6216\u751F\u6210\u5668\u8868\u8FBE\u5F0F
ANN.cant.assign.to.generator=\u65E0\u6CD5\u5206\u914D\u7ED9\u751F\u6210\u5668\u8868\u8FBE\u5F0F
ANN.cant.assign.to.operator=\u65E0\u6CD5\u5206\u914D\u7ED9\u8FD0\u7B97\u7B26
ANN.cant.assign.to.parens=\u65E0\u6CD5\u5206\u914D\u7ED9 ()
ANN.cant.aug.assign.to.list.or.comprh=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u5217\u8868\u6587\u5B57\u6216\u63A8\u5BFC\u5F0F
ANN.cant.assign.to.comprh=\u65E0\u6CD5\u5206\u914D\u7ED9\u5217\u8868\u63A8\u5BFC\u5F0F
ANN.cant.assign.to.dict.comprh=\u65E0\u6CD5\u5206\u914D\u7ED9\u5B57\u5178\u63A8\u5BFC\u5F0F
ANN.cant.assign.to.set.comprh=\u65E0\u6CD5\u5206\u914D\u7ED9\u96C6\u5408\u63A8\u5BFC\u5F0F
ANN.cant.aug.assign.to.comprh=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u5217\u8868\u63A8\u5BFC\u5F0F
ANN.cant.aug.assign.to.dict.comprh=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u5B57\u5178\u63A8\u5BFC\u5F0F
ANN.cant.aug.assign.to.set.comprh=\u65E0\u6CD5\u589E\u5F3A\u5206\u914D\u7ED9\u96C6\u5408\u63A8\u5BFC\u5F0F
ANN.cant.assign.to.literal=\u65E0\u6CD5\u5206\u914D\u7ED9\u6587\u5B57
ANN.cant.delete.literal=\u65E0\u6CD5\u5220\u9664\u6587\u5B57
ANN.cant.assign.to.lambda=\u65E0\u6CD5\u5206\u914D\u7ED9 lambda

ANN.break.outside.loop='break' \u5728\u5FAA\u73AF\u5916
ANN.continue.outside.loop='continue' \u5728\u5FAA\u73AF\u5916

ANN.$0.assigned.before.global.decl=\u5728\u5168\u5C40\u58F0\u660E\u524D\u5DF2\u5206\u914D\u540D\u79F0 ''{0}''

ANN.duplicate.param.name=\u91CD\u590D\u7684\u53C2\u6570\u540D\u79F0
ANN.starred.param.after.kwparam=* \u53C2\u6570\u5728 ** \u53C2\u6570\u540E\u9762
ANN.regular.param.after.vararg=\u6B63\u5219\u53C2\u6570\u5728 * \u53C2\u6570\u540E\u9762
ANN.regular.param.after.keyword=\u6B63\u5219\u53C2\u6570\u5728 ** \u53C2\u6570\u540E\u9762
ANN.non.default.param.after.default=\u9ED8\u8BA4\u53C2\u6570\u540E\u9762\u8DDF\u968F\u975E\u9ED8\u8BA4\u53C2\u6570
ANN.named.parameters.after.star=bare * \u540E\u9762\u5FC5\u987B\u8DDF\u968F\u547D\u540D\u53C2\u6570
ANN.named.parameters.before.slash=\u547D\u540D\u53C2\u6570\u5FC5\u987B\u4F4D\u4E8E bare / \u524D\u9762
ANN.tuple.py3=Python 3 \u4E2D\u4E0D\u652F\u6301\u5143\u7EC4\u53C2\u6570\u89E3\u538B\u7F29
ANN.multiple.args=\u4E0D\u5141\u8BB8\u591A\u4E2A * \u53C2\u6570
ANN.multiple.kwargs=\u4E0D\u5141\u8BB8\u591A\u4E2A ** \u53C2\u6570
ANN.multiple.slash=\u4E0D\u5141\u8BB8\u591A\u4E2A / \u53C2\u6570
ANN.slash.param.after.vararg=/ \u53C2\u6570\u5FC5\u987B\u5728 * \u53C2\u6570\u524D\u9762
ANN.slash.param.after.keyword=/ \u53C2\u6570\u5FC5\u987B\u5728 ** \u53C2\u6570\u524D\u9762

ANN.star.import.at.top.only=\u4EC5\u5728\u6A21\u5757\u7EA7\u522B\u5141\u8BB8 'import *' 

ANN.missing.closing.quote=\u7F3A\u5C11\u53F3\u5F15\u53F7 [{0}]
ANN.missing.closing.triple.quotes=\u7F3A\u5C11\u53F3\u4E09\u5F15\u53F7

ANN.method.$0.removed.use.$1=\u65B9\u6CD5 ''{0}'' \u5DF2\u79FB\u9664\uFF0C\u6539\u4E3A\u4F7F\u7528 ''{1}''
ANN.method.$0.removed=\u65B9\u6CD5 ''{0}'' \u5DF2\u79FB\u9664

### parsing
PARSE.expected.expression=\u8868\u8FBE\u5F0F\u662F\u9884\u671F\u7684
PARSE.expected.rbracket=']' \u9884\u671F
PARSE.expected.expr.or.comma.or.bracket=\u9884\u671F\u4E3A\u8868\u8FBE\u5F0F\u3001',' \u6216 ']'
PARSE.expected.in=\u9884\u671F\u4E3A 'in'
PARSE.expected.for.or.bracket=\u9884\u671F\u4E3A ']' \u6216 'for'
PARSE.expected.comma=',' \u9884\u671F
PARSE.expected.colon='\:' \u9884\u671F
PARSE.expected.rpar=')' \u662F\u9884\u671F\u7684
PARSE.expected.lpar='(' \u9884\u671F
PARSE.expected.rbrace='}' \u9884\u671F
PARSE.expected.tick=\u9884\u671F\u4E3A '`'\uFF08\u53CD\u5F15\u53F7\uFF09
PARSE.expected.name=\u9884\u671F\u540D\u5B57
PARSE.expected.colon.or.rbracket=\u9884\u671F\u4E3A '\:' \u6216 ']'
PARSE.expected.comma.or.rpar=\u9884\u671F\u4E3A ',' \u6216 ')'
PARSE.expected.else=\u9884\u671F\u4E3A 'else'

PARSE.expected.identifier=\u6807\u8BC6\u7B26\u662F\u9884\u671F\u7684
PARSE.expected.comma.lpar.rpar=\u9884\u671F\u4E3A ',' \u6216 '(' \u6216 ')'
PARSE.expected.statement.break=\u9884\u671F\u8BED\u53E5\u4E2D\u65AD
PARSE.expected.@.or.def=\u9884\u671F\u4E3A '@' \u6216 'def'
PARSE.expected.formal.param.name=\u9884\u671F\u4E3A\u6B63\u5F0F\u53C2\u6570\u540D\u79F0
PARSE.0.expected={0}\u662F\u9884\u671F\u7684
PARSE.expected.ellipsis='...' \u662F\u9884\u671F\u7684

statement.expected.found.0=\u9884\u671F\u4E3A\u8BED\u53E5\uFF0C\u53D1\u73B0\u4E3A {0}
unexpected.indent=\u5F02\u5E38\u7F29\u8FDB
unindent.does.not.match.any.outer.indent=\u53D6\u6D88\u7F29\u8FDB\u4E0D\u5339\u914D\u4EFB\u4F55\u5916\u90E8\u7F29\u8FDB\u7EA7\u522B
except.or.finally.expected=\u5E94\u4E3A 'except' \u6216 'finally'
expected.statement=\u9884\u671F\u4E3A\u8BED\u53E5
dedent.expected=\u9884\u671F\u4E3A\u5411\u5DE6\u7F29\u8FDB
indent.expected=\u9884\u671F\u7F29\u8FDB
indented.block.expected=\u9884\u671F\u4E3A\u7F29\u8FDB\u7684\u5757
cannot.assign.to.yield.expression=\u65E0\u6CD5\u5206\u914D\u7ED9 'yield' \u8868\u8FBE\u5F0F
end.of.statement.expected=\u9884\u671F\u4E3A\u8BED\u53E5\u7ED3\u675F
import.expected=\u9884\u671F\u4E3A 'import'
def.or.with.or.for.expected=\u9884\u671F\u4E3A 'def' \u6216 'with' \u6216 'for'
rbracket.or.comma.expected=\u9884\u671F\u4E3A ']' \u6216 ','
unexpected.expression.syntax=\u5F02\u5E38\u7684\u8868\u8FBE\u5F0F\u8BED\u6CD5
tuple.expression.expected=\u9884\u671F\u4E3A\u5143\u7EC4\u8868\u8FBE\u5F0F
value.expression.expected=\u9884\u671F\u4E3A\u503C\u8868\u8FBE\u5F0F
unexpected.expression.part=\u5F02\u5E38\u7684\u8868\u8FBE\u5F0F\u90E8\u5206
unexpected.f.string.token=\u5F02\u5E38\u7684\u683C\u5F0F\u5316\u5B57\u7B26\u4E32\u4EE4\u724C
can.t.assign.to.await.expression=\u65E0\u6CD5\u5206\u914D\u7ED9 await \u8868\u8FBE\u5F0F
for.expected=\u9884\u671F\u4E3A 'for'
rarrow.expected='->' \u9884\u671F
unexpected.tokens=\u610F\u5916\u4EE4\u724C

PARSE.function.type.annotations.py2=Python 2 \u4E0D\u652F\u6301\u7C7B\u578B\u6CE8\u89E3
PARSE.function.return.type.annotations.py2=Python 2 \u4E0D\u652F\u6301\u8FD4\u56DE\u7C7B\u578B\u6CE8\u89E3

PARSE.console.multiline.magic.warn=\u591A\u884C\u9B54\u672F\u4E0D\u80FD\u7528\u4F5C\u8868\u8FBE\u5F0F
PARSE.console.identifier.expected=\u6807\u8BC6\u7B26\u662F\u9884\u671F\u7684.
PARSE.console.help.request.warn=\u540D\u79F0\u540E\u9762\u5FC5\u987B\u8DDF\u968F\u5E2E\u52A9\u8BF7\u6C42

### quick doc generator
QDOC.module.path.unknown=\uFF08\u6A21\u5757\u8DEF\u5F84\u672A\u77E5\uFF09
QDOC.epydoc.python2.sdk.not.found=\u60A8\u9700\u8981\u914D\u7F6E\u597D\u7684 Python 2 SDK \u6765\u5448\u73B0 <a href\='http\://epydoc.sourceforge.net/'>Epydoc</a> \u6587\u6863\u5B57\u7B26\u4E32
QDOC.local.sdk.not.found=\u60A8\u9700\u8981\u914D\u7F6E\u597D\u7684\u672C\u5730 Python SDK \u6765\u5448\u73B0\u6587\u6863\u5B57\u7B26\u4E32\u3002
QDOC.assigned.to=\u5DF2\u5206\u914D\u7ED9\uFF1A
QDOC.documentation.is.copied.from=\u6587\u6863\u590D\u5236\u81EA\uFF1A
QDOC.accessor.kind=\u8BBF\u95EE\u5668\u79CD\u7C7B\uFF1A
QDOC.raises=\u5F15\u53D1\uFF1A
QDOC.keyword.args=\u5173\u952E\u5B57\u53C2\u6570\uFF1A
QDOC.returns=\u8FD4\u56DE\:
QDOC.params=\u53C2\u6570\:

### Formatter
formatter.panel.dict.alignment.do.not.align=\u4E0D\u5BF9\u9F50
formatter.panel.dict.alignment.align.on.colon=\u5BF9\u9F50\u5192\u53F7
formatter.panel.dict.alignment.align.on.value=\u5BF9\u9F50\u503C

QFIX.add.field.to.class=\u6DFB\u52A0\u5B57\u6BB5\u5230\u7C7B
QFIX.added.constructor.$0.for.field.$1=\u6DFB\u52A0\u4E86 __init__ \u5230\u7C7B <code>{0}</code><br/>\uFF0C\u4EE5\u9002\u5E94\u65B0\u5B57\u6BB5 <code>{1}</code>
QFIX.NAME.remove.parameter=\u5220\u9664\u53C2\u6570
QFIX.rename.parameter.to.$0=\u91CD\u547D\u540D\u4E3A ''{0}''
QFIX.NAME.add.field.$0.to.class.$1=\u6DFB\u52A0\u5B57\u6BB5 ''{0}'' \u5230\u7C7B {1}
QFIX.NAME.remove.statement=\u79FB\u9664\u8BED\u53E5
QFIX.failed.to.add.field=<br/>\u65E0\u6CD5\u6DFB\u52A0\u5B57\u6BB5\!<br/><br/>

#PyDefaultArgumentQuickFix
QFIX.default.argument=\u66FF\u6362\u53EF\u53D8\u9ED8\u8BA4\u53C2\u6570

QFIX.redundant.parentheses=\u79FB\u9664\u5197\u4F59\u62EC\u53F7

QFIX.simplify.boolean.expression=\u7B80\u5316\u5E03\u5C14\u8868\u8FBE\u5F0F
QFIX.simplify.$0=\u5C06\u5E03\u5C14\u8868\u8FBE\u5F0F\u66FF\u6362\u4E3A ''{0}''

QFIX.chained.comparison=\u7B80\u5316\u94FE\u5F0F\u6BD4\u8F83

INSP.GROUP.python=Python

# PyUnresolvedReferencesInspection
INSP.NAME.unresolved.refs=\u672A\u89E3\u6790\u7684\u5F15\u7528
INSP.module.$0.not.found=\u627E\u4E0D\u5230\u6A21\u5757 ''{0}''
INSP.unresolved.ref.$0=\u672A\u89E3\u6790\u7684\u5F15\u7528 ''{0}''
INSP.unresolved.ref.$0.for.class.$1=\u7C7B ''{1}'' \u7684\u5C5E\u6027\u5F15\u7528 ''{0}'' \u672A\u89E3\u6790
INSP.cannot.find.$0.in.$1=\u5728 ''{1}'' \u4E2D\u627E\u4E0D\u5230\u5F15\u7528 ''{0}''
INSP.unresolved.operator.ref=\u7C7B ''{0}'' \u672A\u5B9A\u4E49 ''{1}''\uFF0C\u6240\u4EE5\u4E0D\u80FD\u5BF9\u5176\u5B9E\u4F8B\u4F7F\u7528 ''{2}'' \u8FD0\u7B97\u7B26
python.stub=Python \u5B58\u6839

# PyRedundantParenthesesInspection
INSP.NAME.redundant.parentheses=\u5197\u4F59\u62EC\u53F7
INSP.redundant.parens.ignore.empty.lists.of.base.classes=\u5FFD\u7565\u57FA\u7C7B\u7684\u7A7A\u5217\u8868
INSP.redundant.parens.ignore.tuples=\u5FFD\u7565\u5143\u7EC4
INSP.redundant.parens.ignore.argument.of.operator=\u5FFD\u7565 % \u8FD0\u7B97\u7B26\u7684\u53C2\u6570

# PySimplifyBooleanCheckInspection
INSP.NAME.check.can.be.simplified=\u53EF\u4EE5\u7B80\u5316\u5E03\u5C14\u53D8\u91CF\u68C0\u67E5
INSP.expression.can.be.simplified=\u53EF\u4EE5\u7B80\u5316\u8868\u8FBE\u5F0F
INSP.simplify.boolean.check.ignore.comparison.to.zero=\u5FFD\u7565\u4E0E\u96F6\u7684\u6BD4\u8F83

# Actions and associated commands
ACT.CMD.use.import=\u4F7F\u7528\u5BFC\u5165\u7684\u6A21\u5757
ACT.qualify.with.module=\u4F7F\u7528\u5BFC\u5165\u7684\u6A21\u5757\u8FDB\u884C\u9650\u5B9A
ACT.from.some.module.import=\u4ECE...\u5BFC\u5165

### Quick fixes ###
QFIX.auto.import.family=\u5BFC\u5165
QFIX.auto.import.import.this.name=\u5BFC\u5165\u6B64\u540D\u79F0
QFIX.auto.import.import.name=\u5BFC\u5165 ''{0}''

QFIX.local.auto.import.family=\u672C\u5730\u5BFC\u5165
QFIX.local.auto.import.import.locally=\u672C\u5730 {0}

python.docstring.file.type=python \u6587\u6863\u5B57\u7B26\u4E32
python.function.type.annotation.file.type.description=Python PEP-484 \u51FD\u6570\u7C7B\u578B\u6CE8\u91CA
# PyUnusedLocalInspection
INSP.NAME.unused=\u672A\u4F7F\u7528\u672C\u5730
INSP.unused.locals.parameter.isnot.used=\u672A\u4F7F\u7528\u53C2\u6570 ''{0}'' \u503C 
INSP.unused.locals.local.variable.isnot.used=\u672A\u4F7F\u7528\u5C40\u90E8\u53D8\u91CF ''{0}'' \u503C
INSP.unused.locals.replace.with.wildcard=\u66FF\u6362\u4E3A _
INSP.unused.locals.local.function.isnot.used=\u672A\u4F7F\u7528\u5C40\u90E8\u51FD\u6570 ''{0}''
INSP.unused.locals.local.class.isnot.used=\u672A\u4F7F\u7528\u5C40\u90E8\u7C7B ''{0}''

INSP.unused.locals.ignore.variables.starting.with=\u5FFD\u7565\u4EE5 '_' \u5F00\u5934\u7684\u53D8\u91CF
INSP.unused.locals.ignore.range.iteration.variables=\u5FFD\u7565\u8303\u56F4\u8FED\u4EE3\u53D8\u91CF
INSP.unused.locals.ignore.lambda.parameters=\u5FFD\u7565 lambda \u53C2\u6570
INSP.unused.locals.ignore.variables.used.in.tuple.unpacking=\u5FFD\u7565\u5143\u7EC4\u89E3\u538B\u7F29\u65F6\u4F7F\u7528\u7684\u53D8\u91CF

find.usages.unnamed=<\u672A\u547D\u540D>
find.usages.keyword.argument=\u5173\u952E\u5B57\u53C2\u6570
find.usages.variable=\u53D8\u91CF
find.usages.imported.module.alias=\u5DF2\u5BFC\u5165\u6A21\u5757\u522B\u540D
find.usages.class=\u7C7B
find.usages.function=\u51FD\u6570
find.usages.method=\u65B9\u6CD5
find.usages.parameter=\u53C2\u6570

python.find.usages=\u53D1\u73B0\u7528\u6CD5
python.find.usages.base.method.question=\u65B9\u6CD5 {0} \u8986\u76D6\u7C7B {1} \u7684\u65B9\u6CD5\u3002\n\u662F\u5426\u8981\u67E5\u627E\u8FD9\u79CD\u57FA\u672C\u65B9\u6CD5\u7684\u7528\u6CD5\uFF1F
python.find.usages.usage.in.superclass.list=\u8D85\u7C7B\u5217\u8868\u4E2D\u7684\u7528\u6CD5
python.find.usages.usage.in.isinstance=isinstance() \u4E2D\u7684\u7528\u6CD5
python.find.usages.untyped.probable.usage=\u65E0\u7C7B\u578B\uFF08\u53EF\u80FD\uFF09\u7528\u6CD5
python.find.usages.usage.in.import.statement=\u5BFC\u5165\u8BED\u53E5\u4E2D\u7684\u7528\u6CD5
