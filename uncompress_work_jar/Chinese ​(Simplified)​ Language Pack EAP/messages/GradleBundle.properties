gradle.name=Gradle


gradle.settings.text.default=默认

gradle.settings.text.distribution=使用来自此位置的 Gradle\:
gradle.settings.text.distribution.bundled=与 IDE 捆绑（版本 {}）
gradle.settings.text.distribution.wrapper='gradle-wrapper.properties' 文件
gradle.settings.text.distribution.wrapper.task=Gradle 构建脚本中的 'wrapper' 任务
gradle.settings.text.distribution.location=指定位置

gradle.settings.text.home.path=Gradle 主目录：
gradle.settings.text.jvm.path=Gradle JVM：
gradle.settings.text.vm.options=Gradle VM 选项：
gradle.settings.text.vm.options.link.tooltip=此设置已弃用，请改为使用 'gradle.properties’ 文件中的 'org.gradle.jvmargs’ 属性
gradle.settings.text.vm.options.link.text=迁移
gradle.settings.text.vm.options.empty.text=虚拟机选项已移至 gradle.properties
gradle.settings.text.vm.options.confirm.text=要将虚拟机选项移至 ''{0}'' 文件吗?\n\
请注意，现有的 ''org.gradle.jvmargs'' 属性将被覆盖。\n\
\n\
您可以稍后手动执行此操作
gradle.settings.text.vm.options.migration.error.text={0}\n\
\n\
请手动迁移设置
gradle.settings.text.vm.options.migration.error.title=迁移错误
gradle.settings.text.user.home=Gradle 用户主目录：
gradle.settings.text.user.home.hint=覆盖 Gradle 存储下载文件的默认位置，例如调整 Windows 中的防毒软件
gradle.settings.text.user.home.dialog.title=选择 Gradle 用户主目录
gradle.settings.text.generate.iml.files=为从 Gradle 导入的模块生成 *.iml 文件
gradle.settings.text.generate.iml.files.hint=如果您有包含 {0} 模块和 Gradle 模块的混合项目，则启用此设置，以便通过 VCS 共享该项目

gradle.settings.text.module.per.source.set=根据 Gradle 源集生成 {0} 模块
gradle.settings.text.module.per.source.set.hint=此设置已弃用，因为它不完全兼容 Gradle 的模型。<br>请考虑将其恢复为默认设置（选中）
gradle.settings.text.download.annotations=下载依赖项的外部注解

gradle.settings.text.build.run.title=构建和运行
gradle.settings.text.build.run.hint=默认情况下，{0} 使用 Gradle 来构建项目并运行任务。<br><br> 在纯 Java/Kotlin 项目中，由于进行了优化，因而通过 IDE 构建和运行的速度可能更快。请注意，IDE 并非对所有 Gradle 插件都提供支持，可能无法使用其中一些插件正确构建项目。

gradle.settings.text.build.run=使用此工具构建和运行：
gradle.settings.text.run.tests=使用此工具运行测试：
gradle.settings.text.build.run.per.test=根据测试选择：

gradle.home.setting.type.explicit.incorrect=Gradle 位置不正确。\n\
位置：{0}
gradle.home.setting.type.explicit.empty=未指定 Gradle 位置

gradle.jvm.undefined=请设置 Gradle JVM 选项
gradle.jvm.incorrect=Gradle JVM 选项不正确：\n\
路径：{0}
gradle.jvm.is.jre=请为  Gradle 导入器使用 JDK，不要使用 JRE。
gradle.jvm.is.invalid=找到无效的 Gradle JDK 配置。
gradle.jvm.is.downloading=正在下载 Jdk，请稍候。
gradle.open.gradle.settings=打开 Gradle 设置
gradle.title.gradle.settings=Gradle 设置

gradle.toolwindow.text.no.linked.project=\n\
没有 Gradle 项目\n\
您可以 {@action Gradle.LinkToProject} 一个。
gradle.notifications.use.distribution.with.sources=您可以将 Gradle 包装器配置为使用源分发。它将为 IDE 提供 Gradle API/DSL 文档。
gradle.notifications.hide.tip=隐藏提示
gradle.notifications.apply.suggestion=好的，应用建议！
gradle.notifications.unlinked.project.found.title={0} 找到了 Gradle 构建脚本
gradle.notifications.unlinked.project.found.import=导入 Gradle 项目
gradle.notifications.unlinked.project.found.skip=跳过
gradle.notifications.unlinked.project.found.help=IDE 可以从 Gradle 构建脚本导入项目信息（例如源和依赖项）。<br> <br>如果不确定或这不是 Gradle 项目，请按“跳过”。<br>您可以稍后导入 Gradle 项目。

gradle.notifications.java.home.invalid.title=找到无效的 Gradle JVM 配置
gradle.notifications.java.home.unsupported.content=JDK {0} 与 Gradle {1} 不兼容。
gradle.notifications.java.home.property.content=请修复 {0} 中的 <i>org.gradle.java.home</i>。
gradle.notifications.java.home.variable.content=请修复 <i>JAVA_HOME</i> 环境变量。

gradle.codeInsight.action.apply_plugin.text=添加 Gradle 插件
gradle.codeInsight.action.apply_plugin.description=向项目中添加选定的 Gradle 插件
gradle.codeInsight.action.apply_plugin.popup.title=选择插件

gradle.codeInsight.action.add_maven_dependency.text=添加 Maven 构件依赖项
gradle.codeInsight.action.add_maven_dependency.description=向项目中添加选定的 Maven 构件依赖项

gradle.codeInsigt.buildscript.classpath.description=此脚本类路径配置用于编译和执行构建脚本。此类路径还用于加载构建脚本使用的插件。

gradle.runner=运行程序
gradle.test.runner.ui.tests.tree.presentation.labels.waiting.tests=正在等待测试...
gradle.test.runner.ui.tests.tree.presentation.labels.no.tests.were.found=未收到测试事件
gradle.test.runner.ui.tests.actions.open.gradle.report.text=打开 Gradle 测试报告
gradle.test.runner.ui.tests.actions.open.gradle.report.desc=打开测试任务生成的 Gradle 报告

# Gradle-Maven integration messages
gradle.integrations.maven.notification.not_updated_repository.title=<b>找到无索引的远程 Maven 存储库</b>
gradle.integrations.maven.notification.not_updated_repository.text=<a href\="\#update">更新索引</a>以补全依赖关系或<a href\="\#disable">禁用</a>此通知
gradle.integrations.maven.notification.to.be.disabled=所有项目都将禁用通知。\n\
\n\
使用“设置 |外观与行为 |通知 | {0} 可以配置通知。
gradle.integrations.maven.notification.detection=检测无索引的 Maven 存储库 Gradle
gradle.integrations.maven.notification.disable.text=禁用通知

exportable.GradleSystemRunningSettings.presentable.name=Gradle：系统运行

gradle.action.refresh.dependencies.text=刷新 Gradle 依赖项
gradle.action.refresh.dependencies.description=使用 --refresh-dependencie 参数刷新 Gradle 缓存中的依赖项

gradle.action.download.sources=下载源
gradle.action.download.sources.busy.text=正在下载源...
gradle.test.show.internal.nodes.action.name=显示内部 Gradle 测试套件
gradle.test.show.internal.nodes.action.text=显示内部 Gradle 测试套件，例如 'Gradle Test Executor N'
gradle.settings.title.debug=Gradle 调试

gradle.tests.tasks.choosing.popup.title.common=运行任务
gradle.tests.tasks.choosing.popup.title=运行 {0} 的任务
gradle.tests.tasks.choosing.popup.hint=选择多个要同时运行的任务
gradle.tests.tasks.choosing.warning.text=无可用任务
gradle.tests.pattern.producer.configuration.name={0} 和另外 {1} 个

gradle.structure.wizard.name.and.artifact.id.is.different.error={0} 名称和 artifactId 必须相同

action.Gradle.ImportExternalProject.text=导入 Gradle 项目
action.Gradle.ImportExternalProject.description=导入此文件所描述的 Gradle 项目
action.Gradle.OpenProjectCompositeConfiguration.text=组合构建配置
action.Gradle.ToggleOfflineAction.text=切换脱机模式
action.Gradle.ToggleOfflineAction.description=切换 Gradle 构建的脱机模式
action.Gradle.ExecuteTask.text=执行 Gradle 任务
gradle.settings.wizard.use.kotlin=Kotlin DSL 构建脚本
gradle.settings.wizard.additional.libs=其他库和框架 (&F)：

gradle.settings.wizard.groupid=GroupId
gradle.settings.wizard.artifactid=ArtifactId
gradle.settings.wizard.version=版本
gradle.settings.wizard.inherit=继承
gradle.settings.wizard.add.as.module.to=作为模块添加至
gradle.settings.composite.selector.description=请选择要包含在 Gradle 组合中的项目参与者。
gradle.settings.composite.build.title=组合构建配置
gradle.settings.composite.select.all=全选
gradle.settings.composite.unselect.all=取消全选

gradle.settings.wrapper.not.found=找不到 'gradle-wrapper.properties'

gradle.daemons.show.stopped=显示已停止
gradle.daemons.description.title=描述
gradle.daemons.refresh=刷新
gradle.daemons.stop.all=全部停止
gradle.daemons.stop.selected=停止选定项目
gradle.daemons.gradle.daemons=Gradle 守护进程
gradle.daemons.gradle.daemons.show=显示 Gradle 守护进程
gradle.daemons.close=关闭

gradle.tasks.script.debugging=启用 Gradle 脚本调试
gradle.tasks.directory.completion.description=Gradle 源集
gradle.tasks.runner.gradle.project=Gradle 项目 (&P)
gradle.tasks.runner.command.line=命令行 (&C)
gradle.tasks.runner.run.title=运行 Gradle 任务
gradle.tasks.runner.notification.working.dir.empty=工作目录为空

gradle.tasks.toggle.offline.search.title=切换 Gradle 脱机模式


gradle.tasks.annotations.title=解析已知的外部注解
gradle.tasks.annotations.looking.for=查找 {0} 的注解

