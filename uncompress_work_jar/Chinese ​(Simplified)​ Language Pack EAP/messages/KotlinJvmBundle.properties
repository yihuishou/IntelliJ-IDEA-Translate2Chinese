classpath.add.reflection=将 'kotlin-reflect.jar' 添加到类路径
classpath.add.script.runtime=将 'kotlin-script-runtime.jar' 添加到类路径
classpath.add.kotlin.test=将 'kotlin-test.jar' 添加到类路径

scratch.clear.button=清除结果
scratch.inlay.output.mode=嵌入式输出模式\n\n输出将显示在表达式旁边的代码编辑器中。非常适合短的单行输出。
scratch.inlay.output.mode.description=嵌入式输出模式
scratch.side.panel.output.mode=侧边面板输出模式\n\n输出显示在单独的面板中。如果输出是长行或多行，则很有用。
scratch.side.panel.output.mode.description=侧边面板输出模式

scratch.module.combobox=使用模块的类路径
scratch.run.button=运行临时文件
scratch.run.from.here.button=从这里运行临时文件
scratch.stop.button=停止临时文件执行

scratch.is.repl.checkbox=使用 REPL
scratch.is.repl.checkbox.description=在 Kotlin REPL 中运行。只执行添加到草稿末尾的新表达式

scratch.is.interactive.checkbox=交互模式
scratch.is.interactive.checkbox.description=在你停止键入 {0} 秒后运行

scratch.make.before.run.checkbox=运行前构建模块
scratch.make.before.run.checkbox.description=在运行 scratch 之前构建模块 {0}。只有已编译的代码才能从此作用域访问

incompatible.api.report=报告为不兼容的 API
choose.module.modules={0}、{1} 和<a href\="\#">其他 {2,number,\#} 个模块</a>
choose.module.modules.with.kotlin=带 Kotlin 文件的模块

choose.path.title=选择目标文件夹
choose.path.description=选择文件夹

configure.kotlin.title=使用 {0} 配置 Kotlin
configure.kotlin.find.maven.versions=查找 Kotlin Maven 插件版本
configure.kotlin.loading=载入中...
configure.kotlin.cant.load.versions=无法从 search.maven.org 加载版本列表

copy.into.title=复制到…
copy.into.description=选择将复制文件的文件夹

file.exists.single=文件 ''{0}'' 已存在于 {1} 中。要覆盖吗?
file.exists=文件已存在\:\n{0}\n要覆盖它们吗?
file.overwrite.title=覆盖文件
file.overwrite.overwrite=覆盖
file.overwrite.cancel=取消
file.destination.folder=目标文件夹
file.error.new.folder=创建文件夹时出错\: {0}
file.error.copy=复制 {0} 时出错

frameworks.remove.conflict.title=框架冲突
frameworks.remove.conflict.question=当前模块已使用 ''{0}'' 框架配置。\n要将其移除吗?

library.label.jvm=Kotlin 运行时
library.label.javascript=Kotlin JS 库

library.no.kotlin.library.title=未指定 Kotlin 运行时
library.no.kotlin.library.question=要在没有 Kotlin 运行时库的情况下继续吗?

run.configuration.error.no.module=模块未指定
run.configuration.error.no.main.class=未指定主类
run.configuration.error.class.not.found=类''{0}''未找到模块''{1}''
run.configuration.error.class.no.main.method=类 ''{0}'' 没有 ''main()'' 方法
run.configuration.error.main.not.found=未在类 ''{0}'' 中找到函数 ''main()''
run.configuration.error.main.not.found.top.level=未在包 ''{0}'' 中找到顶级函数 ''main()''

script.choose.file=选择脚本文件

editor.editor.only=仅编辑器
editor.preview.only=仅预览
editor.editor.and.preview=编辑器和预览