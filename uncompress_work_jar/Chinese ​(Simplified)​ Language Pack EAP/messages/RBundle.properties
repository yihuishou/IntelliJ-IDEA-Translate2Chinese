#
# Copyright 2000-2010 JetBrains s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

########################################################################################################################
# Module type
########################################################################################################################
module.ruby.title=Ruby 模块
module.ruby.description=Ruby 模块用于开发 <b>Ruby</b> 和 <b>Ruby on Rails</b> 应用程序。

project.jruby.title=JRuby 项目
module.jruby.title=JRuby 模块
module.jruby.description=提供用于开发 <b>JRuby</b> 应用程序的工具。

########################################################################################################################
# Ruby Sdk
########################################################################################################################
sdk.ruby.title=Ruby SDK
sdk.jruby.title=JRuby SDK
sdk.ruby.add=添加 Ruby SDK…

#Configuration
ruby.configuration.interpreter.path=解释器路径
ruby.configuration.gems.bin.dir.path=Gem bin 目录\:
ruby.configuration.gems.bin.dir.path.tooltip=gem 可执行脚本的安装路径
ruby.configuration.gems.bin.dir.select.path=选择 gem bin 目录

#Errors
jdk.no.specified=未指定 SDK
jdk.type.incorrect=SDK 类型错误
jdk.type.incorrect.homepath = SDK 的主路径不存在
sdk.error.homepath.doesnt.exists= ruby SDK ''{1}'' 的主路径 ({0}) 不存在。
sdk.error.isnt.valid=SDK ''{0}'' 不是有效的 Ruby SDK
sdk.error.gems.bindir.doesnt.exist=Gem bin 目录不存在
sdk.error.gems.bindir.isnt.directory=Gem bin 目录不是目录
sdk.error.cannot.create.sdk.title=无法创建 SDK
sdk.error.old.x64=<br> 您可能要在 Windows x64 上使用 jruby 1.1.3 或更早版本<br> 请参阅\: <a href \= "http\://jira.codehaus.org/browse/JRUBY-2881">JRUBY-2881</a>
sdk.error.invalid.interpreter.name=选定文件 ''{0}'' 不是 {1} 解释器。选择名称为 ''{2}'' 的可执行文件。

rails.sdk.gem.not.found=选择 'Rails' 版本

sdk.error.no.rails.found=[未在 SDK 中找到 Rails]

sdk.error.no.server.gem.found=[未在 SDK 中找到 ''{0}'' gem]
sdk.error.no.server.gem.found.rails3=[未在 SDK 中找到 ''{0}'' gem 或者它未添加到 Gemfile]

sdk.error.jruby.jdk.type.incorrect={0} 服务器只能和 JRuby SDK 一起运行
#########################################################################################################################
# Execution errors
########################################################################################################################
execution.error.title=执行错误
execution.error.no.executable.cmd.for.script=无法运行 ''{0}''
execution.error.no.executable.cmd.for.gem.name=无法运行 gem ''{0}''，无法找到 ''{1}''
execution.error.no.gem.found=无法找到 gem ''{0}''
execution.ruby.script.get.available.generators=用于获取可用生成器的脚本执行出错\:\n\
{0}
execution.error.testunit.spork.script.not.found=未找到 Spork 测试运行程序 'testdrb' 脚本。

########################################################################################################################
# Run configuration
########################################################################################################################
run.configuration.type.name=Ruby
run.configuration.type.description=Ruby 运行配置

run.configuration.script.name=Ruby 脚本
run.configuration.test.name=Ruby 测试
run.configuration.server.title=服务器
run.configuration.rspec.name=RSpec
run.configuration.rake.name=Rake
run.configuration.remote.debug.name=Ruby 远程调试
run.configuration.remote.debug.notification.title=远程调试

run.configuration.coverage.enable.in.test.folders=在测试文件夹中启用覆盖率(&T)
run.configuration.coverage.do.not.use.the.optimized.c.runtime=不使用优化的 C 运行时(&O)

run.configuration.messages.select.working.dir=选择工作目录
run.configuration.messages.script.args=脚本参数
run.configuration.messages.edit.script.args=编辑脚本参数

run.configuration.messages.select.ruby.script.path=选择 Ruby 脚本
run.configuration.messages.select.sdk.bound=Ruby SDK\:
run.configuration.messages.select.module=从模块中选择 SDK\:
run.configuration.messages.select.module.rubymine=使用项目 SDK\:
run.configuration.messages.working.dir=工作目录\:
run.configuration.messages.ruby.args=Ruby 参数
run.configuration.messages.edit.ruby.args=编辑 Ruby 参数
run.configuration.messages.script.path=Ruby 脚本\:
run.configuration.messages.folder.path=文件夹：
run.configuration.messages.select.folder.path=选择文件夹
run.configuration.dialog.components.sdk=SDK
run.configuration.tests.drb.checkbox=使用 DRb 服务器(&D) (请参阅“工具 | 运行 Spork DRb 服务器”…)
run.configuration.messages.runner.version.no.gems=[未在 SDK 中找到 {0} gem]
run.configuration.messages.runner.version=''{0}'' gem\:
run.configuration.tests.runner.options=运行程序选项
run.configuration.tests.runner.options.editor.title=编辑运行程序选项
run.configuration.messages.use.rails.runner=在 Rails 的上下文中执行

## Cucumber
cucumber.jruby.run.configuration.type.name = JRuby Cucumber
cucumber.jruby.run.configuration.type.description=使用 JRuby 和 Java 编写步骤定义的 Cucumber 功能的运行配置。
cucumber.jruby.errors.module.not.specified=未指定项目模块
cucumber.jruby.errors.jruby.facet.not.specified=没有为模块 ''{0}'' 配置 JRuby Facet
cucumber.jruby.errors.jruby.sdk.not.specified=没有为模块 ''{0}'' 指定 JRuby SDK

cucumber.run.configuration.type.name = Cucumber
cucumber.run.configuration.type.description=Cucumber 功能运行配置

cucumber.run.configuration.tests.form.testtype.title=模式\:
cucumber.run.configuration.tests.dialog.rb.allInFolder=文件夹中的所有功能(&F)
cucumber.run.configuration.messages.feature.path=功能文件(&F)
cucumber.run.configuration.tests.backtrace.checkbox=输出完整回溯(&B)
cucumber.run.configuration.tests.verbose.checkbox=显示加载的文件和功能(&L)
cucumber.run.configuration.messages.script.path=功能文件(&I)\:
cucumber.run.configuration.tests.dialog.components.folder=功能文件夹(&O)
cucumber.run.configuration.tests.dialog.components.filter.tags=标签筛选器(&T)
cucumber.run.configuration.tests.dialog.components.filter.elements=元素名称筛选器(&N)
cucumber.run.configuration.test.default.name={0} 中的所有功能\: {1}
cucumber.quick.fix.create.step.file.path.msg=请输入步骤定义文件的完整路径\:

## RSpec
rspec.run.configuration.type.name = RSpec
rspec.run.configuration.type.description=RSpec 示例运行配置

rspec.run.configuration.rspec.name=RSpec
rspec.run.configuration.tests.dialog.components.search.mask=文件名掩码\:
rspec.run.configuration.tests.dialog.components.example.name=示例名称
rspec.run.configuration.tests.dialog.messages.edit=编辑示例名称
rspec.run.configuration.tests.dialog.components.folder=规范文件夹
rspec.run.configuration.tests.dialog.rb.allInFolder=文件夹中的所有规范(&A)
rspec.run.configuration.tests.dialog.rb.file=规范脚本(&S)
rspec.run.configuration.tests.form.testtype.title=模式\:
rspec.run.configuration.messages.script.path=规范脚本\:

rspec.run.configuration.tests.dialog.components.select.spec.custom.runner=选择自定义 RSpec 运行程序脚本
rspec.run.configuration.tests.dialog.components.spec.custom.use=使用自定义 RSpec 运行程序脚本\:
rspec.run.configuration.tests.backtrace.checkbox=输出完整回溯(&B)
rspec.run.configuration.log.tab.name=RSpec 日志

run.configuration.tests.display.name=Test\:\:Unit/Shoulda/Minitest
run.configuration.tests.description=基于 Test\:\:Unit 和 Minitest 的运行配置
run.configuration.tests.messages.class.name=类\:
run.configuration.tests.messages.method.name=方法\:
run.configuration.test.form.testtype.title=模式\:
run.configuration.tests.dialog.components.folder=测试文件夹
run.configuration.tests.dialog.components.search.mask=测试文件名掩码\:
run.configuration.tests.dialog.components.file=Ruby 脚本
run.configuration.tests.dialog.components.class=类
run.configuration.tests.dialog.components.method=测试名称筛选器
run.configuration.tests.dialog.rb.allInFolder=文件夹中的所有测试(&A)
run.configuration.tests.dialog.rb.class=TestCase 和类(&C)
run.configuration.tests.dialog.rb.method=测试方法(&M)
run.configuration.tests.dialog.rb.file=测试脚本(&S)
run.configuration.tests.no.data=[none]
run.configuration.test.use.alternate.sdk.checkbox=使用替代 SDK(&D)
run.configuration.test.disable.smart.check=禁用测试类或测试方法名称检查(&I)
run.configuration.messages.edit.runner.options=编辑运行程序选项
run.configuration.messages.runner.options=运行程序选项
run.configuration.tests.use.alternative.sdk.checkbox=使用其他 SDK\:
run.configuration.tests.use.gem.from.sdk.checkbox=使用其他 SDK 和 ''{0}'' gem\:

run.configuration.failed.tests.name=重新运行失败的测试\: ''{0}''

rails.run.configuration.type.name = Rails
rails.run.configuration.type.description=Rails 运行配置
run.configuration.server.dialog.dummy.app=虚拟应用
run.configuration.server.dialog.port=端口
run.configuration.server.dialog.ip=IP 地址
run.configuration.server.dialog.server=服务器
run.configuration.server.dialog.run.browser.text=运行浏览器
run.configuration.server.dialog.auto.start.js.debugger.text=调试时自动启动 JavaScript 调试器
run.configuration.server.args=服务器参数
run.configuration.server.dialog.use.free.port=使用任何可用端口(&A)
run.configuration.server.panel.port=端口
run.configuration.server.dialog.environment=环境

run.configuration.messages.none=[none]
run.configuration.messages.not.specified=[未指定]
sdk.renderer.no.sdk.chosen=[未选择 SDK]

run.configuration.rake.description=Rake 任务运行配置
run.configuration.rake.task.name=任务名称
run.configuration.rake.task.arguments=参数
run.configuration.rake.task.arguments.editor=编辑任务参数
run.configuration.rake.task.attach.test.runner.ui=为框架附加测试运行程序 UI
run.configuration.rake.task.options.trace=开启 invoke/execute 跟踪，启用完整回溯 (--trace)
run.configuration.rake.task.options.dry.run=在不执行操作的情况下进行试运行 (--dry-run)
run.configuration.rake.task.options.prereqs=显示任务和依赖项，然后退出 (--prereqs)
run.configuration.rake.validation.error.no.gem=无法在 SDK ''{0}'' 中找到 Rake 可执行脚本
run.configuration.rake.validation.error.no.rakefile=无法在工作目录中找到 'Rakefile'、'rakefile'、'Rakefile.rb' 或 'rakefile.rb'
run.configuration.rake.validation.error.no.task=未指定任务
run.configuration.rake.line.marker.tooltip=运行 Rake 任务

# before run
run.configuration.before.run.rake.description.empty=运行 Rake 任务
run.configuration.before.run.rake.description=运行 Rake 任务 ''{0}''
run.configuration.before.run.rake.settings.dialog.title=Rake 任务
run.configuration.before.run.rake.error.dialog.title=无法启动 Rake 任务
run.configuration.before.run.rake.error.dialog.module.not.specified=未指定模块。
run.configuration.before.run.rake.execution.bg.title.main=准备 ''{0}'' 启动
run.configuration.before.run.rake.execution.bg.title.second=正在运行 ''{0}'' 任务…
run.configuration.before.run.rake.messages.tab.title=Rake 任务\: {0}

jruby.compiler.name=JRuby 编译器
run.configuration.before.run.jruby.compiler.description=运行 JRuby 编译器
run.configuration.before.run.jruby.compiler.execute.error.title=无法运行 JRuby 编译器
run.configuration.before.run.jruby.compiler.execute.error.title2=无法添加 JRuby 编译器任务
run.configuration.before.run.jruby.compiler.execute.error=请配置 JRuby Sdk，以便能够运行 jruby 编译器
run.configuration.before.run.jruby.compiler.execute.error2=JRuby 编译器仅支持 ruby 运行配置
run.configuration.before.run.jruby.compiler.execute.title=正在编译 ruby 文件…
run.configuration.before.run.jruby.compiler.execute.title2=JRuby 编译器
run.configuration.before.run.jruby.compiler.execute=JRuby 编译器设置
run.configuration.before.run.jruby.compiler.settings.target.path.title=请指定编译器目标路径
run.configuration.before.run.jruby.compiler.settings.clear.target.dir.text=启动前清除目标目录(&C)
run.configuration.before.run.jruby.compiler.setting.target.path.text=目标路径(&T)\:
run.configuration.before.run.jruby.compiler.setting.additional.params.text=附加命令行参数(&P)\:
run.configuration.before.run.jruby.compiler.setting.heap.size.text=编译器进程堆大小 (MB)(&S)\:
run.configuration.before.run.jruby.compiler.setting.edit.params.text=编辑命令行参数

# remote debug
run.configuration.remote.debug.remote.host.not.specified=未指定远程主机
run.configuration.remote.debug.remote.port.not.specified=未指定端口或端口不是数值
run.configuration.remote.debug.remote.root.not.specified=未指定远程根
run.configuration.remote.debug.local.root.not.specified=未指定本地根或本地根不正确
run.configuration.remote.debug.wrong.sdk.title=有限的调试信息
run.configuration.remote.debug.wrong.sdk.error=请<a href\="\#a">选择</a>相关的远程 Ruby SDK 以查看完整的调试信息
remote.debug.info=信息
remote.debug.server.command.text=服务器命令\:
remote.debug.server.hint=在服务器端使用以下命令启用远程调试
remote.debug.settings=设置
remote.debug.remote.host=远程主机
remote.debug.port=远程端口
remote.debug.dispatcher.port=本地端口
remote.debug.remote.root.folder=远程根文件夹
remote.debug.local.root.folder=本地根文件夹

########################################################################################################################
# Run configurations errors
########################################################################################################################
run.configuration.script.port.cant.find.free=无法找到可用端口
run.configuration.script.port.is.busy=端口 {0} 正忙
run.configuration.script.port.bad.format='port' 值不正确
run.configuration.script.ip.bad.format='ip adress' 值不正确
run.configuration.script.not.specified=未指定 Ruby 脚本
run.configuration.script.not.exists=Ruby 脚本不存在
run.configuration.script.is.not.file=Ruby 脚本似乎不是文件

# rails
run.configuration.rails.server.workdir.not.found=无法确定 Rails 应用程序主页。已为此应用程序禁用 Rails 支持。
run.configuration.rails.server.script.not.specified=未在项目中找到 Rails 服务器启动器
run.configuration.rails.server.script.not.exists=未在项目中找到 Rails 服务器启动器 ''{0}''
run.configuration.rails.server.script.instead.of.detected=找到 Rails {1}.x 启动器脚本，而不是 Rails {2}.x 启动器脚本。您需要 ''{0}'' 脚本以启动 Rails 服务器。请根据 Rails {2}.x 文档更新服务器启动器。
run.configuration.rails.server.script.is.not.file=Rails 服务器启动器 ''{0}'' 似乎不是文件

#test unit
run.configuration.no.module.specified=没有为配置指定 ruby 可运行模块
run.configuration.working.directory.not.exists=工作目录不存在
run.configuration.working.directory.error=工作目录不是目录
run.configuration.working.directory.not.specified=未指定工作目录
run.configuration.test.folder.not.exists=测试文件夹不存在
run.configuration.test.folder.not.specified=未指定测试文件夹
run.configuration.test.folder.not.dir=测试文件夹不是目录
run.configuration.test.no.mask=为测试名称定义掩码，例如\: {0}
run.configuration.test.script.not.exists=测试脚本不存在
run.configuration.test.script.not.specified=未指定测试脚本
run.configuration.test.class.not.exists=未找到测试类
run.configuration.test.method.name.not.specified=未指定测试名称
run.configuration.test.script.is.dir=测试脚本是目录
run.configuration.test.default.name={0} 中的所有测试\: {1}
minitest.run.configuration.prefix=Minitest\: {0}

#rspec
rspec.run.configuration.test.folder.not.exists=规范文件夹不存在
rspec.run.configuration.test.folder.not.specified=未指定规范文件夹
rspec.run.configuration.test.folder.not.dir=规范文件夹不是目录
rspec.run.configuration.test.no.mask=为规范名称定义掩码
rspec.run.configuration.test.script.not.specified=未指定规范测试脚本
rspec.run.configuration.test.script.not.exists=规范测试脚本不存在
rspec.run.configuration.test.custom.runner.not.exists=自定义 RSpec 运行程序脚本不存在
rspec.run.configuration.test.custom.runner.is.dir=自定义 RSpec 运行程序是目录
rspec.run.configuration.test.script.is.dir=规范脚本是目录
rspec.run.configuration.test.default.name={0} 中的所有规范\: {1}
rspec.run.configuration.test.run.script.default.name=运行规范 ''{0}''\: {1}
rspec.run.configuration.prefix=RSpec\: {0}
rspec.run.configuration.test.cannot.find.script=无法找到 {0} SDK 的 RSpec 运行程序脚本
rspec.run.configuration.test.no.rspec.rails.support=由于缺少 'rspec-rails' gem 或 RSpec Rails 插件，已禁用 RSpec 支持。请先安装并激活 gem

rspec.run.configuration.test.no.spec.scrip.error.run.generator=未找到 RSpec ''./{1}'' 和 ''./{2}'' 脚本。请安装 rspec-rails gem 或 rspec rails 插件，重新加载生成器并从 RubyMine 运行 ''{0}'' 生成器 (使用“工具 | 运行 Rails 生成器…”操作)

#cucumber
cucumber.run.configuration.test.no.rails.cucumber.scrip.error.run.generator=未找到 Cucumber ''./script/cucumber'' 脚本。要初始化 Cucumber 支持，请安装 cucumber-rails gem 或 cucumber rails 插件，重新加载生成器并从 RubyMine 运行 ''{0}'' 生成器 (使用“工具 | 运行 Rails 生成器…”操作)
cucumber.run.configuration.tags.filter.with.spaces=标记必须用逗号分隔且没有空格
cucumber.run.configuration.cucumber.rails.support.isnt.attached=由于缺少 'cucumber-rails' gem 或 Cucumber Rails 插件，已禁用 Cucumber 支持。请安装 gem 并将其添加到 Gemfile
cucumber.run.configuration.cucumber.gem.version.isnt.supported=图形测试运行程序不支持 Cucumber gem ''{0}''，请对 ''{2}'' SDK 使用 ''{1}'' 或更高版本
cucumber.run.configuration.test.folder.not.exists=功能文件夹不存在
cucumber.run.configuration.test.folder.not.specified=未指定功能文件夹
cucumber.run.configuration.test.folder.not.dir=功能文件夹不是目录
cucumber.run.configuration.test.script.not.exists=功能文件 ''{0}'' 不存在
cucumber.run.configuration.test.script.not.specified=未指定功能文件
cucumber.run.configuration.test.custom.runner.not.exists=自定义 Cucumber 运行程序脚本不存在
cucumber.run.configuration.tests.dialog.components.use.custom.runner=使用自定义 Cucumber 运行程序脚本\:
cucumber.run.configuration.tests.dialog.components.select.custom.runner=选择自定义 Cucumber 运行程序脚本
cucumber.run.configuration.test.script.is.dir=Cucumber 功能文件 ''{0}'' 是目录
cucumber.run.configuration.test.no.gem.in.sdk=未安装用于 {0} SDK 的 Cucumber Gem
cucumber.run.configuration.log.tab.name =Cucumber 日志

preload.use.server=使用预加载服务器(&U)\:
spring.pre.loader.name=Spring
spring.pre.loader.option=Spring 预加载器
spring.rake.pre.loader.option=Rake 任务 Spring 预加载器
spring.rails.pre.loader.option=Rails 生成器 Spring 预加载器
spring.debug.notification.title=Spring 调试
spring.debug.config.modification.request.title=修补 Spring 配置以调试应用程序
spring.debug.config.modification.request=您是要修补系统 (~/.spring.rb) 还是项目 (config/spring.rb) 配置文件?
spring.debug.config.modification.system=修补系统配置
spring.debug.config.modification.project=修补项目配置
spring.debug.config.modification.disable=对调试禁用 Spring
spring.debug.config.modification.title=Spring 配置已修改
spring.debug.config.modification=配置文件 ''{0}'' 已修改。如果您有要用来调试应用程序的活动 Spring 服务器，请重新启动这些服务器。
spring.debug.config.modification.write.access.title=Spring 配置写入访问错误
spring.debug.config.modification.write.access=对用户主目录没有写入访问权限。

spring.debug.config.deprecated.patch.title=更新过期的 Spring 补丁
spring.debug.config.deprecated.patch=Spring 配置文件包含调试所需的过期补丁。是否要更新该补丁?

# spork
spork.run.drb=DRb
spork.run.drb_server.run.conf.name={0}Spork DRb 服务器\: {1}
spork.run.settings.title=Spork DRb 启动选项
spork.run.settings.rspec=RSpec(&S)
spork.run.settings.cucumber=&Cucumber
spork.run.settings.testunit=TestUnit(&U)/Shoulda/Minitest
spork.run.settings.info=选择测试框架\:
spork.run.settings.button.ok.caption=运行
spork.run.settings.bootstrap=执行引导(&B)
spork.run.error.gem.not.installed=''{0}'' SDK 中未安装 Spork gem
spork.run.error.remote.sdk=远程 sdk 尚不支持 Spork 执行 (''{0}'')
spork.run.error.bin.script.not.found=未找到 ''{0}'' SDK 的 Spork 启动器脚本
spork.run.settings.needed.to.be.updated=Spork DRb 启动选项已过期。{0} 将自动更新这些选项。\n\
如果要保留以前的设置，请先重命名您的 ''{1}'' 运行配置。\n\
\n\
是否更新选项?
spork.run.configuration.settings.framework=测试框架\:
spork.server.run.configuration.type.name = Spork DRb
spork.server.run.configuration.type.description = Spork DRb 服务器运行配置
spork.server.run.configuration.script.not.specified=未指定 Spork 服务器脚本
spork.server.run.configuration.script.not.exists=Spork 服务器脚本不存在
spork.server.run.configuration.script.is.not.file=Spork 服务器脚本似乎不是文件
spork.server.run.configuration.messages.select.ruby.script.path=选择 Spork 服务器脚本
spork.server.run.configuration.messages.edit.script.args=编辑 Spork 服务器参数
spork.server.run.configuration.messages.script.args=其他参数
spork.server.run.configuration.messages.script.path=Spork 脚本\:

# Zeus
zeus.server.name=Zeus
zeus.server.action.start = 启动 Zeus 服务器\: {0}
zeus.server.use = 使用 Zeus 服务器(&Z)
zeus.server.run.configuration.type.name = Zeus 服务器
zeus.server.run.configuration.type.description = Zeus 服务器运行配置
zeus.server.run.configuration.command=命令名称
zeus.server.run.configuration.arguments=命令参数
zeus.server.run.configuration.edit.arguments=编辑命令参数
zeus.server.run.configuration.editor.command.text=命令
zeus.server.run.configuration.editor.arguments.text=参数

# rails console
rails.console = Rails 控制台
rails.console.select.environment=选择 Rails 环境
rails.console.environment=环境 (&E)：
rails.console.actions.reload=重新加载源
rails.console.actions.reload.description=在 Rails 控制台中动态重新加载 Ruby 脚本

# irb
irb.console.actions.load.text.title=加载到 Irb 控制台
irb.console.actions.load.text.error.running.not.found=未找到正在运行的 Irb 控制台。
irb.console.actions.load.text.error.irb.isnt.running=Irb 控制台 ''{0}'' 未运行。

irb.console = IRB 控制台\: {0}
irb.run.configuration.type.name = IRB 控制台
irb.run.configuration.type.description = IRB 控制台运行配置
irb.run.configuration.messages.select.ruby.script.path=选择 IRB 脚本
irb.run.configuration.messages.edit.script.args=IRB 参数
irb.run.configuration.messages.script.args=其他参数
irb.run.configuration.messages.script.path=IRB 脚本\:
irb.run.configuration.script.not.specified=未指定 Irb 脚本
irb.run.configuration.script.not.exists=Irb 脚本不存在
irb.run.configuration.script.is.not.file=Irb 脚本似乎不是文件

# Nailgun server
nailgun.server=Nailgun
nailgun.server.name=Nailgun 服务器
nailgun.server.settings=Nailgun 服务器设置
nailgun.server.in.debug=调试不能与 Nailgun 服务器配合使用。已从命令行中移除相应参数。
nailgun.server.rc.settings.text=运行 Nailgun 服务器的新实例或使用已启动的实例
nailgun.server.port.label=服务器端口(&P)\:
nailgun.server.classpath.label=&类路径\:
nailgun.server.fail=无法启动 Nailgun 服务器
nailgun.server.fail.port=在其他端口上找到 Nailgun 服务器。\n\
命令行参数“--nailgun-port”已更新。
nailgun.server.fail.gemset=发现使用不同 gemset 的 Nailgun 服务器。\n\
已从命令行中移除“--ng”参数。

########################################################################################################################
# Run Configuration extensions:
########################################################################################################################
# Bundler
run.configuration.extension.bundler.editorTitle=Bundler
run.configuration.extension.bundler.checkbox.enable.bundle.exec=在包的上下文中运行脚本 (bundle exec)(&R)
run.configuration.extension.bundler.label.bundle.exec.required.warning=启用 bundle exec 以便与图形测试运行程序兼容

########################################################################################################################
# Plugins
########################################################################################################################
rails.plugins.install.error.title=安装错误
rails.plugins.install.process.title={0}\: 插件安装

#########################################################################################################################
# Rake action
########################################################################################################################
rake.action.group.name=Rake 任务
rake.action.group.loading.title=正在加载 Rake 任务…
rake.action.execute.task.dialog.title=执行 ''{0}''
rake.action.execute.task.dialog.title.ex=为 ''{1}'' 执行 ''{0}'' 
rake.action.execute.task.dialog.task.desc.label=说明\:
rake.action.execute.task.dialog.task.desc.not.given=<无说明>
rake.action.execute.task.dialog.task.args.label=参数(&A)\:
rake.action.execute.task.dialog.rails.env.label=环境 (&E)：
rake.action.execute.task.version.dialog.version.label=&版本\:
rake.action.execute.task.version.dialog.trace.cb=完整回溯(&T)
rake.action.execute.task.version.dialog.step.label=步骤(&S)\:
rake.action.execute.template.location=模板位置(&T)
rake.popup.promt.text=输入任务名称或名称的一部分\:
rake.popup.checkbox.show.undocumented=包含未记录项(&U)
rake.popup.find.not.in.documented=未找到记录的任务
rake.popup.find.not.found=找不到任务
rake.popup.execute.task.error.title=无法执行任务
rake.popup.execute.task.error.sdk.not.set=未设置 Ruby SDK。请检查项目设置。
rake.popup.execute.task.error.unknown=无法在当前项目上下文中启动 Rake 操作。
rake.popup.reload.action.text=[重新加载 Rake 任务列表]
rake.popup.loading.text=正在加载 Rake 任务…

#########################################################################################################################
# Capistrano
########################################################################################################################
capistrano.action.group.name=Capistrano 任务
run.configuration.capistrano.task.name=任务名称
run.configuration.capistrano.task.arguments=任务参数
run.configuration.capistrano.task.description=Capistrano 任务配置
run.configuration.capistrano.task.arguments.editor=编辑任务参数
run.configuration.capistrano.stage.default=默认阶段
run.configuration.capistrano.error.taskname=请指定任务名称
run.configuration.capistrano.error.capistrano.gem=未在 SDK 中找到 Capistrano gem
capistrano.configuration.stage=阶段
capistrano.popup.prompt.text=输入任务名称或名称的一部分\:
capistrano.popup.checkbox.name=包含未记录项
capistrano.popup.execute.task.error.sdk.not.set=未设置 Ruby SDK。请检查项目设置。
capistrano.popup.execute.task.error.title=无法执行任务
capistrano.popup.execute.task.error.unknown=发生未知错误
capistrano.action.execute.task.dialog.title=执行 ''{0}''
capistrano.action.execute.task.dialog.title.ex=为 ''{1}'' 执行 ''{0}''
capistrano.getting.tasks.progress.title=获取 Capistrano 任务
capistrano.run.configuration.editor.stages.field.text=阶段
capistrano.staged.action.panel.stage.field.text=阶段\:

#Rack
run.configuration.rack.name=Rack
run.configuration.rack.description=Rack 应用程序配置
run.configuration.rack.select.rackup.path=设置脚本路径
run.configuration.rack.config.path=Rack 配置文件
run.configuration.rack.rackup.error=未在 SDK 中找到 Rackup 脚本
run.configuration.rack.config.error=指定 rack 配置文件
run.configuration.rack.config.run.browser.text=运行浏览器
run.configuration.rack.config.auto.start.js.debugger.text=调试时自动启动 JavaScript 调试器

#########################################################################################################################
# Generate action
########################################################################################################################
new.generate.common.action.prompt.title=添加新 {0}
new.generate.common.action.prompt.title.ex=在 ''{1}'' 中添加新 {0}
new.generate.common.error.title=生成错误
new.generate.common.action.title=生成新 {0}
new.generate.common.generating.title=生成脚本
new.generate.common.error.script.arguments.should.be.specified=必须指定脚本参数\!
new.generate.common.error.script.argument.is.not.valid=不是有效参数。
new.generate.common.error.no.rails=未在 SDK 中找到 Rails 脚本。如果不安装 Rails，则无法调用 Rails 生成器。在模块设置中选择其他 SDK 或安装 Rails 框架。

new.generate.controller.actions=动作
new.generate.controller.actions.text.field.info=输入操作并用空格分隔

new.generate.entity.error.name.not.valid={1} 名称必须带下划线，但实际是“{0}”
new.generate.entity.error.name.asymmetrical.coversion={0} 名称应相对于“驼峰命名法 <->下划线转换”对称\!

dialog.generate.common.label.arguments.text=生成器参数(&A)\:
dialog.generate.common.checkBox.pretend.text=假定(&P)
dialog.generate.common.checkBox.pretend.tooltip=运行但不进行任何更改。
dialog.generate.common.checkBox.force.text=强制(&F)
dialog.generate.common.checkBox.force.tooltip=覆盖已存在的文件。
dialog.generate.common.checkBox.skip.text=跳过 (&S)
dialog.generate.common.checkBox.skip.tooltip=跳过已存在的文件。
dialog.generate.common.checkBox.backtrace.text=回溯(&B)
dialog.generate.common.checkBox.backtrace.tooltip=调试\: 出错时显示回溯。
dialog.generate.common.checkBox.svn.text=Svn(&V)
dialog.generate.common.checkBox.svn.tooltip=使用 Subversion 修改文件。(注意\: svn 必须位于路径中)。
dialog.generate.common.checkBox.git.text=&Git
dialog.generate.common.checkBox.git.tooltip=使用 Git 修改文件。(注意\: git 必须位于路径中)。
dialog.generate.common.help.title=''{0}'' 的帮助
progress.dialog.generate.common.help.wait.title=正在加载帮助…
progress.dialog.generate.common.help.cannot.fetch.help.info=无法获取帮助信息。
progress.dialog.generate.common.help.cannot.fetch.generators.list=无法获取生成器列表。
progress.dialog.generate.common.help.no.sdk.set=Ruby SDK 未设置或无效。{0}
progress.dialog.generate.common.help.no.sdk.set.rubymine=请检查“{0} | Ruby SDK 和 Gems”。
progress.dialog.generate.common.help.no.sdk.set.ruby.plugin=请在模块设置中设置 SDK。

popup.generate.action.text=操作
popup.generate.action.description=为控制器生成操作
popup.generate.action.command=为控制器生成操作
popup.generate.action.prompt.title=添加新操作
popup.generate.action.error.title=生成操作错误

new.generate.rspec.controller.text=RSpec 控制器
new.generate.rspec.model.text=RSpec 模型
new.generate.rspec.name=RSpec

new.generate.cucumber.name=Cucumber
new.generate.feature.name=特性
new.generate.feature.description=为新功能生成框架
new.generate.feature.action.prompt.title=添加新功能
new.generate.feature.action.prompt.title.ex=在 ''{0}'' 中添加新功能
new.generate.feature.error.title=生成功能错误
dialog.generate.feature.label.arguments.text=生成器参数\: (ModelName [field1\:type1 field2\:type2])

new.generate.initialize.error=设置 {0} 支持错误
new.generate.initialize.action.text=设置 {0} 支持
new.generate.initialize.action.decription=创建必要的内容以与 Rails 项目中的 {0} 支持一起使用
new.generate.initialize.action.dialog.title=设置 {0} 支持
new.generate.initialize.action.dialog.title.ex=为 ''{1}'' 设置 {0} 支持

new.generate.controller.text=控制器
new.generate.controller.description=为 Rails 应用程序生成控制器
new.generate.controller.action.prompt.title=添加新控制器
new.generate.controller.action.prompt.title.ex=在 ''{0}'' 中添加新控制器
new.generate.controller.error.title=生成控制器错误
dialog.generate.action.label.name.text=操作名称(&N)\:
dialog.generate.action.label.location.text=位置\:
dialog.generate.controller.button.add.text=添加(&A)
dialog.generate.controller.button.remove.text=移除(R)
dialog.generate.controller.label.actions.names.text=操作名称(&N)\:
dialog.generate.controller.label.dir.text=目录(&D)\: (例如 'admin')
dialog.generate.controller.label.addition.options.text=其他选项：
dialog.generate.controller.label.location.text=位置\:
dialog.generate.controller.label.name.text=&{0} 名称\: (例如 ''CreditCard'')
dialog.generate.controller.actions.error.title=添加新操作错误

new.generate.channel.text=通道
new.generate.channel.description=为 Rails 应用程序生成通道
new.generate.channel.action.prompt.title=添加新通道
new.generate.channel.action.prompt.title.ex=在 ''{0}'' 中添加新通道
new.generate.channel.error.title=生成通道错误

new.generate.migration.text=迁移
new.generate.migration.description=为迁移生成器创建 rails 文件
new.generate.migration.action.prompt.title=添加新迁移
new.generate.migration.action.prompt.title.ex=在 ''{0}'' 中添加新迁移
new.generate.migration.error.title=生成迁移错误
dialog.generate.migration.label.arguments.text=生成器参数\: (MigrationName [field1\:type1 field2\:type2] [options])

new.generate.model.text=模型
new.generate.model.description=为 Rails 应用程序生成模型
new.generate.model.action.prompt.title=添加新模型
new.generate.model.action.prompt.title.ex=在 ''{0}'' 中添加新模型
new.generate.model.error.title=生成模型错误
dialog.generate.model.label.options=选项\:
dialog.generate.model.autocompletion.ad=在 '\:' 后使用以进行数据库字段类型自动补全
dialog.generate.model.cb.skip-timestamps=不向此模型的迁移文件添加时间戳(&T)
dialog.generate.model.cb.skip-migration=不为此模型生成迁移文件(&M)
dialog.generate.model.cb.skip-fixture=不为此模型生成 fixture 文件(&F)
dialog.generate.scaffold.label.arguments.text=生成器参数\: (ModelName [controller_actions and field\:type])
dialog.generate.scaffold.label.arguments.text.rails3=生成器参数\: (ModelName [field\:type])

new.generate.scaffold.text=基架
new.generate.scaffold.description=为整个资源生成基架，从模型到迁移再到控制器和视图，以及完整的测试套件
new.generate.scaffold.action.prompt.title=基架
new.generate.scaffold.action.prompt.title.ex=为 ''{0}'' 生成基架
new.generate.scaffold.error.title=生成基架错误
dialog.generate.scaffold.cb.force-plural=强制生成复数 ModelName(&U)
dialog.generate.scaffold.cb.skip-model= 不生成模型或迁移文件(&O)
dialog.generate.scaffold.cb.skip-controller=不生成控制器、帮助程序或视图(&C)
dialog.generate.scaffold.cb.invert=生成除提及操作之外的所有控制器操作(&E)
dialog.generate.scaffold.cb.haml= 生成 HAML 视图而不是 ERB(&H)
dialog.generate.scaffold.combo.testframework= 为测试文件选择测试框架
dialog.generate.scaffold.combo.default=<默认>
dialog.generate.scaffold.options.title=&选项
dialog.generate.model.label.arguments.text=生成器参数\: (ModelName [field1\:type1 field2\:type2])

# Cucumber support
dialog.generate.cucumber.label.testframework.text=为 Cucumber 选择测试框架\:
dialog.generate.cucumber.tframework.spec=RSpec(&R)
dialog.generate.cucumber.tframework.testunit=Test\:\:Unit(&T)
dialog.generate.cucumber.lable.options.backend.text=Webapp 交互后端\:
dialog.generate.cucumber.sframework.capybara=Capybara(&C)
dialog.generate.cucumber.sframework.webrat=Webrat(&W)
dialog.generate.cucumber.spork.text=与 Spork DRb 一起使用(&D)

# Generators popup
rails.generators.popup.promt.text=输入生成器名称或名称的一部分\:
rails.generators.popup.checkbox.show.hidden=包含隐藏项(&H)
rails.generators.popup.find.not.in.documented=未找到生成器
rails.generators.popup.find.not.found=未找到生成器
rails.generators.popup.execute.task.error.title=无法启动生成器
rails.generators.popup.execute.task.error.sdk.not.set=未设置 Ruby SDK。请检查项目设置。
rails.generators.popup.execute.task.error.unknown=无法在当前项目上下文中启动生成器操作。
rails.generators.popup.reload.action.text=[重新加载生成器列表]
rails.generators.popup.loading.text=正在加载生成器…

########################################################################################################################
# Additional registered shortcuts
########################################################################################################################
rails.actions.execution.run.rails.script.title=运行 Rails 脚本
rails.actions.execution.run.rails.script.dialog.button.ok.caption=运行
rails.actions.execution.run.rails.script.dialog.description.caption=您可以从“[{0}]/script”目录运行 Rails 脚本
rails.actions.execution.run.rails.script.dialog.component.script.args.caption=参数
rails.actions.execution.run.rails.script.dialog.component.script.args.caption.edit=编辑参数
rails.actions.execution.run.rails.script.dialog.component.script.path.caption=脚本
rails.actions.execution.run.rails.script.dialog.component.script.path.caption.select=选择脚本
rails.actions.execution.run.rails.script.error.no.scripts.folder=无法执行 Rails 脚本。未找到“{0}/script”文件夹\!
rails.actions.execution.run.rails.script.error.script.want.found=无法执行 Rails 脚本。未找到脚本“{0}”\!

########################################################################################################################
# Additional registered shortcuts
########################################################################################################################
keymap.extension.rake.group.name=Rake
action.registered.shortcut.execute.disabled.title=不正确的操作
action.registered.shortcut.execute.disabled.generators.msg=无法从模块 ''{1}'' 访问生成器 ''{0}''
action.registered.shortcut.execute.invalid.raketask.msg=没有为模块 ''{1}'' 定义 Rake 任务 ''{0}''\n\
\n\
如果您确定已为模块定义此任务\n\
请执行“工具 | 重新加载 Rake 任务”\n\
并重试。

action.consolerunner.edit.cmdline.description=编辑命令行参数
action.consolerunner.edit.cmdline.text=编辑命令行参数
action.consolerunner.edit.cmdline.dialog.text=命令行参数：
action.consolerunner.edit.cmdline.dialog.title=编辑命令行参数

########################################################################################################################
# Color settings page
########################################################################################################################
color.settings.rhtml.name=ERB
color.settings.rhtml.scriptlet.start=Scriptlet 开始
color.settings.rhtml.scriptlet.end=Scriptlet 结束
color.settings.rhtml.expr.start=表达式开始
color.settings.rhtml.expr.end=表达式结束
color.settings.rhtml.scripting.bkg=Ruby 注入后台
color.settings.rhtml.omit.new.line=省略新行修饰符
color.settings.rhtml.comment=注释

color.settings.ruby.name=Ruby
color.settings.ruby.keyword=关键字
color.settings.ruby.comment=注释
color.settings.ruby.heredoc_id=Heredoc Id
color.settings.ruby.number=数字
color.settings.ruby.string=字符串
color.settings.ruby.interpolated.string=内插字符串
color.settings.ruby.escape_sequence=转义序列
color.settings.ruby.invalid_escape_sequence=无效的转义序列
color.settings.ruby.operation=运算符号
color.settings.ruby.brackets=方括号
color.settings.ruby.braces=大括号
color.settings.ruby.parentheses=括号
color.settings.ruby.expression_subtitution_marks=表达式替换标记
color.settings.ruby.bad_character=坏字符
color.settings.ruby.comma=逗号
color.settings.ruby.dot=点
color.settings.ruby.colon=冒号
color.settings.ruby.semicolon=分号
color.settings.ruby.symbol=符号
color.settings.ruby.hash.key=哈希键
color.settings.ruby.hash_assoc=哈希关联
color.settings.ruby.line_continuation=续行
color.settings.ruby.regexp=正则表达式的边界
color.settings.ruby.words=单词
color.settings.ruby.heredoc_content=Heredoc 内容
color.settings.ruby.gvar=全局变量
color.settings.ruby.cvar=类变量
color.settings.ruby.ivar=实例变量
color.settings.ruby.identifier=标识符
color.settings.ruby.method.name=方法名称
color.settings.ruby.local.variable=局部变量
color.settings.ruby.parameter=参数
color.settings.ruby.constant=常量
color.settings.ruby.constant.declaration=常量声明
color.settings.ruby.nth_ref=Regexp 组引用
color.settings.ruby.ruby.specific.call=Ruby 特殊调用
color.settings.ruby.ruby.paramdef.call=Rails 特殊调用

#RDoc
color.settings.rdoc.name=RDoc
color.settings.rdoc.directive=指令
color.settings.rdoc.email=电子邮件
color.settings.rdoc.url=Url
color.settings.rdoc.heading=标题
color.settings.rdoc.identifier=标识符
color.settings.rdoc.tag=标签



color.settings.ruby.inspection.inspection=检查\: {0}

indent.annotator.wrong.indent.length.space=使用了 {0} 个空格进行缩进。必须使用 {1} 个空格缩进
indent.annotator.wrong.indent.length.tab=使用了 {0} 个制表符进行缩进。必须使用 {1} 个制表符缩进
indent.annotator.wrong.indent.space=缩进不一致\: 使用了 {0} 个空格进行缩进，但文档其余部分使用 {1} 个制表符缩进
indent.annotator.wrong.indent.tab=缩进不一致\: 使用了 {0} 个制表符进行缩进，但文档其余部分使用 {1} 个空格缩进

module.common.rubydoc=RDoc

module.rails.change.directory=更改目录

button.configure=配置...
sdk.select.prompt.title=选择 SDK
sdk.error.prompt.message.sdk.not.valid= 您选择的 SDK 与 Ruby 或 Rails 应用程序不兼容。需要 Ruby 或 JRuby SDK。
sdk.setup.progress.title=正在配置 ''{0}'' SDK…
sdk.setup.progress.setup.paths=正在初始化加载路径和 gem 路径…

########################################################################################################################
# Module rails
########################################################################################################################
module.rails.prompt.label.project.jdk=项目SDK\:
module.rails.select.jdk=指定 Ruby SDK
module.rails.generateapp.rails.label=Rails 版本(&V)\:
module.rails.generateapp.progress.title=正在为 $IDE_DEPENDENT_MODULE$ ''{0}'' 生成 Rails 应用程序…
module.rails.generateapp.rails.new.overwrite.title=创建新的 Rails 应用程序
module.rails.generateapp.rails.new.overwrite.message=''{0}'' 中已存在 Rails 应用程序。\n\
是否覆盖?
module.rails.generateapp.template=Rails 模板(&T)\:
module.rails.generateapp.template.not.supported=所选 Rails 版本不支持
module.rails.generateapp.template.select=选择 Rails 模板
module.rails.generateapp.template.description=模板允许自定义新的 Rails 应用程序创建
module.rails.generateapp.javascript.select=JavaScript 库(&J)\:
module.rails.generateapp.working.dir.text=工作目录\:
module.settings.title=加载设置\: ''{0}''
module.rails.create.rake.tasks.title=正在生成 Rake 任务层次结构…
module.rails.create.rake.tasks.for=生成 ''{0}'' 的 Rake 任务层次结构
module.rails.create.rake.generators.title=正在搜索可用的生成器…
module.rails.create.rake.generators.for=搜索 ''{0}'' 的可用生成器
module.rails.create.rake.generators.spring.disabling=在禁用 Spring 的条件下加载
module.rails.create.rake.generators.spring.disabling.content=由于 Spring 挂起，无法加载生成器列表。
module.rails.create.rake.generators.spring.disabling.title=Spring 挂起
module.settings.add.directory.title=添加目录
module.settings.directory.is.already.included=已包含此目录
module.settings.refreshing.sdk=刷新 Sdk
module.rails.create.app.presentable.name=Rails API

#########################################################################################################################
# Parsing
########################################################################################################################
parsing.error.expression=表达式
parsing.symbol.content=符号内容
parsing.alias.object=别名对象
parsing.operation=运算
parsing.method.name=方法名称
parsing.module.name=模块名称
parsing.class.name=类名
parsing.singleton=单例
parsing.identifier.or.operation=标识符或运算
parsing.block.variables=块变量
parsing.local.variables=局部变量
parsing.do.block=do 块调用
parsing.end.of.arg.list=参数列表末尾
parsing.block.arg.or.end=块参数或参数列表末尾
parsing.pattern=模式
parsing.error.rest.after.named=不允许在命名参数后使用 rest 参数
parsing.error.rest.one=仅允许一个 rest 参数
parsing.error.predefined.after.named=不允许在命名参数后面使用预定义参数
parsing.error.predefined.not.applicable=预定义的参数不适用于模式
parsing.error.hash.variables.in.array=哈希变量不适用于数组析构匹配器
parsing.error.array.variables.in.hash=数组变量不适用于哈希析构匹配器
parsing.rhtml.injection.in.ruby.title=%> 或 <% 或 <%\=
parsing.haml.end=Haml 中存在不必要的“- end”，请改用缩进
parsing.slim.end=Slim 中存在不必要的“- end”，请改用缩进
parsing.error.too.complex=表达式过于复杂，无法解析

os.not.supported=OS 不受支持\!
module.rails.create.run.configurations.title=创建 Rails 运行配置
building.index.message=构建 ruby 索引
select.in.rails=Rails 项目视图

########################################################################################################################
# Rails project view
########################################################################################################################
rails.project.module.view.presentable=Rails
rails.project.module.view.nodes.appication.presentable=应用程序
rails.project.module.view.nodes.components.presentable=组件
rails.project.module.view.nodes.controllers.presentable=控制器
rails.project.module.view.nodes.helpers.presentable=帮助程序
rails.project.module.view.nodes.libs.presentable=库
rails.project.module.view.nodes.model.presentable=模型
rails.project.module.view.nodes.lib.presentable=库
rails.project.module.view.nodes.public.presentable=public
rails.project.module.view.nodes.unclassified.mark=未分类
rails.project.module.view.nodes.helpers.partial.presentable=帮助程序
rails.project.module.view.nodes.views.partial.presentable=视图
rails.project.module.view.nodes.views.layouts.presentable=布局
rails.project.module.view.nodes.minitest.presentable=测试
rails.project.module.view.nodes.minitest.shoulda.presentable=Minitest/Shoulda
rails.project.module.view.nodes.config.presentable=配置
rails.project.module.view.nodes.rspec.presentable=RSpec
rails.project.module.view.nodes.partials.presentable=部分
rails.project.module.view.nodes.shared.partials.presentable=共享部分
rails.project.module.view.nodes.migrations.presentable=迁移
#########################################################################################################################
# RSpec Structure View
########################################################################################################################
ruby.structureview.show.variables=显示变量
#########################################################################################################################
# RSpec Structure View
########################################################################################################################
rspec.structure.view.example.undocumented=<无文档>
rspec.structure.view.actions.list.view.title=列表视图
rspec.structure.view.actions.list.view.description=显示规范示例列表
rspec.structure.view.filters.before.after.calls.title=隐藏调用前/调用后
rspec.structure.view.filters.before.after.calls.description=在结构视图中隐藏调用前/调用后
rspec.structure.view.filters.examples.disabled.title=隐藏禁用的示例
rspec.structure.view.filters.examples.disabled.description=在结构视图中显示禁用的示例
rspec.structure.view.filters.examples.pending.title=隐藏挂起示例
rspec.structure.view.filters.examples.pending.description=在结构视图中显示挂起示例
rspec.structure.view.filters.examples.active.title=隐藏活动示例
rspec.structure.view.filters.examples.active.description=在结构视图中隐藏活动 (未禁用和未挂起) 示例

#########################################################################################################################
# File types
########################################################################################################################
filetype.description.rb=Ruby
filetype.description.rjs=RJS
filetype.description.rhtml=RHTML
filetype.description.rxml=RXML
filetype.description.rdoc=RDoc

########################################################################################################################
# Intentions
########################################################################################################################
ruby.intentions=Ruby
ruby.intentions.relative.path.to.absolute=转换为绝对路径
ruby.intentions.prepend.cur.dir.to.path=在前面追加当前目录

ruby.intentions.string.to.symbol=转换为符号
ruby.intentions.erb.convert.name=转换为 ERB 注释
ruby.intentions.symbol.to.string=转换为字符串
ruby.intentions.qualified.name.to.import=导入 Java 类
ruby.intentions.string.import.to.dot.reference=转换为点引用
ruby.intentions.string.import.to.camel.reference=转换为驼峰命名法点引用
ruby.intentions.java.to.ruby.call.style=转换为 ruby 调用样式
ruby.intentions.statement.to.modifier=替换为 ''{0}'' 修饰符
ruby.intentions.statement.to.modifier.familyName=替换为条件修饰符
ruby.intentions.modifier.to.statement=替换为 ''{0}'' 语句
ruby.intentions.modifier.to.statement.familyName=替换为条件语句
ruby.intentions.string.sum.to.substitution=替换为表达式替代
ruby.intentions.braces.to.do=转换为 'do' 块
ruby.intentions.do.to.braces=转换为 ''{ }'' 块
ruby.intentions.extract.block.to.method=将块提取到方法
ruby.intentions.rocket.to.newhashstyle=将 '\=>' 转换为 '\:'
ruby.intentions.all.rocket.to.newhashstyle=将所有 '\=>' 转换为 '\:'
ruby.intentions.all.newhashstyle.to.rocket=将所有 '\:' 转换为 '\=>'
ruby.intentions.newhashstyle.to.rocket=将 '\:' 转换为 '\=>'
ruby.intentions.if.to.ternary=将 'if else' 替换为 '?\:'
ruby.intentions.ternary.to.if=将 '?\:' 替换为 'if else'
ruby.intentions.i18n=I18nize 硬编码字符串
ruby.intentions.i18n.change.preview.locale=更改预览区域设置
ruby.intentions.i18n.change.preview.locale.rails.default=Rails 默认值
ruby.intentions.i18n.rails.config.adapter.title=查询 Rails 默认区域设置
ruby.intentions.heredoc.to.squiggly.name=将 heredoc 转换为 '<<~'
ruby.intentions.flip=Flip 'equals'
ruby.intentions.flip.changes.semantics=翻转 ''{0}'' (更改语义)
ruby.intentions.flip.matching.operation=将 ''{0}'' 翻转为 ''{1}''
ruby.intentions.replace.with=用''{1}''替换''{0}''
ruby.intentions.demorgans=DeMorgan Law
ruby.intentions.flip.expression=翻转表达式
ruby.intention.assign.field.from.parameter=分配参数场


########################################################################################################################
# Titles
########################################################################################################################
progress.indicator.title.directories.scanning=正在扫描目录。
progress.indicator.title.cache.datafile.loading=正在加载缓存…
progress.indicator.title.cache.files.parsing=正在解析文件。请稍候…
progress.indicator.title.cache.loading=正在加载 ''{0}'' 的缓存…
progress.indicator.title.please.wait=请稍候…
progress.backgnd.indicator.title.please.wait={0}。请稍候…
progress.indicator.title.running.please.wait=正在运行。请稍候…

########################################################################################################################
# Settings
########################################################################################################################
settings.raketasks.externalizer.info=此文件由 Ruby 插件自动生成。\n\
您可以\:\n\
1. 移除 Rake 任务\n\
2. 添加现有的 Rake 任务\n\
要自动添加现有 Rake 任务，请删除此文件并重新加载项目。\n\

settings.raketasks.cant.save.message=无法保存 Rake 任务设置。无法覆盖 ''{0}'' 文件。

settings.generators.externalizer.info=此文件由 Ruby 插件自动生成。\n\
您可以\:\n\
1. 重新排序生成器\n\
2. 移除生成器\n\
3. 添加已安装的生成器\n\
要自动添加新安装的生成器，请删除此文件并重新加载项目。\n\

settings.generators.cant.save.message=无法保存生成器设置。无法覆盖 ''{0}'' 文件。

settings.scripts.title=扩展
settings.scripts.information=信息
settings.scripts.enabled=启用的脚本
settings.extensions.scripts.restart.required=是否重启 {0} 以在扩展中应用更改?
settings.extensions.scripts.changed.title=扩展已更改
settings.extensions.scripts.changed.button.restart=重启
settings.extensions.scripts.changed.button.postpone=&延迟

########################################################################################################################
#Console
########################################################################################################################
progress.title.console.runner.modal.dialog.running=正在运行\: ''{0}''
debugger.console.history.traverse.hint=使用 {0} 和 {1} 滚动浏览已执行的语句
debugger.console.no.stack.frame.available=无法执行语句\: 当前堆栈框架不可用。请暂停进程以使用控制台解释器。
debugger.console.layout.tab.name=交互式控制台

########################################################################################################################
# Code Insight
#########################################################################################################################
codeInsight.rails.action_to_view.tooltip=''{0}'' 操作的视图
codeInsight.rails.mailer_to_view.tooltip=''{0}'' mailer 方法的模板
codeInsight.rails.controller_to_view.tooltip=''{0}'' 控制器的视图和部分
codeInsight.rails.view_to_action.tooltip=''{0}'' 视图的操作
codeInsight.rails.view_to_mailer.tooltip=''{0}'' 模板的 mailer 方法
codeInsight.rails.view_to_controller.tooltip=''{0}'' 视图的控制器
codeInsight.rails.layout_to_controller.tooltip=''{0}'' 布局的控制器

codeInsight.rails.switch.to.view.title=转到视图
codeInsight.rails.switch.to.view.create.prompt=未找到视图。输入要创建的视图文件的名称\:
codeInsight.rails.switch.to.view.cant.navigate=无法导航到相应的视图

codeInsight.rails.switch.to.model.title=转到模型
codeInsight.rails.switch.to.model.cant.navigate=无法导航到相应的模型

codeInsight.rails.switch.to.controller.title=转到控制器
codeInsight.rails.switch.to.controller.cant.navigate=无法导航到相应的控制器

codeInsight.rails.switch.to.helper.title=转到帮助程序
codeInsight.rails.switch.to.helper.cant.navigate=无法导航到相应的帮助程序

codeInsight.rails.navigation.title.action.view=选择视图

codeInsight.rails.create.view.file=创建视图文件 ''{0}''

codeInsight.rails.sprockets.reference.unresolved.message={0} {1} 或 {2} ''{3}''

tests.go.to.test.generate.tests.popup.title=生成测试

tests.go.to.test.generate.tests.gem.not.found=未找到 Gem ''{0}''。<a href\="bundle">捆绑</a>   <a href\="dismiss">忽略</a>
tests.go.to.test.generate.tests.gem.not.found.title=缺少 gem

generator.notification.after.title=生成已完成
generator.notification.after.content=''{0}''\: 生成已成功完成。<a href\="got_it">知道了\!</a>  <a href\="rollback">回滚</a>

generator.notification.not.found.title=未找到生成器
generator.notification.not.found.content=未找到生成器 ''{0}''。请检查可用生成器。<a href\="rollback">回滚</a>

########################################################################################################################
# Annotations
#########################################################################################################################
annotation.error.cannot.make.alias.for.nth.variable=无法为数字变量创建别名
annotation.error.begin.in.method=方法中存在 BEGIN
annotation.error.class.module.name.must.be.constant=类/模块名称必须为常量
annotation.error.class.in.method=方法体中存在类定义
annotation.error.module.in.method=方法体中存在模块定义
annotation.error.formal.arg.cannot.be.constant=形式参数不能是常量
annotation.error.formal.arg.cannot.be.inst.var=形式参数不能是实例变量
annotation.error.formal.arg.cannot.be.global.var=形式参数不能是全局变量
annotation.error.formal.arg.cannot.be.class.var=形式参数不能是类变量
annotation.error.duplicated.arg.name=参数名称重复
annotation.error.block.given.to.yield=不能将块分给 yield
annotation.error.else.without.rescue.is.useless=不带 rescue 的 else 没有意义
annotation.error.unsupported.i=SDK 不支持 %i
annotation.error.unsupported.i_u=SDK 不支持 %I
annotation.error.unexpected.named.arg=意外的 '\:'，应为 ')'
annotation.error.unsupported.named.arg=仅 Ruby 2.0 支持命名参数
annotation.error.unsupported.block.local.vars=SDK 不支持块局部变量
annotation.error.unsupported.numeric.modifiers=SDK 不支持数字文字的修饰符
annotation.error.unsupported.hash.to.arguments=SDK 不支持哈希到参数的转换
annotation.error.unsupported.safe.navigation=对于安全导航运算符，至少需要 Ruby 2.3
annotation.error.unsupported.squiggly.heredoc=对于“Squiggly”heredoc，至少需要 Ruby 2.3
annotation.error.unsupported.rescue.in.do.block=对于 do 块中的 rescue/else/ensure，至少需要 Ruby 2.5
annotation.error.unsupported.endless.range=对于无穷范围，至少需要 Ruby 2.6
annotation.error.unsupported.pattern.matching=对于模式匹配，至少需要 Ruby 2.7
annotation.error.class.module.name.must.be.constant.unicode=类/模块名称必须为常量。对于以非 ASCII 大写字母开头的常量，至少需要 Ruby 2.6
annotation.error.pattern.matching.symbol.literal.with.interpolation.is.not.allowed=不允许带插值的符号文字

#########################################################################################################################
# Plugin Settings Panel
#########################################################################################################################
# General Tab
settings.plugin.general.tab.console.panel.title=控制台选项
settings.plugin.general.tab.console.cb.color.mode.title=ANSI 颜色代码识别(&C)

settings.plugin.general.tab.project.view.panel.title=项目视图
settings.plugin.general.tab.use.ruby.project.view.title=使用 Ruby 特定的类/模块项目视图(&U)
settings.plugin.general.tab.environment.variables.panel.title=环境
settings.plugin.general.tab.environment.path.idea.label=Idea 路径
settings.plugin.general.tab.environment.path.additional.label=附加路径
settings.plugin.general.tab.environment.path.additional.tooltip=(例如 ~/bin\:/usr/local/mysql/bin)

settings.code.insert.args.and.blocks=在自动补全时插入参数和块存根

# Plugin About Info
settings.plugin.about.tab.title=插件信息
plugin.about.build.label=插件版本\:
plugin.about.revision.label=Svn 修订版\:
plugin.about.home.page.label=网址\:
plugin.about.issue.tracker.label=问题跟踪器\:
plugin.info.unknown.value=未知
plugin.about.issue.plugin.repository.label=插件库\:

########################################################################################################################
# Autocomplete, resolve
#########################################################################################################################
in=英尺
assoc.key=哈希键
parameter=参数
numbered.parameter=编号参数
local.variable=局部变量
constant=常量
global.variable=全局变量
class.variable=类变量
instance.variable=实例变量
field.write=字段写入
call=调用
method=方法
singleton.method=单例方法
class=类
module=模块
alias=别名
symbol=符号
delegated.method=委派方法
required.named.argument=必填
optional.named.argument=可选

########################################################################################################################
# Rename
#########################################################################################################################
rename.incorrect.name=名称不正确\: ''{0}''
rename.cannot.rename.accessor.method.to.common=无法将访问器名称重命名为常用方法名称
rename.same.name=名称相同
rename.not.available=重命名不可用
rename.already.existing.variable=变量 ''{0}'' 已存在
rename.quick.fix.family.name=重命名
rename.quick.fix.name=重命名
rename.quick.fix.name.to=重命名为 {0} 
rename.options.search.for.symbols=搜索符号/哈希键

########################################################################################################################
# RubyPsiDocumentation
#########################################################################################################################
ruby.doc.file=文件
ruby.doc.module=模块
ruby.doc.class=类
ruby.doc.method.class=类方法
ruby.doc.method.instance=实例方法
ruby.doc.method=方法
ruby.doc.field.reader=字段读取器
ruby.doc.field.writer=字段写入器
ruby.doc.alias=别名
ruby.doc.original=原始
ruby.doc.not.found=没有发现文档.
ruby.doc.select.symbol=选择符号以显示以下帮助\:
ruby.doc.documentation=文档
ruby.doc.several.variants=找到多个变量
ruby.doc.usage=用法
ruby.doc.description=描述
ruby.doc.private=private
ruby.doc.protected=protected
ruby.doc.public=public
ruby.doc.overrides=重写\:
ruby.doc.documentation.from.partial={0} 中的部分声明\:
ruby.doc.documentation.from.partial.no.address=部分声明\:

##########################################################################################################################
# Inspections
#########################################################################################################################
inspection.group.ruby.name=Ruby
inspection.group.ruby.rails.name=Rails
inspection.group.ruby.codemetrics.name=代码指标
inspection.group.ruby.codestyle.name=代码风格问题
inspection.group.ruby.controlflow.name=控制流问题
inspection.group.ruby.dataflow.name=数据流问题
inspection.group.ruby.gems.name=Gem 和 gem 管理
inspection.group.ruby.general.name=选项
inspection.group.ruby.inheritance.name=继承问题
inspection.group.ruby.internal.name=内部
inspection.group.ruby.languagemigration.name=语言级别迁移帮助
inspection.group.ruby.probablebugs.name=可能的错误
inspection.group.ruby.redundantcode.name=冗余代码
inspection.group.jruby.name=JRuby

# Inspection: Missing YARD @param tag
inspection.missing.yard.param.tag.name=方法参数缺少 '@param' 标记
inspection.missing.yard.param.tag.syntax.format=生成的标记格式\:
inspection.missing.yard.param.tag.name.type=@param 名称 [Type]
inspection.missing.yard.param.tag.type.name=@param [Type] 名称
inspection.missing.yard.param.tag.parameter.not.annotated=参数未用 '@param' 标记进行注释
inspection.missing.yard.param.tag.method.params.not.annotated=方法的某些参数缺少 '@param' 标记
inspection.missing.yard.param.tag.quickfix.name=添加 '@param' 标记
inspection.missing.yard.param.tag.quickfix.name.for.method=添加 '@param' 标记

# Inspection: Missing YARD @return tag
inspection.missing.yard.return.tag.name=方法缺少 '@return' 标记
inspection.missing.yard.return.tag.method.not.annotated=方法未使用 '@return' 标记进行注释
inspection.missing.yard.return.tag.quickfix.name=添加 '@return' 标记

# Inspection: call
inspection.argcount.name=调用参数计数不正确
inspection.argcount.required.at.least=需要 {0} 个或以上
inspection.argcount.required.max=需要 {0} 个或以下
inspection.argcount.missing.argument=缺少参数 {0}
inspection.argcount.missing.arguments=缺少参数 {0}
inspection.argcount.unknown.keyword=未知关键字 ''{0}''
inspection.argcount.unknown.keyword.fix=移除未知关键字
inspection.argcount.required=需要 {0} 个
inspection.argcount.extra.argument=找到额外参数
inspection.argcount.extra.arguments=找到额外参数
inspection.argcount.extra.argument.fix=移除额外参数
inspection.argcount.extra.arguments.fix=移除额外参数
inspection.argcount.block.required=缺少块
inspection.argcount.block.generate=生成块

# Inspection: duck type
inspection.duck.type.name=调用参数类型不匹配

# Inspection: ruby interpreter
inspection.invalid.interpreter.name=项目缺少 Ruby 解释器
inspection.invalid.interpreter.not.configured=没有为项目配置 Ruby 解释器
inspection.invalid.interpreter.configured=为项目选择的 Ruby 解释器无效
inspection.invalid.interpreter.quick.fix.name=配置

# Inspection: resolve
inspection.resolve.name=未解析的引用
inspection.resolve.cannot.find=无法找到 ''{0}''
inspection.resolve.field.cannot.find=无法找到字段 ''{0}'' 的声明
inspection.resolve.cannot.find.in.type=无法找到类型 ''{1}'' 的 ''{0}''
inspection.resolve.implicit.required.item=隐式必需文件，未检查
inspection.resolve.cannot.find.required.file=没有要加载的此类文件
inspection.resolve.cannot.resolve.include=无法正确解析，未处理
inspection.resolve.warn.implicit.resolve.results=报告类型接收器上未解析的引用

# Inspection: ruby incorrect resolve
inspection.incorrect.resovle.textbased=使用基于文本的解析

# Inspection: YARD return type match
inspection.yard.return.type.match=返回类型不匹配
inspection.yard.return.type.match.warning.title=不兼容的类型
inspection.yard.return.type.match.required=必填\:
inspection.yard.return.type.match.returned=返回\:

# Inspection: YARD param type match
inspection.yard.param.type.match=参数类型不匹配
inspection.yard.param.type.match.warning.title=不兼容的类型
inspection.yard.param.type.match.required=必填\:
inspection.yard.param.type.match.passed=已通过\:

# Inspection: Invalid call to protected/private method
inspection.invalid.call.to.protected.private.method=对 protected/private 方法的调用无效
inspection.invalid.call.to.protected.private.method.replace.quick.fix=将 ''{0}'' 替换为 ''{1}''
inspection.invalid.call.to.protected.private.method.required=必填\:
inspection.invalid.call.to.protected.private.method.passed=已通过\:
inspection.invalid.call.to.protected.private.method.visibility.violation=可见性违规
inspection.invalid.call.to.protected.private.method.warning.text=对 {0} 方法 ''{1}'' 的调用无效

# AccessModifierProblem
access.modifier.problem.remove.explicit.self=移除显式 'self'
access.modifier.problem.wrap.call.with.send=用 'send' 包装调用

# Inspection: scopes local var
inspection.scopes.name=变量/参数范围
inspection.scopes.parameter.shadows.outer=参数 ''{0}'' 隐藏了外部参数或局部变量
inspection.scopes.uninitialized.local.variable=局部变量 ''{0}'' 可能未初始化
inspection.scopes.redundant.block.local.variable=局部变量声明 ''{0}'' 冗余
inspection.scopes.too.big.for.type.inference=''{0}'' 太大，无法进行类型推理
inspection.scopes.doblock.too.big.for.type.inference=块太大，无法进行类型推理

# Inspection: unused local variable
inspection.unused.locals.name=未使用的局部变量/参数
inspection.unused.locals.local.isnot.used=未使用局部变量 ''{0}''
inspection.unused.locals.local.value.isnot.used.anymore=局部变量 ''{0}'' 赋值后未使用
inspection.unused.locals.parameter.isnot.used=未使用参数 ''{0}''
inspection.unused.locals.parameter.value.isnot.used.anymore=参数 ''{0}'' 赋值后未使用
inspection.unused.locals.replace.with.wildcard=替换为 '_'
inspection.unused.locals.remove.assignment=移除赋值
inspection.unused.locals.rename.to.constant=重命名为常量


# Inspection: implement java interface/override abstract class
inspection.implement.interface.name=未完全实现 Java 接口
inspection.implement.interface.fix=执行方法
inspection.implement.interface.class.should.implement.method=类必须实现方法\: {0}

# Inspection: super class must be a class
inspection.super.class.must.be.a.class.name=超类必须是类，而不是接口
inspection.super.class.must.be.a.class.message=此处不应为接口
inspection.super.class.must.be.a.class.fix.name=将继承更改为包含接口

# Inspection: super class must be a class
inspection.imported.class.should.be.public.name=导入的类必须为 public
inspection.imported.class.should.be.public.message=导入的类必须为 public
inspection.imported.class.should.be.public.fix.name=将导入的类修饰符更改为 public

# Inspection: call
inspection.unnecessary.semicolon.name=冗余分号
inspection.unnecessary.semicolon.message=冗余分号
inspection.unnecessary.semicolon.quickfix.message=移除分号

# Inspection: unnecessary return statement
inspection.unnecessary.return.statement.name=冗余的 'return' 语句
inspection.unnecessary.return.statement.message=冗余的 'return' 关键字
inspection.unnecessary.return.statement.remove.fix=移除 'return'
inspection.unnecessary.return.statement.in.assignment.message=赋值方法中存在冗余的 'return' 语句
inspection.unnecessary.return.statement.warn.multiple.values.return=针对 return 语句中有多个值发出警告

# Inspection: unnecessary return value
inspection.unnecessary.return.value.name=冗余变量用作 'return' 值
inspection.unnecessary.return.value.message=冗余变量用作 'return' 值
inspection.unnecessary.return.value.remove.fix=移除变量和赋值

# Inspection: string jruby import
inspection.jruby.string.import.name=jruby 字符串导入不正确
inspection.jruby.string.import.message=jruby 字符串导入不正确
inspection.jruby.string.import.fix1=将 '\:\:' 替换为 '.'
inspection.jruby.string.import.fix2=移除 'Java' 前缀

# Inspection: jruby java field access
inspection.jruby.java.field.access.name=访问 java 字段
inspection.jruby.java.field.access.message=无法使用点引用访问非 public java 字段，请使用 field_reader、field_writer、field_accessor
inspection.jruby.java.field.access.enum.message=无法通过点引用访问枚举字段
inspection.jruby.java.field.access.enum.fix=将 '.' 替换为 '\:\:'

# Inspection: parentheses around conditional
inspection.parentheses.around.conditional.name=条件表达式带括号
inspection.parentheses.around.conditional=条件表达式具有括号
inspection.parentheses.around.conditional.message=移除括号

# Inspection: wrong top level package
inspection.wrong.top.level.package=Java 顶层包错误
inspection.wrong.top.level.package.fix=将 Java\:\: 添加到包
inspection.wrong.top.level.package.should.be.one.of=使用的顶层 Java 包应为以下之一\: {0}

# Inspection: large class
inspection.large.class.methods.name=类/模块的方法过多
inspection.large.class.methods=''{0}'' 的方法过多 (方法计数 \= {1})
inspection.large.class.methods.property=方法数
inspection.large.class.methods.checkbox.name=忽略测试类
inspection.large.class.variables.name=类/模块的实例变量过多
inspection.large.class.variables=''{0}'' 的实例变量过多 (实例变量计数 \= {1})
inspection.large.class.variables.property=实例变量数

# Inspection: hashes
inspection.duplicated.keys.in.hash=哈希中存在重复键
inspection.duplicated.keys.in.hash.msg=重复键
inspection.duplicated.keys.in.hash.fix.delete=移除键
inspection.duplicated.keys.in.hash.msg1='Hash[...]' 调用不正确，应为偶数个参数
inspection.hash.keys.types='Hash[...]' 调用不正确
inspection.hash.double.quoted.keys.name=用字符串作为键的哈希
inspection.hash.double.quoted.keys=哈希中存在字符串键
inspection.hash.double.quoted.keys.fix=转换为符号键
inspection.hash.convert.in.file=哈希可以转换为 ruby 1.9+ 样式
inspection.hash.convert.in.file.fix=转换为 ruby 1.9+ 样式

# Inspection: blocks
inspection.block.replace.with.method.reference.name=块可以替换为方法引用
inspection.block.replace.with.method.reference=块可以替换为方法引用
inspection.block.replace.with.method.reference.msg=转换为方法引用 (更改语义)
inspection.block.replace.with.method.reference.option.name=忽略 \\&method(…) 引用

# Inspection: double quoted string to single quoted
inspection.quoted.string=字符串可以转换为单引号
inspection.quoted.string.msg=字符串可以转换为单引号
inspection.quoted.string.label=忽略包含单引号的字符串
inspection.quoted.string.fix=转换为单引号

# Inspection: expression in '' string
inspection.expression.in.string=使用单引号字符串的表达式替换
inspection.expression.in.string.msg=转换为双引号

# Inspection: empty rescue block
inspection.empty.rescue.block='rescue' 块为空
inspection.empty.rescue.block.msg=添加 'ignored' 注释
inspection.empty.rescue.block.with.comments.checkbox.label=忽略包含注释的 'rescue' 块
inspection.empty.rescue.block.param.underscore.checkbox.label=对名称为 '_' 的 'rescue' 参数忽略

# Inspection: if can be switch
inspection.if.can.be.case='if' 语句可替换为 'case'
inspection.if.can.be.case.msg=转换为 'case' 语句
inspection.if.can.be.case.option=最小分支数

# Inspection: case without else block and empty else block
inspection.case.without.else.name='case' 语句没有 'else' 块
inspection.case.without.else='case' 语句没有 'else' 块
inspection.case.without.else.msg=添加 'else' 块
inspection.empty.else.block='else' 块为空
inspection.empty.else.block.with.comments.checkbox.label=忽略包含注释的 'else' 块

# Inspection: deprecated syntax
inspection.deprecated.syntax.name=已弃用的语法
inspection.deprecated.syntax=已弃用的语法
inspection.deprecated.syntax.ruby19=已弃用的语法 (已从 Ruby 1.9 中移除)
inspection.deprecated.syntax.fix1=替换为 'then'
inspection.deprecated.syntax.fix2=替换为''{0}''
inspection.deprecated.syntax.fix2.family.name=替换为建议的语法


# Inspection: parentheses around arguments of def
inspection.def.parentheses.name=方法定义的括号不正确
inspection.def.parentheses.no.arg=没有参数的方法定义具有括号
inspection.def.no.parentheses=具有参数的方法定义没有括号
inspection.def.parentheses.msg=添加括号
inspection.def.parentheses.msg2=移除括号

# Inspection: assignment expression in conditional
inspection.assignment.in.conditional=条件中存在赋值表达式
inspection.assignment.in.conditional.name=条件中存在赋值表达式
inspection.assignment.in.conditional.msg=将 '\=' 替换为 '\=\='
inspection.assignment.in.conditional.msg2=添加澄清括号
inspection.assignment.in.conditional.parentheses.checkbox.label=报告带括号的赋值

# Inspection: literal array
inspection.literal.array=字符串文字数组可替换为 '%w'
inspection.literal.array.msg=转换为 '%w' 语法

# Inspection: nested ternary operators
inspection.nested.ternary.operators=嵌套的三元运算符
inspection.nested.ternary.operators.fix=将外部三元转换为 'if' 语句

# Inspection: then in multiline conditional
inspection.then.in.multiline.conditional=位于多行 'if'/'unless' 块中的 'then'
inspection.then.in.multiline.conditional.msg=移除 'then'

# Inspection: for to foreach
inspection.fortoforeach.quickfix.message=转换为 '.each'

# Inspection: call
inspection.deadcode.name=不可到达的代码
inspection.deadcode.unreachable.code=不可到达的代码
inspection.deadcode.unreachable.method=不可到达的代码，此方法在引用之前被重写

# Inspection: nil analysis
inspection.nilanalysis.name='nil' 取消引用
inspection.nilanalysis.warning=方法调用 ''{0}'' 可能导致 ''NoMethodError''

# Inspection: redundant safe navigation
inspection.redundant.safe.navigation.name=冗余的安全导航
inspection.redundant.safe.navigation.warning=冗余的安全导航
inspection.redundant.safe.navigation.message=将 '&.' 替换为 '.'

# Inspection: Dynamic constant assinment erro
inspection.dynamic.const.assignment.name=动态常量赋值
inspection.dynamic.constant.assignment=动态常量赋值

# Inspection: Don't put space before parentheses
inspection.parentheses.name=方法调用的括号前有空格
inspection.parentheses.warning=方法调用的括号前有空格

#Inspection: Redundant parentheses after method call
inspection.parentheses.after.method.call.name=无参数方法调用具有括号
inspection.parentheses.after.method.call=无参数方法调用具有括号
inspection.parentheses.after.method.call.fix=移除括号

# Inspection: jump error
inspection.jump.error.name=jump 语句的上下文不正确
inspection.jump.error.return.inside.class.or.module='return' 语句位于类或模块主体内
inspection.jump.error.no.loop.for.break='break' 语句没有相应的循环
inspection.jump.error.no.loop.for.next='next' 语句没有相应的循环
inspection.jump.error.no.loop.for.redo='redo' 语句没有相应的循环
inspection.jump.error.no.context.for.retry='retry' 语句没有相应的上下文

# Inspection: ParamDef resolve inspection
inspection.paramdef.resolve.name=方法调用的参数值异常
inspection.paramdef.unexpected.param.value=此方法调用的参数值异常
inspection.paramdef.hash.unexpected.key=异常哈希键 ''{0}''
inspection.paramdef.hash.unexpected.key.type=应为符号，而不是字符串键\: ''{0}''
inspection.paramdef.array.arg.out.of.bounds.warning=额外的数组元素。此数组应仅包含 {0} 个元素

inspection.paramdef.classref.warning=预期为类名
inspection.paramdef.classifiableref.warning=预期为类名

inspection.paramdef.association.warning=无法找到 ''{0}'' 关联字段的关联 Rails 模型
inspection.paramdef.controller_action.warning=无法找到 Rails 操作 ''{0}''
inspection.paramdef.controller.warning=应为 Rails 控制器名称 (例如\: 对于 LoginController 为 login)，但找到的是 ''{0}''
inspection.paramdef.helper.warning=应为帮助程序名称 (例如\: 对于 ''app/helpers/login_helper.rb'' 为 ''login'') 或 ''\:all'' 参数，但找到的是 ''{0}''
inspection.paramdef.file.warning=应为文件名(例如\: ''/public/404.html''，但找到的是 ''{0}'')
inspection.paramdef.image.warning=应为相对于图像或 ''public'' 文件夹的图像路径(例如\: '' icon''、''icon.png''、''/icons/icon.gif'')，但找到的是 ''{0}''
inspection.paramdef.method.warning=应为方法名称 {0}，但找到的是 ''{1}''。
inspection.paramdef.access.warning=方法访问修饰符应至少为 {0}
inspection.paramdef.method.warning.up.to.part=从当前类或父类到 ''{0}''
inspection.paramdef.migration.warning=应为表 ''{0}''{2} 的数据库字段名称，但找到的是 ''{1}''
inspection.paramdef.migration.warning.undefined.db=类 ''{0}'' 的未定义表的数据库字段 ''{1}''
inspection.paramdef.rails.model.classref.warning=应为 Rails 模型类名
inspection.paramdef.rails.model.associationref.warning=无法找到 rails 关联 ''{0}''
inspection.paramdef.model.warning=应为数据库表名称 (例如\: 对于模型 Person 为 people)，但找到的是 ''{0}''
inspection.paramdef.partial.warning=应为部分模板的名称或路径 (例如 ''partial'' 或 ''/login/partial'')，但找到的是 ''{0}''
inspection.paramdef.script.warning=应为相对于 ''public/scripts'' 文件夹的 javascript 路径(例如\: ''prototype'')，但找到的是 ''{0}''
inspection.paramdef.stylesheet.warning=应为相对于样式表或 ''public'' 文件夹的样式表路径(例如\: ''coderay.css''、''coderay''、''/stylesheets/user-styles'')，但找到的是 ''{0}''
inspection.paramdef.view.warning=应为位于 [VIEW_TEMPLATE_ROOT] 中的视图模板 (例如，对于 ''[VIEW_TEMPLATE_ROOT]/login/index.html.erb'' 为 ''login/index'')，但找到的是 ''{0}''
inspection.paramdef.layout.warning=应为位于 [VIEW_TEMPLATE_ROOT]/layouts 中的布局文件的路径或对布局方法名称的符号引用 (例如，对于 ''[VIEW_TEMPLATE_ROOT]/layouts/login.html.erb'' 为 ''login''，或者 \:my_render_method)，但找到的是 ''{0}''
inspection.paramdef.table_name.warning=应为数据库表名称 {1}，但找到的是 ''{0}''。
inspection.paramdef.warning.eg.singular=(例如 {0})
inspection.paramdef.warning.forbidden.rsymbol.usage=此处无法使用符号值
inspection.paramdef.warning.forbidden.rsymbol.in.assoc.class_name=Rails 不理解此处的符号值，您应使用字符串
inspection.paramdef.warning.name.array.type=数组
inspection.paramdef.warning.name.hash.type=哈希
inspection.paramdef.warning.name.string.type=字符串
inspection.paramdef.warning.name.symbol.type=符号

# Inspection: Rails 3.0 deprecated feature
inspection.rails3.deprecated.name=已弃用功能
inspection.rails3.constant.deprecated=已弃用 ''{0}'' 常量
inspection.rails3.call.deprecated=已弃用 ''{0}'' 调用
inspection.rails4.dynamic.finders=动态查找器已弃用，将在 Rails {0} 移除，建议使用 ''where'' 重写

# Inspection: Shoulda unsupported file name
inspection.shoulda.reassignment.name=Shoulda 测试的文件名错误
inspection.shoulda.reassignment.error.msg=Shoulda 测试的文件名错误

# Inspection: Simplify
inspection.simplify.name=可以简化表达式
inspection.simplify.familyName=简化
inspection.simplify.message.quickfix.message=简化为 ''{0}''

# Inspection: Class variable usage
inspection.classvariables.name=类变量用法
inspection.classvariables=类变量的用法

# Inspection: Super call without superclass
inspection.call.super='super' 调用未定义超类
inspection.call.super.outside.of.method='super' 调用在方法之外

# Inspection: Instance variable in string
inspection.instance.variable.to.string.name=内插变量无大括号
inspection.instance.variable.to.string=内插的实例变量没有大括号
inspection.global.variable.to.string=内插的全局变量没有大括号
inspection.instance.variable.to.string.fix=添加大括号

# Inspection: Convert control flow
inspection.controlflowconversion.name=控制流语句包含否定条件
inspection.controlflowconversion=控制流语句包含否定条件
inspection.controlflowconversion.quickfix.message=将 ''{0}'' 转换为 ''{1}''
inspection.controlflowconversion.quickfix.family.name=求反语句
inspection.unlesswithelse.name='unless' 语句包含 'else'
inspection.unlesswithelse.quickfix.message=转换为 'if' 语句

# Inspection: wrong bracket balance
inspection.bracket.balance=中括号不对称
inspection.bracket.balance.message=缺少 ''{0}''
inspection.bracket.balance.fix=插入缺少的 ''{0}''

# Inspection: For loop usage
inspection.forloop.name='for' 循环可以替换为 '.each'
inspection.forloop='for' 循环可以替换为 '.each'

# Suppress : Ruby
suppress.inspection.statement=对语句禁止
suppress.inspection.method=抑制方法(method)
suppress.inspection.class.module=对类/模块禁止
suppress.inspection.class.module.all=禁止类/模块的所有检查

inspection.duplicate.step.definition.message=发现多个同名的步骤定义
inspection.duplicate.step.definition.gutter.tooltip.message=发现多个同名的步骤定义
inspection.duplicate.step.definition.gutter.title=多个步骤定义同名
inspection.duplicate.step.definition.gutter.balloon.title=选择重复的步骤定义
inspection.step.definition.parameter.count.message=块部分中的参数计数与步骤名称中的参数计数不匹配

# Rails checklist inspections
inspection.rails.checklist.view.calls.find.name=视图中存在 'find' 或 'find_by' 方法调用
inspection.rails.checklist.view.calls.find.message=视图中存在 'find' 或 'find_by' 方法调用

# Rails ActionMailbox inspections
inspection.rails.actionMailbox.missing.process.name=邮箱缺少 'process' 方法
inspection.rails.actionMailbox.missing.process.message=邮箱缺少 'process' 方法
inspection.rails.actionMailbox.missing.process.fix.name=添加 'process' 方法

inspection.rails.actionMailbox.missing.routes.name=邮箱没有路由
inspection.rails.actionMailbox.missing.routes.message=邮箱没有路由

# Inspection: yard
inspection.group.yard.name=YARD

inspection.yard.name=标记用法不正确
inspection.yard.no.param.tag=''{0}'' 缺少 @param 标记
inspection.yard.several.param.tags=''{0}'' 的 ''@param'' 标记重复
inspection.yard.wrong.param=''@param'' 标记中存在未定义的参数 ''{0}''
inspection.yard.remove.tag=移除标记

# Inspections: unused import
inspection.jruby.unused.import.name=未使用的导入
inspection.jruby.unused.import=导入从未使用
inspection.jruby.remove.import=移除未使用的导入

# Inspection: java deprecated method usage
inspection.jruby.deprecated.java.method.usage=已弃用 ''{0}''
inspection.jruby.deprecated.java.method.override=重写 ''{0}'' 中弃用的方法
inspection.jruby.deprecated.java.method.name=使用了已弃用的 Java 方法

# Inspection: Ruby 2.3 safe navigation adoption
inspection.ruby.one.if.to.safe.nav.name=链式调用可简化为 '\\&.'
inspection.ruby.one.if.to.safe.nav.problem.name=链式 nil-safe 调用可简化为 '\\&.'
inspection.ruby.one.if.to.safe.nav.quickfix.name=简化为 '\\&.'
inspection.ruby.safe.nav.to.one.if.intention.name=将 '\\&.' 替换为链式调用
inspection.ruby.safe.nav.to.multiple.ifs.intention.name=将 '\\&.' 替换为嵌套 'nil' 检查

# Inspection: using a module as superclass
inspection.module.as.superclass=模块用作超类

# Inspection: Frozen String literals modification
inspection.modified.object.name=冻结对象修改
inspection.modified.object.problem.name=冻结对象已修改

# Inspection: Parameter naming convention
inspection.ruby.parameter.naming.convention.block=对块参数忽略
inspection.ruby.parameter.naming.convention.lambda=对 lambda 参数忽略
inspection.ruby.parameter.naming.convention.rescue=对 rescue 参数忽略

# Inspection: Rubocop
inspection.rubocop.name=RuboCop
inspection.rubocop.error=RuboCop 错误
inspection.rubocop.error.code=RuboCop 返回退出代码 {0}，有关详细信息，请参阅日志
inspection.rubocop.error.starting=无法启动 RuboCop\: {0}
inspection.rubocop.error.starting.no.details=RuboCop 执行错误
inspection.rubocop.details=详细...
inspection.rubocop.error.parsing=无法解析 RuboCop 响应
inspection.rubocop.disable=禁用 RuboCop
inspection.rubocop.disabled=RuboCop 检查已禁用
inspection.rubocop.no.gem=当前 $IDE_DEPENDENT_MODULE$ SDK 中缺少 ''{0}''。
inspection.rubocop.no.gem.manual.text=如果要使用 ''{0}'' linter，请安装该工具并重新启用 RuboCop 检查。
inspection.rubocop.no.gem.action.title=安装 ''{0}'' 并重新启用
inspection.rubocop.no.suitable.sdk=未找到已安装 ''{0}'' 的合适 Ruby SDK。请将其安装到 SDK 并重新运行分析。
inspection.rubocop.use.standard=使用 'standard' gem
inspection.rubocop.severities.mapping=RuboCop 严重性映射
intention.rubocop.autocorrect=修复所有可自动更正的错误
intention.rubocop.autocorrect.filtered=修复 [{0}] 个错误
intention.rubocop.autocorrecting.progress=使用 RuboCop 进行更正\: {0}
intention.rubocop.autocorrecting=使用 RuboCop 自动更正
intention.rubocop.error.output=无法解析来自 RuboCop 的输出。请参阅以下<a href\="https\://github.com/bbatsov/rubocop/issues/2502\#issuecomment-166012933">讨论</a>了解详细信息。
intention.rubocop.error.no.output=RuboCop 进程没有输出
intention.rubocop.error.readonly=RuboCop 正在运行。请稍候…

########################################################################################################################
# LineMarkers
#########################################################################################################################
overrides=重写
overridden=重写
mixed.in=混合
partial=部分声明
superclass=超类

line.marker.select.overriden.variant=选择被重写的元素
line.marker.select.overriding.variant=选择重写元素
line.marker.select.overriden.partial.variant=选择部分声明

########################################################################################################################
# Create Actions
#########################################################################################################################
action.create.new.rails.template.filetype={0}模板
action.description.create.new.rails.template.file=创建新的{0}
class.to.import.chooser.title=选择类

#########################################################################################################################
# Module settings dialog
#########################################################################################################################
module.settings.dialog.select.test.spec.cb.install.rspec=RSpec(&R)
module.settings.dialog.select.test.spec.panel.rspec.title=RSpec
module.settings.dialog.select.test.spec.rb.use.rspec.gem=使用 RSpec Gem(&G)\: {0}
module.settings.dialog.select.test.spec.rb.use.rspec.gem.version.not.installed=[未安装]
module.settings.dialog.select.test.spec.rb.install.rspec.plugin=RSpec 插件(&P)
module.settings.dialog.select.test.spec.rb.rspec.plugin.latest=安装最新版本(&L)
module.settings.dialog.select.test.spec.rb.rspec.plugin.any=安装特定版本(&E) (将 X、Y、Z 替换为 RSpec 版本)
module.settings.dialog.select.test.spec.rb.label.plugin.arguments=脚本/插件安装的参数\:
module.settings.dialog.select.test.spec.rb.rspec.plugin.trunk=安装 Trunk 版本(&T)

module.settings.dialog.select.test.ruby.spec.gem.text=是否要安装 RSpec gem?
module.settings.dialog.select.test.ruby.spec.gem.install.text=是 (&Y)

module.settings.dialog.select.test.framework.choose.text=请为您的模块指定测试框架。
module.settings.dialog.select.test.framework.choose.test.unit.text=Test\:\:Unit 框架(&T)
module.settings.dialog.select.test.framework.choose.rspec.text=RSpec 框架(&R)
module.settings.dialog.select.test.framework.choose.rspec.html.link=有关 RSpec 测试框架的详细信息，请参阅<a href\="{0}">{0}</a>
module.settings.dialog.select.test.spec.ruby.installed.rspec.gem=您的 RSpec Gem 版本\: <font color\="\#2554C7">{0}</font>。
module.settings.dialog.select.test.spec.ruby.please.install.rspec.gem.html=请为当前 Ruby SDK <font color\="\#E41B17">安装 RSpec Gem</font> 或选择<font color\="\#E41B17">已安装 RSpec 的 Ruby SDK</font>，然后再继续。
module.settings.dialog.select.test.spec.ruby.please.install.rspec.gem.text=未针对选定的 Ruby SDK 安装 RSpec Gem。是否仍要继续?
module.settings.dialog.select.test.spec.ruby.please.install.rspec.gem.title=安装 RSpec Gem

module.settings.dialog.svn.not.in.path.msg=安装插件需要使用 svn 客户端。请先设置 svn 文件夹路径。
module.settings.dialog.svn.not.in.path.title=未找到 Svn

module.settings.dialog.source.roots.choose.test.text=请指定一个可以找到模块的 ruby 测试源文件的目录。\n\
\n\
注意\: 该插件只会正确搜索位于测试目录下的测试文件。\n\
您可以稍后在模块设置对话框中添加额外的测试源根。
module.settings.dialog.source.roots.choose.test.create=创建测试源目录(&C) (推荐)
module.settings.dialog.source.roots.choose.test.comment=输入模块内容根的相对路径\:
module.settings.dialog.source.roots.choose.test.do.not.create=搜索整个模块内容中的测试(&S)
module.settings.dialog.source.roots.choose.test.full.path=以下目录将被标记为测试源码目录\:

module.settings.dialog.test.framework.tab.title=测试框架
module.settings.dialog.test.framework.rspec.use.gem=使用 RSpec Gem(&G)
module.settings.dialog.test.framework.rspec.use.plugin=使用 RSpec 插件(&P)
module.settings.dialog.test.framework.rspec.use.no.sdk.messages=无 Ruby SDK。请先为此模块设置 Ruby SDK。
module.settings.dialog.test.framework.rspec.use.no.sdk.title=显示 RSpec Gem 版本
module.settings.dialog.test.framework.rspec.get.gem.version=显示 RSpec Gem 版本(&S)

module.create.dialog.init.errors.title=模块 ''{0}''\: 设置错误

module.toggle.rails.view.sources.action=Rails 视图用户文件夹
module.toggle.rails.view.additional.sources.action.description=将目录标记为 Rails 视图用户文件夹
module.paths.rails.view.additional.group=Rails 视图用户文件夹

module.settings.dialog.i18n.folders.tab.title=I18n 文件夹
module.settings.dialog.i18n.folders.with.locales.title=具有区域设置的文件夹

module.settings.dialog.load.path.tab.title=加载路径
module.settings.dialog.load.path.list.caption=加载路径(&L)\:
module.settings.dialog.load.path.button.add=添加(&A)
module.settings.dialog.load.path.filechooser.add.dialog.title=选择目录
module.settings.dialog.load.path.button.remove=移除(R)

##########################################################################################################################
# New Module/Project Wizard
#########################################################################################################################
module.wizard.test.framework.rspec.svn.note=注意\: Svn 必须位于 PATH 中。您可以在此处添加包含 svn 的文件夹以加载路径

##########################################################################################################################
# Files operations
#########################################################################################################################
file.cant.create.folder.text=无法创建文件夹\: ''"''{0}''"''
file.cant.create.folder.title=创建文件夹

##########################################################################################################################
# IDEA Bundles
#########################################################################################################################
# ProjectBundle
module.toggle.excluded.action=排除
module.toggle.excluded.action.description=从模块中包含/排除目录
module.toggle.test.sources.action=测试源
module.toggle.test.sources.action.description=将目录标记为测试源根
module.paths.test.sources.group=测试源文件夹
module.paths.excluded.group=排除的文件夹
module.paths.unmark.tests.tooltip=取消标记测试
module.paths.unmark.source.tooltip=取消标记源
module.paths.remove.tooltip=移除
module.paths.include.excluded.tooltip=引入
module.paths.empty.node=<空>
project.root.change.loading.progress=正在加载文件…

#IdeBundle
prompt.enter.new.filetype.name=输入新 {0} 文件名\:
title.new.filetype=新建{0}
title.new.from.template=新建{0}
title.cannot.create.filetype=无法创建 {0}
title.cannot.create.file=无法创建文件
command.name.create.new.file=创建 {0}
command.create.file.from.template=从模板创建文件
progress.creating.filetype.in.directory=在 {2} 中创建 {0} ''{1}'' 
progress.deleting=删除中
error.please.enter.a.file.name=请输入文件名
error.unable.to.parse.template.message=无法解析模板 "{0}",错误信息\:{1}
tab.chooser.project=项目
tab.chooser.search.by.name=按名称搜索

#ExecutionBundle
choose.test.method.dialog.title=选择测试方法
choose.test.class.dialog.title=选择测试类
set.class.name.message=先保存类名

#CommonBundle
action.rerun=重新运行


##########################################################################################################################
# JRuby Facet
#########################################################################################################################
jruby.facet=JRuby
jruby.facet.no.jdk.error=未选择 JRuby SDK\!
jruby.select.sdk=选择 JRuby SDK

#Settings tab: Gem Manager and SDK
jruby.settings.tabs.gem.manager.title=Gem 管理器
jruby.settings.tabs.gem.manager.error.wrong.sdk=所选 SDK 不是 JRuby SDK


jruby.framework.configurable.sdk=JRuby SDK\:
jruby.action.import.java.class.text=导入 Java 类
jruby.action.import.java.class.familyName=导入

##########################################################################################################################
# Rails Facet
#########################################################################################################################
rails.facet=Ruby on Rails
jrails.facet=JRuby on Rails
rails.application.project.generator.name=应用程序
rails.application.api.generator.name=Rails API
rails.application.generator.install.rails.gem=安装 Rails Gem…
rails.application.settings=Rails 应用程序设置
rails.mountable.engine.project.generator.name=可安装引擎
rails.mountable.engine.settings=Rails 引擎设置
rails.api.settings=Rails Api 设置
rails.app.sample.settings=RailsApps 示例设置
rails.app.sample.generator.name=RailsApps 示例
rails.app.sample.facet.wizard.title=RailsApps 示例
rails.app.sample.presentation.name=RailsApps 示例
rails.app.sample.version.change.notification.group.display.id=RailsApp 支持
rails.app.sample.version.change.notification=RailsApps 示例
rails.app.sample.description.html=<html>此项目是 rails 模板应用程序</html>
rails.app.sample.apply.sdk.notification=Ruby ''{0}'' 已应用于项目。<a href\=''revert''>还原</a>
rails.facet.wizard.more.button=更多...
rails.facet.wizard.more.dialog.title=Rails Facet 设置
rails.facet.wizard.error.no.skd=您未选择带 Rails 框架的 Ruby SDK
rails.facet.wizard.error.skd.without.rails=您的 SDK 不包含 Rails 框架
rails.facet.wizard.tab.rails.project.generator.title=Rails 应用程序
rails.facet.wizard.tab.rails.project.generator.select.rails.relative.path=<html>请指定将在其中生成应用程序的目录。路径应该相对于模块内容目录。如果将此字段留空，将使用模块内容目录。 (示例\: 'myapp' 或 'src/rails/myapp' 或留空)\:</html>
rails.facet.wizard.tab.rails.project.generator.select.rails.preconfigure.for.db=为选定数据库预配置(&P)\:
rails.facet.wizard.tab.rails.project.generator.select.rails.generate.mountable.engine=生成 Rails 可安装引擎(&E)
rails.facet.wizard.tab.rails.project.generator.select.rails.skip.test.unit=跳过 Test\:\:Unit 文件(&S)
rails.facet.wizard.tab.rails.project.generator.ruby.sdk=Ruby SDK(&R)\:
rails.facet.wizard.tab.rails.project.rails.version.title=刷新 Rails 版本
rails.facet.wizard.tab.cell.unavailable=不可用

rails.test.creator.name=运行 'rails generate'…
rails.test.creator.bundle.install.command.name=与 ''{0}'' 捆绑

##########################################################################################################################
# Gem Facet
#########################################################################################################################
gem.facet.wizard.error.no.skd=您未选择 Ruby SDK
gem.facet.wizard.error.no.bundler=无法找到 Bundler
gem.facet.settings.tab.general.title=信息
gem.facet.settings.tab.general.homeDir=Ruby Gem 基目录\:

##########################################################################################################################
# Ruby application
#########################################################################################################################
ruby.project.wizard.tab.project.generator.ruby.sdk=Ruby SDK(&S)\:

##########################################################################################################################
# Gem application
#########################################################################################################################
gem.project.generator.name=Gem
gem.wizard.generate.project.title=Gem 设置
gem.wizard.ruby.interpreter=Ruby SDK(&S)\:
gem.wizard.bundler.version=Bundler 版本(&V)\:
gem.wizard.create.exe.folder=创建可执行文件(&E)
gem.wizard.create.test.minitest=使用 minitest(&M)
gem.wizard.create.test.rspec=使用 rspec(&R)
gem.wizard.create.coc=添加行为准则(&O)
gem.wizard.create.c.ext=创建 C 扩展样本(&C)
gem.wizard.create.mit=添加 MIT 许可证(&T)
gem.wizard.no.bundler.before.link.text=未找到 bundler gem。 
gem.wizard.no.bundler.link.text=安装...
gem.bundler.not.found=未在 SDK 中找到 Bundler gem。请安装 Bundler
gem.download.bundler.gem=下载 Bundler gem 列表
gem.download.bundler.error=未找到 bundler gem。\n\
请检查代理设置和 gem url
gem.project.add.sdk=要添加 SDK，请指定 Ruby 解释器路径
gem.project.install.bundler=安装 Bundler gem
gem.build.options.dialog.title={0} Gem {1}
gem.build.options.dialog.edit.arguments=编辑 ''gem {0}'' 参数
gem.build.options.arguments=可选参数
empty.project.generator.name=空项目

rspec.rails.facet.wizard.tab.rails.project.generator.title=RSpec 组件

#------- Rails Facet Builder
rails.facet.builder.run.configuration.server.creating=创建 Rails 运行配置
rails.facet.builder.run.configuration.server.creating.for=为 ''{0}'' 创建 Rails 运行配置
rails.facet.builder.rails.application.searching=搜索 Rails 应用程序
rails.facet.builder.rails.application.choose.title=Rails 应用程序根文件夹
rails.facet.builder.rails.application.choose.relative.path=选择模块内容根的相对路径。

#------- Settings --
rails.facet.settings.tab.general.title=信息
rails.facet.settings.tab.general.railsHomePath.caption=Rails 应用程序主目录\:

#------ Actions -----
rails.facet.action.regenerate.generators.error.wrong.sdk=无法重新加载可用的生成器。没有为模块指定 SDK。
rails.facet.action.regenerate.rakeTasks.error.wrong.sdk=无法重新加载可用的 Rake 任务。没有为模块指定 SDK。

rails.spring.stop.title=Spring 停止

##########################################################################################################################
# Wizard
#########################################################################################################################
new.project.wizard.rvm.gemset=创建
new.project.wizard.rvm.gemset.exists=使用 gemset ''{0}''(&U)
new.project.wizard.rvm.gemset.create.title=创建 RVM Gemset ''{0}''
new.project.wizard.rvm.gemset.create.gemsets.title=创建 RVM Gemset
new.project.wizard.rvm.gemset.create.gemsets.plugin.title=刷新 SDK 列表
rvm.gemset.create.refreshing.sdk.progress.title=刷新 RVM SDK

##########################################################################################################################
# RHTML Parsing
#########################################################################################################################
rhtml.parsing.flex.error=Lexer 错误\!\!\!
rhtml.parsing.named.element.is.not.closed=元素 {0} 未关闭
rhtml.parsing.unexpected.end.of.file=文件结尾异常

##########################################################################################################################
# Breadcrumbs
#########################################################################################################################
breadcrumbs.rhtml.presentation.omit.new.line=省略新行
breadcrumbs.rhtml.presentation.comment=注释
breadcrumbs.rhtml.presentation.ruby.injection=Ruby 注入

##########################################################################################################################
# Refactoring
#########################################################################################################################
# introduce
refactoring.introduce.name.error=错误的名称
refactoring.introduce.selection.error=使用选定的元素不能执行重构
refactoring.introduce.context.error=不能执行重构在这个上下文
refactoring.introduce.command.error=无法对命令调用执行重构
refactoring.introduce.input.error=无法执行重构。所选片段取决于局部变量
refactoring.introduce.state.changed.error=无法执行重构。所选片段内的状态已更改
refactoring.introduce.variable.changed.error=无法执行重构。语句内的变量已更改
refactoring.introduce.occurrences.checkbox.text={0}（{1} 个匹配项）
refactoring.introduce.dialog.name.text=名称\:
refactoring.introduce.dialog.type.text=&类型\:
refactoring.introduce.dialog.replace.all.occurrences.checkbox.text=替换所有的匹配项 (&A)

# introduce variable
refactoring.introduce.variable.scope.error=名称与现有局部变量或参数冲突

# introduce parameter
refactoring.introduce.parameter.dialog.title=提取字段
refactoring.introduce.parameter.scope.error=名称与现有局部变量或参数冲突
refactoring.introduce.named.parameter.error=名称与现有命名参数冲突
refactoring.introduce.parameter.outside.method.error=无法在任何方法之外执行重构
refactoring.introduce.parameter.has.error.arguments=无法在参数错误的方法内执行重构
refactoring.introduce.parameter.no.acceptable.type=无法执行重构\: 未找到可接受的参数类型
refactoring.introduce.parameter.elements.to.change=要更改的元素
refactoring.introduce.parameter.parameter.to.method=增加参数到一个方法

# introduce constant
refactoring.introduce.constant.scope.error=已在范围中声明名称

# introduce field
refactoring.introduce.field.scope.error=名称与现有字段冲突
refactoring.introduce.field.context.error=无法替换类和实例上下文中的所有匹配项
refactoring.introduce.field.class.context.error=无法在类上下文中使用 @@ 变量

# override implement
refactoring.override.methods.title=选择要重写的方法
refactoring.implement.java.methods.title=选择实现的方法

# generate
refactoring.generate.methods.writer=为变量生成 attr_writer
refactoring.generate.methods.reader=为变量生成 attr_reader
refactoring.generate.methods.accessor=为变量生成 attr_accessor
refactoring.generate.methods.accessor.cant.find=未找到可为其生成访问器的变量
refactoring.generate.methods.reader.cant.find=未找到可为其生成读取器的变量
refactoring.generate.methods.writer.cant.find=未找到可为其生成写入器的变量

# extract method
refactoring.extract.method.error.method.name.clashes.with.existing.method=方法名称与现有方法名称冲突
refactoring.extract.method.error.cannot.perform.refactoring.no.corresponding.loop.for.break=代码片段内没有用于 break 语句的相应循环
refactoring.extract.method.error.cannot.perform.refactoring.no.corresponding.loop.for.next=代码片段内没有用于 next 语句的相应循环
refactoring.extract.method.error.cannot.perform.refactoring.no.corresponding.loop.for.redo=代码片段内没有用于 redo 语句的相应循环
refactoring.extract.method.error.cannot.perform.refactoring.no.corresponding.context.for.retry=代码片段内没有用于 retry 语句的相应上下文
refactoring.extract.method.error.cannot.perform.refactoring.when.execution.flow.is.interrupted=执行流中断时无法执行重构
refactoring.extract.method.error.cannot.perform.refactoring.when.class.declaration.inside=当类声明位于代码片段中时，无法执行重构
refactoring.extract.method.error.cannot.perform.refactoring.when.module.declaration.inside=当模块声明位于代码片段中时，无法执行重构
refactoring.extract.method.error.cannot.perform.refactoring.when.method.declaration.inside=当方法声明位于代码片段内部时，无法执行重构
refactoring.extract.method.error.cannot.perform.refactoring.using.selected.elements=无法使用所选元素执行提取方法
refactoring.extract.method.error.cannot.perform.refactoring.with.return.statement.inside.and.notempty.output.variables=无法通过内部的 return 语句和代码片段中的局部变量修改来执行重构
refactoring.extract.method.error.cannot.perform.refactoring.from.expression.with.notempty.output.variables=无法通过代码片段内具有局部变量修改的表达式执行重构

rails.refactoring.extract.partial.dialog.title=提取部分
rails.refactoring.extract.partial.action.title=部分…

#rspec let introduction
rspec.refactoring.extract.let.error.cannot.perform.refactoring.using.selected.elements=无法使用选定元素执行提取 RSpec let
rspec.refactoring.extract.let.title=提取 RSpec 'let'
rspec.refactoring.extract.let.error.cannot.perform.refactoring.with.not.in.example.scope=无法在非示例组范围中执行 'introduce RSpec let' 重构
rspec.refactoring.extract.let.error.cannot.perform.refactoring.with.input.variables=无法执行重构。\n\
选定的代码片段中存在输入变量“{0}”。\n\
请将其声明包含在选定的代码片段中，然后重试。
rspec.refactoring.extract.let.error.cannot.perform.refactoring.with.input.variable=无法执行重构。\n\
选定的代码片段中存在输入变量“{0}”。\n\
请将其声明包含在选定的代码片段中，然后重试。
rspec.refactoring.extract.delete.unnecessary.let.calls.command.name=删除不必要的 RSpec let 调用
rspec.refactoring.extract.let.reduced.count.message={0} 个不必要的{1}已被移除

# push down
refactoring.push.down.error.cannot.perform.refactoring.no.child.classes=类 {0} 没有继承者

# extract superbase
refactoring.extract.superbase.name.error={0} 名称应为 Ruby 常量
refactoring.extract.superbase.directory.does.not.exist=目录 {0} 不存在
refactoring.extract.superbase.directory.file.exists=文件{0}已经存在
refactoring.extract.superbase.name.prompt=&{0}的名字\:
refactoring.extract.superbase.from=从以下位置提取 {0}\:
refactoring.extract.superbase.no.members=未选择要构成的成员

# extract module
refactoring.extract.module.action=提取模块(_M)
refactoring.extract.module.command=从 {0} 提取模块
refactoring.extract.module.header=提取模块
refactoring.extract.module.members.to.form.module=用于构成模块的成员(&F)
refactoring.extract.module.directory.for.module=新模块的目录(&D)\:
refactoring.extract.module.context=用于构成模块的上下文\:
refactoring.extract.module.context.static=静态 (extend)(&E)
refactoring.extract.module.context.instance=实例 (include)(&I)

# extract super class
refactoring.extract.superclass.directory.for.class=新类的目录(&D)\:

# extract  class to file
refactoring.move.class.module=将类或模块移到上一级
refactoring.move.class.module.header=将{0}移到上一级
refactoring.move.class.command.name=移动{0},{1}
refactoring.move.class.module.to.file.name.promt=新文件路径(&F)\:
refactoring.move.class.module.command=移动 {0}
refactoring.move.class.module.directory=新{0}的目录(&D)\:
refactoring.move.class.module.name.promt=新{0}名称(&N)\:
refactoring.move.class.module.type=移动 {0}
refactoring.move.class.module.warning.directory=指定的目标目录不存在
refactoring.move.class.module.warning.file.exists=文件已存在
refactoring.move.class.module.members=要重构的成员

#inline local
refactoring.inline.local.multiassignment=定义在链式赋值中

#rename application controller
refactoring.rename.application.controller=无法重命名应用程序控制器

##########################################################################################################################
# Execution
#########################################################################################################################
exception.text.unknown.error=未知错误
command.name.open.error.message.view=打开消息视图
execution.error.title.generators.list={0}\: 获取可用的生成器列表
execution.error.title.rake.tasks={0}\: 获取可用的 Rake 任务
execution.error.title.generate.rails.app=为模块 ''{0}'' 生成 Rails 应用程序
execution.error.title.abstract.script={0}\: 脚本执行错误
execution.disable.spring.notification.content=由于 Spring 挂起，无法加载可用的 Rake 任务。
execution.disable.spring.notification.title=Spring 挂起
execution.disable.spring.notification.action.title=在禁用 Spring 的条件下加载

##########################################################################################################################
# Find usages
#########################################################################################################################
find.usages.search.for.super.title=发现用法
find.usages.search.for.super.message=<html>方法 <b>{0}</b> 重写了来自 <b>{1} {2}</b> 的方法。<br/>是否要改为查找基方法的用法?</html>

find.usages.filteringRule.show.symbols=显示符号/哈希键

find.usages.ruby.method.call=方法调用 
find.usages.ruby.message.send.group=发送消息
find.usages.ruby.declarations.group=声明
find.usages.ruby.namespace.declaration.group=命名空间声明
find.usages.ruby.partial.declarations.group=部分声明
find.usages.ruby.superclass.clause.group=超类子句
find.usages.ruby.alias.occurrence.group=别名
find.usages.ruby.require.load.file.occurrence.group=需要或加载文件
find.usages.ruby.untyped.group=无类型 (潜在) 用法
find.usages.ruby.string.group=字符串文字中的用法
find.usages.ruby.symbol.or.hash.key.group=符号/哈希键
find.usages.ruby.extend.include.prepend.group=extend/include/prepend 调用中的用法
find.usages.ruby.nested.constant.access.group=嵌套常量访问
find.usages.ruby.constant.member.access.group=常量成员访问
find.usages.ruby.rescue.clause.group=rescue 块参数列表
find.usages.ruby.type.check.group=类型检查调用中的用法
find.usages.ruby.defined.statement.group=defined? 语句中的用法
find.usages.ruby.visibility.modifier.gorup=可见性修饰符调用中的用法

find.usages.rails.delegate.group=委托调用中的用法

##########################################################################################################################
# Unwrap
##########################################################################################################################
unwrap.if=解开 if...
unwrap.unless=解开 unless…
unwrap.while=解开 while...
unwrap.until=解开 until…
unwrap.else=解开 else...
remove.else=移除 else...

##########################################################################################################################
# Gem messages
##########################################################################################################################
gem.unknown.version=[未知版本]
gem.not.found.executable.for.gem=Gem ''{0}'' 未安装或其可执行脚本 ''{1}'' 不存在。

error.module.no.content.roots=在模块 ''{0}'' 中未找到内容根。请先设置内容根。
error.module.ror.valid.expected= 应为 Ruby、Rails 或带 JRuby Facet 的 Java 模块，但找到的是 {0}

rails.facet.action.rake.run.error.home.dir.not.found=无法找到正在运行的 Rake 的主目录\: ''{0}''；
sdk.no.specified=未指定 SDK

##########################################################################################################################
# Ruby Unit Test Runner
##########################################################################################################################
ruby.test.runner.sdk.script.not.found=未在带解释器的 Ruby SDK 的 $LOAD_PATH 中找到文件 ''{0}''\: ''{1}''
ruby.test.runner.sdk.gem.lib.not.found=未在带解释器的 Ruby SDK 的 ''test-unit'' gem 中找到 Lib 文件夹\: ''{0}''
ruby.test.runner.sdk.test-unit.gem.not.installed=测试运行程序需要 ''test-unit'' gem，但后者未在 ''{0}'' 中安装
ruby.test.runner.sdk.test-unit.gem.not.attached=测试运行程序需要 ''test-unit'' gem，但后者{0}。
ruby.test.test.name.group.delimiter=在

##########################################################################################################################
# Web Preview
##########################################################################################################################
rails.web.preview.unknown.controller=文件 ''{0}'''' 不是 Rails 视图或相应的 Rails 控制器不存在。
rails.web.preview.unknown.action=无法在 Rails 控制器 ''{1}'' 中找到 ''{0}'' 操作。
rails.web.preview.unsupported.layouts=预览不支持 Rails 布局。
rails.web.preview.unknown.controller.class=类 ''{0}''不是 Rails 控制器。

##########################################################################################################################
# Debugging
##########################################################################################################################
ruby.debugger.smart.step.into.title=单步进入函数
ruby.debugger.line.breakpoint.title=Ruby 行断点
ruby.debugger.exception.breakpoint.title=Ruby 异常断点
ruby.debugger.exception.breakpoint.default.display.text=任何异常
ruby.debugger.exception.breakpoint.display.text=异常 ''{0}''
ruby.debugger.couldnt.evaluate=无法评估\: {0}
ruby.debugger.is.not.ready=调试器未就绪
ruby.debugger.stackframe.not.available=堆栈框架不可用
ruby.debugger.no.stackframes.available=没有可用的堆栈框架
ruby.debugger.global.variables=全局变量
ruby.debugger.local.variables=检查局部变量(&L)
ruby.debugger.cannot.start.debug=无法启动调试器。{0}
ruby.debugger.cannot.find.gem=未找到 Gem“{0}”
ruby.debugger.cannot.connect=无法连接到调试器
ruby.debugger.cannot.connect.timeout=正在使用 {0} 秒超时连接到调试器，请稍候…
ruby.debugger.connecting=连接到调试器
ruby.debugger.choose.exception.class.dialog.title=选择异常类
ruby.debugger.cannot.find.free.port=无法找到空闲端口
ruby.debugger.timeout=调试连接超时
ruby.debugger.timeout.units=秒
ruby.debugger.verbose.output=Verbose 调试器输出
ruby.debugger.key.value.presentation=哈希内容的键/值表示
ruby.debugger.enable.to_s.control=跟踪 `to_s` 求值
ruby.debugger.ignore.non.project=忽略非项目源
ruby.debugger.use.smart.step.into=始终执行智能单步进入
ruby.debugger.step.over.should.go.into.blocks=将块视为方法代码
ruby.debugger.execution.time.limit=时间限制
ruby.debugger.execution.time.limit.units=毫秒
ruby.debugger.execution.memory.limit=内存限制
ruby.debugger.execution.memory.limit.units=Mb
ruby.debugger.disable.spring.for.debug=对调试禁用 Spring
ruby.debugger.attach.to.subprocesses.automatically.text=调试时自动附加到子进程
ruby.debugger.read.frames.of.non.suspended.threads.text=读取非挂起线程的框架（Ruby 2.0 不提供支持）
ruby.debugger.rails.initializer=在 {0} 上调试 Rails 应用程序需要其他初始值设定项
ruby.debugger.rails.initializer.dialog.message={0}\n\
是否要添加?
ruby.debugger.debugger.gem.is.too.old=您的 Gemfile 中有 ''{0}''，但是版本太低。支持的最低版本是 ''{1}''
ruby.debugger.debugger.unlimited.memory.limit=无限额
ruby.debugger.experimental.option=启用实验性调试器
ruby.debugger.cant.step.into=无法单步进入 {0}\:{1} 中的方法，因为它具有 C 级实现

ruby.attach.add.sdk.for.host=配置SDK
ruby.attach.add.sdk.for.host.title=附加

error=错误
expected=应为\: {0}
unexpected=异常\: {0}
or={0} 或 {1}
codeInsight.rails.switch.to.view.error.creating=根据模板创建视图时出错\: {0}

##########################################################################################################################
# Model dependencies diagram
##########################################################################################################################
model.dependency.show.hide.association.fields=显示/隐藏关联字段
model.dependency.show.hide.typical.db.fields=显示/隐藏系统数据库字段 (created__at 等)
model.dependency.show.hide.own.fields=显示/隐藏自有字段
model.dependency.show.hide.migration.fields=显示/隐藏迁移字段
model.dependency.hand.tool=手形工具
model.dependency.building=正在构建模型依赖关系图…
model.dependency.delete.association=删除关联
model.dependency.type.defined=类型必须为 'undefined'
model.dependency.name.valid.identifier=名称应带下划线
model.dependency.add.association=添加关联\: {0} -> {1}
model.dependency.read.only=类 {0} 是只读的
model.dependency.model.structure=模型结构

##########################################################################################################################
# Gem management
##########################################################################################################################
gems.gems=Gem

# ui common for panel and dialog
gems.ui.common.description=描述
gems.ui.common.authors=作者\:
gems.ui.common.email=电子邮件\:
gems.ui.common.homepage=主页\:
gems.ui.common.not.available=不适用
gems.ui.common.gem.root=Gem 根\:
gems.ui.common.description.not.available=说明不可用
gems.ui.common.table.column.name=名称
gems.ui.common.table.column.versions=版本

# add gems dialog
gems.add.dialog.title.install=安装 Gem
gems.add.dialog.title.list=列出 Gem
gems.add.dialog.title.update=更新 Gem
gems.add.dialog.version.to.install=要安装的版本(&V)\:
gems.add.dialog.version.to.update=更新为版本(&V)\:
gems.add.dialog.latest=最新
gems.add.dialog.update=更新
gems.add.dialog.update.all=全部更新
gems.add.dialog.refresh=&刷新
gems.add.dialog.manage.url=管理 gem 存储库(&E)…
gems.add.dialog.autoadd.install=自动安装依赖 gem(&A)
gems.add.dialog.autoadd.update=自动更新依赖 gem(&A)
gems.add.dialog.fetching.description=正在获取说明…
gems.add.dialog.downloaded=正在下载 gem\: {0}
gems.add.dialog.install=安装
gems.add.dialog.default.url=默认 gem url
gems.add.dialog.description.not.available.remote.gem=正在下载说明…
gems.add.dialog.generate.documentation=生成 RDoc 和 ri 文档(&G)
gems.add.dialog.title.quick.install=安装 {0} Gem

# edit gems urls dialog
gems.edit.urls.dialog.title=编辑 Gem 存储库 URL
gems.edit.urls.dialog.add=添加
gems.edit.urls.dialog.remove=移除
gems.edit.urls.dialog.url=URL\:
gems.edit.urls.dialog.error={0} 不是有效的 url

# gems inspection
gems.inspection.unattached.gem=缺少 gem
gems.inspection.gem.not.available=''{0}'' 在 ''{1}'' 中不可用
gems.inspection.gem.no.sdk=''{0}'' 不可用；未设置 SDK
gems.inspection.requirement.not.satisfiable=''{0}'' 的版本要求互相矛盾，无法满足
gems.inspection.gem.not.supported.by.sdk=''{0}'' 不能与 SDK ''{1}'' 一起使用
gems.inspection.gem.with.requirements.not.available=''{0}'' 在具有指定版本要求的 ''{1}'' 中不可用
gems.inspection.try.to.install=安装 ‘’{0}''
gems.inspection.try.to.install.from=从 ''{1}'' 安装 ''{0}''
gems.inspection.remove.version.requirements=移除版本要求
gems.inspection.install.using.bundler=使用 'bundler' 安装缺少的 gem
gems.inspection.git.dependency.not.allowed=Git 依赖项位于 Gemfile 外部

gems.inspection.deprecated.gem=已弃用的 gem
gems.inspection.deprecated.gem.better.use.other.gem=已弃用的 gem，建议替换为 ''{0}''
gems.inspection.deprecated.gem.quick.fix.replace.name=替换为''{0}''
gems.inspection.deprecated.gem.quick.fix.replace.version=更新为 ''{0}''
gems.inspection.deprecated.gem.quick.fix.replace.name.and.version=替换为 ''{0}''，''{1}''
gems.inspection.deprecated.gem.better.use.other.version=gem 版本 {1} 已损坏，建议更新为 ''{0}''
gems.inspection.wrong.ruby.version.description=Gemfile Ruby 版本与 SDK 不匹配
gems.inspection.wrong.ruby.version=您的 Ruby 版本是 ''{0}''，但您的 Gemfile 指定了 ''{1}''
gems.inspection.no.ruby.version.set=未检测到 SDK，但您的 Gemfile 指定了 ''{0}''
gems.inspection.ruby.version.fix=尝试为项目设置 ruby ''{0}''
gems.inspection.ruby.version.fix.family.name=更改 Ruby 版本
gem.inspection.notification.no.matching.sdk=没有与请求的版本匹配的 SDK\: ''{0}''
gem.inspection.notification.no.matching.sdk.body=请单独安装 Gemfile 中指定的 SDK

gems.inspection.minitest.gem='minitest' 依赖项无 'minitest-reporters'
gems.inspection.minitest.gem.reporter.not.installed=<html><body> RubyMine 测试运行程序需要 ''minitest-reporters'' gem({0}) 以便与 MiniTest 框架集成。<br/> 请参阅 <a href\=''https\://www.jetbrains.com/ruby/help/minitest.html''>minitest 集成</a>了解更多信息。</body></html>
gems.inspection.gem.quick.fix.add.name=添加 ''{0}'' 依赖项
gems.inspection.gem.quick.fix.add.name.and.version=添加 ''{0}'' 依赖项，''{1}''

# Gem Manager panel
gems.gem.manager=Gem 管理器
gems.ruby.gem.manager=Ruby Gem 管理器
gems.panel.list.gems=列出 Gem(&G)…
gems.panel.install.gems=安装 Gem(&I)…
gems.panel.update.gems=更新 Gem(&U)…
gems.panel.updating.component.text=(更新中...)

# debug gems
gems.debugger.alert.title=RubyMine 调试器
gems.bundled.jruby.debug.not.found=未找到捆绑的 JRuby 调试 gem
gems.bundled.win32.debug.not.found=未找到捆绑的 Windows 调试 gem
gems.bundled.debug.not.found=未找到捆绑的调试 gem
gems.install.debug.gem=未安装调试 gem。是否要安装?
gems.update.debug.gem=调试 gem 已过期。是否要更新?
gems.debugger.in.gemfile=<html><body>您的 Gemfile 中似乎有 ''{0}'' gem。这可能会在调试过程中导致一些问题。<br/>确定要继续吗?<br/>如果否，请查看<a href\="https\://www.jetbrains.com/ruby/help/debugging.html">帮助主题</a>。</body></html>

# gem command
gems.gem.listing.remote=正在列出远程 gem…
gems.gem.listing.remote.url=正在列出远程 gem\: {0}…
gems.gem.running.command=运行 gem 命令\: {0}
gems.running.command.error=运行 gem {0} 命令时出错
gems.gem.running.remote.error.message=无法运行远程命令\: {0}
gems.gem.installing=正在安装 gem…
gems.gem.installing.gem=安装 gem {0}
gems.gem.not.found=未找到 {0} gem。\n\
请检查代理设置和 gem url
gems.gem.installing.failed=安装 Gem 失败
gems.gem.installing.failed.no.sdk=无法安装 gem\: 未指定 SDK
gems.gem.installing.failed.list=未安装以下 gem\:
gems.checking.version=正在检查 rubygems 版本…
gems.reading.environment=正在加载 {0} 的 gem 环境
gems.downloading.gems.list.title=正在下载 ''{0}'' Gem 列表…
gems.install.search.progress.indicator.text=正在搜索 gem 存储库…

gems.running.command.gem.environment.title=正在运行 'gem environment' 命令…
gems.running.command.gem.environment.dialog.title=RubyGems 环境
gems.running.command.gem.environment.dialog.error.message=运行 'gem environment' 时出错
command.run.configuration.display.name=Gem 命令
command.run.configuration.description=gem 命令配置
command.run.configuration.editor.gem.component.text=Gem 名称
command.run.configuration.editor.gem.command.component.text=Gem 命令名称
command.run.configuration.editor.gem.command.arguments.component.text=参数
command.run.configuration.editor.gem.command.exec.name.text=可执行文件名称
command.run.configuration.editor.gem.name.component.text=Gem 名称

# requirements
gems.requirements.missing=''{0}'' 需要的一些 gem 未安装。<a href\="create">安装缺少的 gem</a>
gems.scanning.title=正在 ''{0}'' 中扫描 Gem 要求

# quick install gem action
gems.quick.additional.params=附加命令行参数(&C)\:

# miscellaneous
gems.version.not.detected=无法检测到 RubyGems 版本
gems.not.installed.for.sdk=没有为 SDK安装 RubyGems\: {0}。<br>\n\
请下载并安装 <a href\="https\://rubygems.org/">rubygems</a>
gems.rails.not.fully.supported=不完全支持此版本
gems.rails.engine.not.supported=生成可安装引擎需要使用 Rails 3.1
gems.rails.sdk.not.supported=Rails 3.0 要求 Ruby >\= 1.8.7 SDK
gems.no.rails.gem=选择版本
gems.install.rails.gem=安装 rails gem…
gems.not.activated=未激活
gems.not.activated.bundler=不是捆绑包的一部分
gems.directory.excluded.title=已排除自定义 gem 目录
gems.directory.excluded.message=已自动排除目录 (''{0}'')

#Rename models
rails.run.migration.title="已生成迁移"
rails.run.migration.message=<html><body> <font size\="3"><a href\="create">运行迁移</a><br> </body></html>
##########################################################################################################################
# Ruby Sdk configuration
##########################################################################################################################
ruby.ide.sdk.configurable.name=Ruby SDK 和 Gems
ruby.ide.sdk.configurable.add.sdk=添加 SDK(&A)...
ruby.ide.sdk.configurable.new.local=新建本地…
ruby.ide.sdk.configurable.new.remote=新建远程…
ruby.ide.sdk.configurable.new.rvm.gemset=新建 RVM gemset...
ruby.ide.sdk.configurable.new.local.version.manager=新建本地版本管理器…
ruby.ide.sdk.configurable.no.module.sdk.marked=没有为 $IDE_DEPENDENT_MODULE$ ''{0}'' 配置 Ruby 解释器
ruby.ide.sdk.configurable.no.sdk.found=未找到 Ruby SDK。请参阅
ruby.ide.sdk.configurable.no.sdk.found.topic=设置 Ruby 开发环境
ruby.ide.sdk.configurable.no.default.project.sdk.marked=没有为默认项目配置 Ruby 解释器
ruby.ide.sdk.configurable.errors.text=请解决错误\:\n\
 {0}
ruby.ide.sdk.language.level=语言级别(&L)\: 
ruby.ide.sdk.configurable.show.gem.path.title=显示 Gem 路径
ruby.ide.sdk.configurable.synchronize.gems.title=同步 gem 和 RubyMine 帮助程序文件
ruby.ide.sdk.configurable.show.gem.description.title=显示 Gem 说明
ruby.ide.sdk.configurable.select.language.level.action.text=选择语言级别
ruby.ide.sdk.configurable.select.language.level.title=语言级别
ruby.ide.sdk.configurable.create.rvm.gemset.sdk.label=Ruby SDK(&S)\:
ruby.ide.sdk.configurable.create.rvm.gemset.dialog.title=创建新的 RVM gemset
ruby.ide.sdk.configurable.create.rvm.gemset.text.edit=RVM Gemset(&G)\:
ruby.ide.sdk.configurable.create.rvm.gemset.validation.failed=RVM gemset 名称无效。必须匹配 [A-Za-z0-9._-]+   
ruby.ide.sdk.configurable.create.rvm.gemset.no.sdk=未选择 SDK
ruby.ide.sdk.configurable.create.rvm.gemset.already.exists=Gemset ''{0}'' 在 SDK ''{1}'' 中已存在
ruby.ide.sdk.configurable.create.sdk.existing.title=存在 SDK
ruby.ide.sdk.configurable.create.sdk.existing=SDK ''{0}'' 已在列表中。请尝试其他路径。
ruby.ide.sdk.configurable.create.remote.host.warning=缺少 Remote Hosts Access 插件。请在“''{0}'' | 插件”中启用此插件。
ruby.ide.sdk.configurable.create.remote.host.warning.title=添加远程解释器
ruby.ide.sdk.init.gem.tree.updating.text=(更新中...)
ruby.ide.sdk.patcher.refresh.gem.paths.title=正在刷新 Gem 路径
ruby.ide.sdk.type.home.chooser.descriptor.title=选择 Ruby 解释器路径
ruby.ide.sdk.type.home.field.label=Ruby 解释器路径\:
ruby.ide.sdk.init.progress.title=正在初始化 SDK {0}

ruby.rbenv.gemset.name=Rbenv gemset
ruby.rbenv.gemsets.inspection.name=缺少 gemset
ruby.rbenv.gemset.inspection.creating=创建 gemset ''{0}''
ruby.rbenv.gemset.inspection.fix.name=创建''{0}''
ruby.rbenv.gemset.inspection.fix.text=无法在 ''{1}'' 中找到 ''{0}''
ruby.rbenv.local.gemset.inspection.fix.text=''{0}'' 未从项目文件中排除
ruby.rbenv.local.gemset.inspection.fix.name=排除 ''{0}''，并将其 gem 添加为库
ruby.rbenv.local.gemset.inspection.fix.family.name=排除 gemset 并将其 gem 添加为库
ruby.rbenv.local.gemset.create.inspection.fix.text=无法找到 ''{0}''
ruby.rbenv.local.gemset.create.inspection.fix.name=创建''{0}''
ruby.rbenv.gemset.refresh.libs.text='.rbenv-gemsets' 已更改
ruby.rbenv.gemset.refresh.libs.inspection.fix.name=更新库
ruby.rbenv.gemset.config.parser.unexpected.token.error.message=异常的标记

rbenv.filetype.description=Rbenv gemset 配置

ruby.action.create.new.class.text=Ruby 文件/类
ruby.action.create.new.class.description=创建新的 Ruby 文件/类
ruby.action.create.new.class.dialog.title=新建 Ruby 文件/类
ruby.action.create.new.class.dialog.wrong.name=名称应为有效的限定常量
ruby.action.create.new.class.name=创建 Ruby 文件/类 {0}
ruby.action.create.new.class.fix.name=创建新的 Ruby 类
ruby.action.create.new.class.fix.as.inner.name=在当前文件中创建新的 Ruby 类
ruby.action.create.new.class.familyName=创建 Ruby 类
ruby.action.create.new.class.action.name=创建类 ''{0}''

ruby.action.create.new.method.fix.name=创建方法 ''{0}''
ruby.action.create.new.method.fix.familyName=创建方法

ruby.action.create.new.test.text=Ruby 测试
ruby.action.create.new.test.description=根据模板创建新的 Ruby 测试
ruby.action.create.new.test.dialog.title=新建 Ruby 测试
ruby.action.create.new.test.dialog.kind.miniTest=MiniTest
ruby.action.create.new.test.dialog.kind.miniTestSpec=MiniTest 规范
ruby.action.create.new.test.dialog.kind.rspec=RSpec
ruby.action.create.new.test.dialog.kind.testUnit=Test\:\:Unit
ruby.action.create.new.test.name=创建 Ruby 测试 {0}

ruby.action.create.named.file.fix.name=创建 {0} 文件 ''{1}''
ruby.action.create.named.file.fix.familyName=创建 {0} 文件
ruby.action.create.named.file.fix.message=输入要创建的文件的名称\:
ruby.action.create.named.file.fix.title=创建 {0}

ruby.test.creator.dialog.title=在 {0} 中新建测试
ruby.test.creator.dialog.kind.noTemplate=无模板
ruby.test.creator.dialog.directory.not.in.project=''{0}'' 不在项目中

ruby.erb.action.create.new.file.text=ERB 文件
ruby.erb.action.create.new.file.description=创建新的 ERB 文件
ruby.erb.action.create.new.file.dialog.title=新建 ERB 文件
ruby.erb.action.create.new.file.name=创建 ERB 文件 {0}

##########################################################################################################################
# Ruby code style page
##########################################################################################################################
ruby.code.style.align.multiline.parameters=对齐多行列表项
ruby.code.style.align.right.parts.of.assignments.or.hashes=对齐右侧部分
ruby.code.style.align.right.parts.of.assignments.or.hashes.group=赋值和哈希
ruby.code.style.list.items.group=列表项
ruby.code.style.indent.when.cases=遇到 case 时缩进
ruby.code.style.blank.lines.around.methods=在方法周围使用空行
ruby.code.style.spaces.around.braces=哈希中的大括号
ruby.code.style.spaces.around.braces.blocks=块中的大括号
ruby.code.style.spaces.around.arrows=哈希火箭
ruby.code.style.spaces.around.operators.range=范围运算符
ruby.code.style.spaces.around.operators.assign=赋值操作符
ruby.code.style.spaces.around.operators.relational=关系运算符
ruby.code.style.spaces.around.operators.other=其他运算符
ruby.code.style.force.newlines.around.visibility.modifiers=在可见性修饰符周围强制使用新行
ruby.code.style.indent.after=缩进访问修饰符后面的方法：
ruby.code.style.indent.private=private
ruby.code.style.indent.protected=protected
ruby.code.style.indent.public=public
ruby.code.style.convert.brace.block.by.enter=按 Enter 将 {} 块转换为 do..end
ruby.code.style.chain.methods.alignment=对齐
ruby.code.style.chain.methods.alignment.none=无
ruby.code.style.chain.methods.alignment.receiver=初始接收器
ruby.code.style.chain.methods.alignment.dot=前导点
ruby.code.style.empty.declarations.style.label=空声明
ruby.code.style.empty.declarations.style.asis=保留原样
ruby.code.style.empty.declarations.style.single=单行
ruby.code.style.empty.declarations.style.multi=多行

##########################################################################################################################
# Live Templates
##########################################################################################################################
live.templates.context.erb.name=ERB
live.templates.context.generic.name=Ruby
live.templates.context.ruby.code.name=Ruby 代码
live.templates.context.ruby.string.name=Ruby 字符串
live.templates.context.ruby.comments.name=Ruby 注释

##########################################################################################################################
# Rails I18n
##########################################################################################################################
rails.i18n.property.key=属性
rails.i18n.presentable.name.default=未知

inspection.rails.i18n.name=I18n 属性缺少翻译
inspection.rails.i18n.translate.call.wrong.arguments='translate' 调用至少应有一个参数
inspection.rails.i18n.key.not.found=未找到 ''{0}'' 的翻译
inspection.rails.i18n.key.not.defined=''{0}'' 缺少一些翻译
inspection.rails.i18n.create.property=创建属性

dialog.rails.i18n.create.property.title=创建属性
dialog.rails.i18n.create.property.info=属性信息
dialog.rails.i18n.create.property.key=键\:
dialog.rails.i18n.create.property.variables=变量\:
dialog.rails.i18n.create.property.locale=区域设置
dialog.rails.i18n.create.property.locale.example=拉丁语 [la.yml]
dialog.rails.i18n.create.property.translation=翻译
dialog.rails.i18n.create.property.translation.example=Lorem ipsum dolor sit amet, consectetur adipiscing elit.
dialog.rails.i18n.create.property.no.translations=未添加翻译
dialog.rails.i18n.create.property.select.locale=选择区域设置
dialog.rails.i18n.create.property.locale.contains.key=键 ''{0}'' 的翻译已在区域设置 ''{1}'' 中定义

annotator.rails.i18n.locale.file.name=区域设置文件名应包含 ''{0}''
annotator.rails.i18n.locale.file.no.root=区域设置文件应具有根键
annotator.rails.i18n.locale.file.multiple.roots=区域设置文件应只有一个根键
annotator.rails.i18n.locale.missing.locale.entry=无法找到主区域设置条目

refactoring.rename.rails.i18n.conflict.duplicate.property.key=属性 ''{0}'' 已存在

doc.rails.i18n.available.translations=可用翻译

new.name.conflicts.with=键与现有键冲突\: ''{0}''

i18n.index.truncated.suffix=<文本已截断>

##########################################################################################################################
# RVM
##########################################################################################################################
rvm.ruby.ide.sdk.gemset=RVM gemset\:
rvm.sdk.ignore.global.gempath=忽略全局 gempath(&G)
rvm.rvmrc.project.notifications.title=项目 {0} 设置
rvm.rvmrc.project.sdk.changed.message=根据 <b>{0}</b> 项目 {1} 文件，Ruby SDK 已被更改<br>为 <b>{2}</b>"
rvm.rvmrc.project.cannot.find.sdk.message=无法切换 SDK。未找到 RVM SDK ''<b>{0}</b>''。
rvm.rvmrc.project.cannot.find.gemset.for.sdk.message=无法切换 SDK。没有为 ''<b>{1}</b>'' RVM SDK 定义 Gemset ''<b>{0}</b>''，或未在 {2} 中配置此类 SDK 。
ruby.sdk.scanning=正在扫描 Ruby 解释器…

##########################################################################################################################
# Bundler
##########################################################################################################################
bundler.cmd.options.dialog.additional.cmdline.parameters=''bundle {0}'' 的可选参数
bundler.cmd.options.dialog.edit.title=编辑 ''bundle {0}'' 参数
bundler.cmd.options.dialog.title=捆绑 {0}
bundler.cmd.options.dialog.title.ex=为 {1} 捆绑 {0}
bundler.notification.group=Bundler 集成
bundler.notification.error.title=无法启动 Bundler
bundler.notification.error.message=无法找到 Bundler 脚本，请参阅日志了解更多详细信息。
bundler.action.no.sdk.title=无法执行 Bundler 操作
bundler.action.no.sdk.message=没有为当前项目选择 SDK
bundler.console.gem.not.found.title=Bundler\: 未找到 Gem
bundler.action.update.old.bundler=安装
bundler.action.update.failed=更新 Bundler 时出错
bundler.action.cancel=取消
bundler.action.run=运行
bundler.action.continue=无论如何都继续
bundler.action.dialog.old.version=您的 Gemfile.lock 需要 Bundler {0}。是否要安装?
bundler.console.gem.not.found.description=尝试<a href\="bundle_install">捆绑包安装</a>
bundler.gem.not.found.install.missing.dialog.title=未找到 Bundler Gem
bundler.gem.not.found.install.missing.dialog.message=未找到 Bundler Gem，但存在 Gemfile。 \n\
是否要安装 Bundler 并使用它来安装缺少的 gem?

##########################################################################################################################
# Warbler
##########################################################################################################################
warbler.dialog.caption=Warble
warbler.dialog.error.title=Warbler 的错误
warbler.dialog.title=构建 .WAR 文件
warbler.dialog.toggle.web.inf.config=WEB-INF 配置
warbler.dialog.feature.executable=可执行文件(&X)
warbler.dialog.feature.precompiled=已预编译(&P)
warbler.dialog.feature.gemJar=包括 gem 存储库(&G)
warbler.dialog.label.outputFileName=输出文件名(&F)\:
warbler.dialog.mode.trace=开启 invoke/execute 跟踪，启用完整回溯(&T)
warbler.config.patching.error=无法更改 Warbler 配置文件。%s
warbler.validation.error.fileName=输出文件名不正确
warbler.validation.error.jruby.sdk.not.found=SDK 不正确\! 应为 JRuby SDK
warbler.validation.error.jruby.sdk.not.found.fix.title=配置SDK
warbler.validation.error.rails.not.found=未找到 Rails gem
warbler.validation.error.rails.not.found.fix.title=安装 Rails
warbler.validation.error.warbler.not.found=未找到 Warbler gem
warbler.validation.error.warbler.not.found.fix.title=安装 Warbler
warbler.error.cant.write.to.config=无法写入 config/warble.rb 文件
warbler.error.rails.directory.missed=Rails 配置目录不存在

##########################################################################################################################
# Test Frameworks Names
##########################################################################################################################
test.frameworks.names.testunit=Test\:\:Unit
test.frameworks.names.shoulda=Shoulda
test.frameworks.names.rspec=RSpec
test.frameworks.names.cucumber=Cucumber

##########################################################################################################################
# Features Statistics
##########################################################################################################################
ruby.navigation.rails.popup=转到 rails…
ruby.tools.rails.generators.popup=运行 Rails 生成器...
ruby.tools.rake.popup=运行 Rake 任务...
rails.assets.scan.paths=扫描 Rails 资产路径注册
rails.assets.scan.paths.for=扫描 ''{0}'' 的 Rails 资产路径注册
ruby.rubocop.check.background=Rubocop\: 后台文件检查
ruby.rubocop.check.manual=Rubocop\: 手动文件检查

actions.types.ruby.script.errors.no.module.in.context.rubymine=无法根据操作上下文确定当前项目
actions.types.ruby.script.errors.no.module.in.context.ruby.plugin=无法在操作上下文中找到具有 Ruby 支持的模块
actions.types.ruby.script.errors.no.sdk.in.context.rubymine=项目 Ruby SDK 未配置或无效。是否立即配置?
actions.types.ruby.script.errors.no.sdk.in.context.ruby.plugin=模块 (或 ruby facet) Ruby SDK 未配置或无效。是否立即配置?
actions.types.ruby.script.errors.execution.error.title=执行错误

#Rails destroy components
destroy.dialog.message=销毁或删除 {0}
destroy.dialog.title=销毁或删除 {0}
destroy.dialog.button=销毁

#refactorings
refactoring.inlineVariable=内联变量重构
refactoring.inlineMethod=内联方法重构
refactoring.inlineMethod.libraries.error.message=无法使用库中的方法执行重构
refactoring.inlineMethod.constructor.error.message=无法使用构造函数执行重构
refactoring.inlineMethod.block.parameter.error.message=无法使用具有块参数的方法执行重构
refactoring.introduceField=提取字段重构
refactoring.introduceParameter=提取参数重构
refactoring.introduceConstant=提取常量重构
refactoring.extractMethod=提取方法重构

##########################################################################################################################
# Diagrams
##########################################################################################################################
diagrams.rails.add.new.model=将模型添加到关系图
diagrams.rails.presentable.name=Rails 模型依赖关系图
diagrams.rails.go.to.model=输入模型名称\:
diagrams.rails.generate.new.model=生成新的 ActiveRecord 模型
diagrams.rails.activerecord.model=ActiveRecord 模型
diagrams.gems.presentable.name=Gem 依赖关系图
diagrams.gems.action.name=Gem 依赖关系图

# remote interpreter
remote.interpreter.configure.title=配置远程 Ruby 解释器
remote.interpreter.configure.path.title=选择 Ruby 解释器
remote.interpreter.configure.temp.files.path.title=为 Ruby 帮助程序选择文件夹
remote.interpreter.default.interpreter.path=/usr/bin/ruby
remote.interpreter.docker.default.interpreter.path=ruby
remote.interpreter.unspecified.interpreter.path=指定 Ruby 解释器路径
remote.interpreter.wrong.interpreter.path=所选文件不是{0}的有效主路径
remote.interpreter.invalid.chars.in.interpreter.path=所选文件名包含无效的字符 ({})
remote.interpreter.unspecified.temp.files.path=为 Ruby 帮助程序指定路径
remote.interpreter.configure.path.label=Ruby 或版本管理器路径(&R)\:
remote.interpreter.configure.temp.files.path.label=Ruby 帮助程序路径\:
remote.interpreter.entity.name=Ruby
ruby.fetching.version=正在获取版本字符串
remote.interpreter.creating=创建 Ruby SDK
remote.interpreter.already.existing=已经有相同的解释器\:\n\
{0}
remote.interpreter.cannot.find.interpreter.path=无法按照提供的解释器路径找到 ruby
remote.find.available.ports.title=正在搜索可用端口
remote.action.edit.path.mappings.text=编辑路径映射

downloading.gems.title=正在下载 Gem
downloading.gems.failed.to.create.directory=无法创建 gem 目录 {0}
downloading.gems.failed.copy=复制 Gem 时出错
downloading.gems.canceled=已取消 Gem 复制
upload.helpers=正在上传 Rubymine 帮助程序…

exportable.RubyEditorOptions.presentable.name=Ruby 编辑器
exportable.RubyI18nFoldingSettings.presentable.name=代码折叠设置

erb.title=ERB
rails.app.github.label=RailsApps 示例(&S)\:

#ActionCable
rails.action.cable=Action Cable
rails.action.cable.channel=通道
rails.action.cable.channel.client=通道客户端
rails.action.cable.undefined.channel.inspection.name=未定义通道
rails.action.cable.undefined.channel.inspection.qfix.name=创建通道
rails.action.cable.undefined.channel.inspection.text=未定义通道
rails.action.cable.client.gutter.title=Action cable 客户端
rails.action.cable.client.gutter.tooltip.text=“{0}”类
rails.action.cable.client.action.gutter.tooltip.text=“{0}”操作
rails.action.cable.switch.to.client.title=转到通道客户端
rails.action.cable.switch.to.client.create.prompt=未找到通道客户端。输入要创建的文件的名称\:
rails.action.cable.gutter.tooltip.text=“{0}”客户端
rails.action.cable.gutter.title=Action cable
rails.action.cable.action.gutter.tooltip.text=“{0}”操作调用
rails.action.cable.choose.client.text=选择客户端
rails.action.cable.choose.action.call.text=选择操作调用

#line markers gutters
rails.line.marker.gutter.action.to.view.title=Rails 视图
rails.line.marker.gutter.view.to.action.title=Rails 操作
remote.interpreter.wsl.default.interpreter.path=/usr/bin/ruby

# module manager notification
module.manager.notification.group=Ruby 模块管理器
module.manager.notification.title=在项目中找到 Gemfile
module.manager.notification.text=可以为每个 Gemfile 创建 $IDE_DEPENDENT_MODULE_CAPITALIZED$。
module.manager.notification.dont.show=不再询问
module.manager.dialog.title=Gemfile 未与找到的任何 $IDE_DEPENDENT_MODULE$ 关联
module.manager.dialog.text=为 Gemfile 创建 $IDE_DEPENDENT_MODULE$\:
module.manager.dialog.create=为新 Gemfile 创建 $IDE_DEPENDENT_MODULE$
module.manager.option.auto.create=自动为 Gemfile 创建 ruby $IDE_DEPENDENT_MODULE$
module.manager.option.show.notifications=针对没有 $IDE_DEPENDENT_MODULE$ 的新 Gemfile 发出通知
module.manager.mark.directory.title=Ruby $IDE_DEPENDENT_MODULE_CAPITALIZED$ 根
module.manager.unmark.directory.title=取消标记为 Ruby $IDE_DEPENDENT_MODULE_CAPITALIZED$ 根

module.manager.option.name=自动为 Gemfile 创建 ruby $IDE_DEPENDENT_MODULE$
module.manager.option.use.idea=将嵌套的 Ruby $IDE_DEPENDENT_MODULE$ 的 *.iml 文件放入其中

run.anything.custom.activity.sdk.message=已选择 Sdk ''{0}''
run.anything.custom.activity.sdk.title=Sdk 已更改
run.anything.custom.activity.no.sdk=未选择 Sdk

run.anything.rvm.sdk=在当前项目中选择 rvm sdk[@gemset]
run.anything.rvm.use.group.title=rvm 使用
run.anything.rvm.use.undefined=<未定义>

run.anything.select.rbenv.shell.help.description=选择 <版本> 版的 rbenv sdk
run.anything.select.rbenv.shell.completion.group=rbenv shell

run.anything.ruby.help.group.title=ruby
run.anything.rspec.help.description=rspec <spec_name.rb> --示例 <名称>

run.anything.bundler.title=Bundler

run.anything.rails.generators.group.title=Rails 生成器

run.anything.rake.help.group.title=Rake 任务

#Ruby editor actions
editor.expressionTypeProvider.unknownType=未知
editor.expressionTypeProvider.errorHint=未找到表达式
ruby.make.brace.block=生成 {} 块
run.anything.sdk.notification.warning.content=已选择目标 sdk
run.anything.sdk.notification.warning.title=选择 Sdk
version.manager.rbenv.fetching.root=正在获取 rbenv 根
version.manager.rvm.fetching.environment=正在获取 rvm 环境
version.manager.refreshing.sdks=正在刷新 Sdk
version.manager.fetching.distributions.list=正在获取分发列表
version.manager.computing.interpreter.path=正在计算解释器路径
version.manager.error.fetching.distributions.list=获取已安装 ruby 列表时出错
version.manager.unable.to.find.executable=无法找到 {0} 的 ruby 可执行文件
version.manager.unable.to.get.environment=获取 {0} 的环境时出错\: {1}
version.manager.you.should.choose=您应该选择一个分发
version.manager.no.rubies.installed=未安装 ruby
version.manager.select.distribution=选择分发
version.manager.detection.path=正在确定 {0} 可执行文件的路径
version.manager.detection.dialog.title={0} 可执行文件的路径
version.manager.detection.dialog.message=自 2018 年 2 月起，必须有 {0} 可执行文件的路径才能运行脚本。\n\
我们无法使用 `which {0}` 命令针对以下项自动检测此路径\:\n\
{1}\n\
请手动指定 {0} 可执行文件的路径\:
version.manager.detection.not.found=无法找到 {0} 可执行文件
stub.builder.service.updating.stubs=正在更新原生扩展的存根
stub.builder.service.generating.stubs=正在生成 gem 的存根\: {0}
run.without.parent.environment.id=在无父环境的条件下执行 Ruby
run.without.parent.environment.title=在禁用父环境的条件下执行
run.without.parent.environment.text=自 2018 年 2 月起使用空环境 (<nobr><code>env -i</code></nobr>)，可能无法按预期运行，或者根本无法运行。
run.without.parent.environment.action.enable=为此运行配置启用 (需要重新启动)

completion.preselect.first.element=预先选择第一个补全元素
rbconfig.fetching.progress=正在加载 {0} 的 RbConfig…
ruby.smartkeys.option.interpolation=在字符串中的 \# 处启动 ruby 插值
ruby.smartkeys.option.prolong.comment=按回车后继续输入注释
sdk.searching.for=正在搜索 ''{0}''

ruby.rails.gotoRelated.application.title=应用程序
ruby.rails.gotoRelated.model.group=模型
ruby.rails.gotoRelated.controller.group=控制器
ruby.rails.gotoRelated.mailer.group=Mailer
ruby.rails.gotoRelated.helper.group=帮助程序
ruby.rails.gotoRelated.view.group=视图
ruby.rails.gotoRelated.views.group=视图
ruby.rails.gotoRelated.layout.group=布局
ruby.rails.gotoRelated.layouts.group=布局
ruby.rails.gotoRelated.schema.group=架构

ruby.presentation.invalid=<无效>
ruby.presentation.unknown=<未知>

editor.empty.text.painter.advertise.action.project.view=项目视图
editor.empty.text.painter.advertise.action.go.to.file=转到文件
editor.empty.text.painter.advertise.action.recent.files=最近的文件
editor.empty.text.painter.advertise.action.navigation.bar=导航栏
editor.empty.text.painter.advertise.action.run.anything=运行一切

# Factory Bot
ruby.factoryBot.usage.type.partial.declaration.name=部分声明
ruby.factoryBot.usage.type.build.strategy.name=构建策略中的用法
ruby.factoryBot.usage.type.definition.name=工厂/特征定义中的用法
ruby.factoryBot.usage.type.inheritance.name=父选项中的用法

ruby.factoryBot.findUsages.search.for.original.title=发现用法
ruby.factoryBot.findUsages.search.for.original.message={0} ''{2}'' 是 ''{3}'' 的别名。\n\
\n\
是否要查找原始 {1} 的用法?

ruby.factoryBot.gotoRelated.factories.title=工厂

ruby.factoryBot.lineMarker.overridden.factory.name=FactoryBot 部分声明
ruby.factoryBot.lineMarker.overridden.factory.title=选择部分声明
ruby.factoryBot.lineMarker.overridden.factory.findUsages.title=\ {0} 的部分声明

ruby.factoryBot.lineMarker.implicit.references.name=FactoryBot 隐式引用
ruby.factoryBot.lineMarker.implicit.references.tooltip.title=隐式引用 {0}

ruby.factoryBot.paramDefs.attributeRef.invalid.reference=应为字段读取器
ruby.factoryBot.paramDefs.factoryRef.invalid.reference=应为工厂名称
ruby.factoryBot.paramDefs.traitRef.invalid.reference=应为特征名称

ruby.factoryBot.presentation.factory.type=工厂
ruby.factoryBot.presentation.factoryOrTrait.type=工厂/特征
ruby.factoryBot.presentation.sequence.type=序列
ruby.factoryBot.presentation.trait.type=特征

ruby.factoryBot.rename.factory.conflict=工厂 ''{0}'' 已存在
ruby.factoryBot.rename.sequence.collision={0} ''{1}'' 中的字段读取器隐式引用旧名称
ruby.factoryBot.rename.sequence.conflict=序列 ''{0}'' 已存在
ruby.factoryBot.rename.trait.conflict=特征 ''{0}'' 已存在

# Rails ActiveRecord

rails.activeRecord.presentation.association.type=关联
rails.activeRecord.presentation.attribute.type=属性
rails.activeRecord.presentation.enum.type=枚举
rails.activeRecord.presentation.scope.type=范围

action.rspec.LetIntroduce.text=RSpec 'let'
action.UnmarkLoadPathRoot.text=取消标记加载路径根目录
action.MarkLoadPathRoot.text=加载路径根目录
action.RUBY_GEN_DICT.text=生成 Ruby 拼写检查器字典
action.RUBY_GEN_DICT.description=为当前 Ruby Sdk 和附加的 Gem 生成拼写检查器字典
action.GemRequirements.Attach.text=为要求添加 Gem
action.org.jetbrains.plugins.ruby.rails.console.ReloadSources.text=重新加载源
action.org.jetbrains.plugins.ruby.rails.console.ReloadSources.description=在 Rails 控制台中动态重新加载 Ruby 脚本
action.Rails.RunGenerator.text=Rails 生成器
action.Rails.RunGenerator.description=允许快速启动 Rails 生成器
action.org.jetbrains.plugins.ruby.jruby.warbler.actions.WarblerAction.text=构建 .WAR 文件...
action.org.jetbrains.plugins.ruby.jruby.warbler.actions.WarblerAction.description=运行 warbler 以生成 .war 文件
action.org.jetbrains.plugins.ruby.rails.preload.zeus.RunZeusAction.text=运行 Zeus 服务器...
action.org.jetbrains.plugins.ruby.rails.preload.zeus.RunZeusAction.description=运行 Zeus 服务器
action.org.jetbrains.plugins.ruby.rails.spork.RunSporkServerScriptAction.text=运行 Spork DRb 服务器...
action.org.jetbrains.plugins.ruby.rails.spork.RunSporkServerScriptAction.description=运行 spork DRB 服务器以加快测试执行
action.org.jetbrains.plugins.ruby.rails.actions.execution.RunRailsScriptAction.text=运行 Rails 脚本...
action.org.jetbrains.plugins.ruby.rails.actions.execution.RunRailsScriptAction.description=运行 ./script 文件夹中的脚本
action.org.jetbrains.plugins.ruby.rails.console.RunRailsConsoleAction.text=运行 Rails 控制台...
action.org.jetbrains.plugins.ruby.rails.console.RunRailsConsoleAction.description=允许快速运行 Rails 控制台
action.org.jetbrains.plugins.ruby.rails.actions.generators.GeneratorsPopupAction.text=运行 Rails 生成器...
action.org.jetbrains.plugins.ruby.rails.actions.generators.GeneratorsPopupAction.description=允许快速启动 Rails 生成器
group.ROR_TOOLS.text=Ruby on Rails
action.org.jetbrains.plugins.ruby.tasks.capistrano.actions.CapistranoTaskPopupAction.text=运行 Capistrano 任务
action.org.jetbrains.plugins.ruby.tasks.capistrano.actions.CapistranoTaskPopupAction.description=运行 Capistrano 任务
action.org.jetbrains.plugins.ruby.tasks.capistrano.actions.CapifyAction.text=Capify 应用程序
action.org.jetbrains.plugins.ruby.tasks.capistrano.actions.CapifyAction.description=Capifies Rails 应用程序
group.CAPISTRANO_TOOLS.text=Capistrano
action.org.jetbrains.plugins.ruby.rails.actions.generators.ReloadGeneratorsAction.text=重新加载生成器
action.org.jetbrains.plugins.ruby.rails.actions.generators.ReloadGeneratorsAction.description=重新加载可用生成器列表
action.org.jetbrains.plugins.ruby.rails.actions.rake.ReloadRakeTasksAction.text=重新加载 Rake 任务
action.org.jetbrains.plugins.ruby.rails.actions.rake.ReloadRakeTasksAction.description=重新加载可用 rake 任务列表
group.RAKE_GROUP.text=Rake 任务
action.org.jetbrains.plugins.ruby.tasks.rake.actions.RakeTasksPopupAction.text=运行 Rake 任务...
action.org.jetbrains.plugins.ruby.tasks.rake.actions.RakeTasksPopupAction.description=允许快速执行 Rake 任务
group.RAKE_TOOLS.text=Rake
action.org.jetbrains.plugins.ruby.gem.util.ShowGemEnvironmentAction.text=显示 Gem 环境 (&H)
action.org.jetbrains.plugins.ruby.gem.util.ShowGemEnvironmentAction.description=显示有关当前 SDK 的 RubyGems 环境的信息
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerOutdatedAction.text=过时 (&T)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerOutdatedAction.description=显示使用 'bundler' gem 的 gem 清单中所有过时的 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerLockAction.text=&锁
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerLockAction.description=锁定使用 'bundler' gem 的 gem 清单中声明的 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerPackAction.text=包 (&P)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerPackAction.description=将使用 'bundler' gem的 gem 清单中声明的 .gem 文件复制到供应商/缓存中
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerGemAction.text=创建 gem (&G)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerGemAction.description=使用 'bundler' gem 创建适合使用 bundler 开发的简单 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerInitAction.text=初始化 (&N)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerInitAction.description=使用 'bundler' gem 创建 gemfile
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerCleanAction.text=&清除
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerCleanAction.description=清理 bundler 目录中未使用的 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerUpdateAction.text=更新 (&U)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerUpdateAction.description=使用 'bundler' gem 更新 gem 清单中声明的 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerInstallAction.text=&安装
action.org.jetbrains.plugins.ruby.gem.bundler.actions.RunBundlerInstallAction.description=使用 'bundler' gem 安装 gem 清单中声明的 gem
action.org.jetbrains.plugins.ruby.gem.bundler.actions.InstallBundlerAction.text=安装 Bundler (&I)
action.org.jetbrains.plugins.ruby.gem.bundler.actions.InstallBundlerAction.description=将 'bundler' gem 安装到当前 Sdk
group.BUNDLER_ACTIONS.text=&Bundler
action.org.jetbrains.plugins.ruby.gem.application.actions.PushGemAction.text=推送 Gem (&P)
action.org.jetbrains.plugins.ruby.gem.application.actions.PushGemAction.description=将 gem 推送到 gem 存储库
action.org.jetbrains.plugins.ruby.gem.application.actions.BuildGemAction.text=构建 Gem (&B)
action.org.jetbrains.plugins.ruby.gem.application.actions.BuildGemAction.description=为项目构建 gemfile
group.GEM_BUILD_ACTION.text=&Gem
action.org.jetbrains.plugins.ruby.console.LoadInIrbConsoleAction.text=将文件/所选内容加载到 IRB/Rails 控制台中
action.org.jetbrains.plugins.ruby.console.LoadInIrbConsoleAction.description=将当前 Ruby 文件或所选文本加载到正在运行的 IRB/Rails 控制台
action.org.jetbrains.plugins.ruby.ruby.run.configuration.nailgun.JRubyRunNailgunServerAction.text=运行 Nailgun 服务器...
action.org.jetbrains.plugins.ruby.ruby.run.configuration.nailgun.JRubyRunNailgunServerAction.description=运行 Nailgun 服务器以快速启动 JRuby
action.org.jetbrains.plugins.ruby.console.RunIRBConsoleAction.text=运行 IRB 控制台 (&I)...
action.org.jetbrains.plugins.ruby.console.RunIRBConsoleAction.description=允许快速运行 IRB 控制台
group.RUBY_TOOLS.text=Ruby 工具
group.ScriptsErb.text=Erb
action.InsertSession.text=插入 'session[\:user]'
action.InsertSession.description=插入 'session[\:user]'
action.InsertParams.text=插入 'params[\:id]'
action.InsertParams.description=插入 'params[\:id]'
group.ScriptsRails.text=Rails
action.InsertHashRocket.text=插入 ' \=> '
action.InsertHashRocket.description=插入 ' \=> '
group.ScriptsRuby.text=Ruby
group.ToolsExtensions.text=扩展
action.Rails.SwitchToModel.text=切换到模型
action.Rails.SwitchToModel.description=导航到相应的 Rails 模型
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToView.text=切换到视图
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToView.description=导航到相应的 Rails 视图
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToHelper.text=切换到帮助程序
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToHelper.description=导航到相应的 Rails 帮助程序
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToController.text=切换到控制器
action.org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToController.description=导航到相应的 Rails 控制器
group.RailsNavigateActions.text=Rails 导航
action.Ruby.GenerateAccessor.text=访问器
action.Ruby.GenerateAccessor.description=生成访问器
action.Ruby.GenerateWriter.text=写入器
action.Ruby.GenerateWriter.description=生成写入器
action.Ruby.GenerateReader.text=读取器
action.Ruby.GenerateReader.description=生成读取器
action.Ruby.GenerateConstructor.text=构造函数
action.Ruby.GenerateConstructor.description=生成构造函数
action.ToggleCamelSnakeCase.text=切换骆驼拼写法/蛇形拼写法
action.ToggleCamelSnakeCase.description=将采用骆驼拼写法的字符串转换为采用蛇形拼写法的字符串（反之亦然）。
configurable.RubyCodeCompletionConfigurable.display.name=Ruby
configurable.RubyEditorOptionsProvider.display.name=Ruby
configurable.RubyProjectStructureConfigurable.display.name=项目结构
settings.highlight.rdoc.and.ruby.syntax.in.comments=在注释中高亮显示 RDoc 和 Ruby 语法

ruby.regexp.language.name=RegExp
dialog.kind.module1=模块
dialog.kind.class1=类
dialog.kind.file=文件
error.hint.no.members.to.pull.up.found=未找到要向上拉取的成员
rake.before.run=rake.before.run
completion.advertisement.press.again.to.see.all.declared.names=再次按下以查看所有已声明的名称
error.hint.no.members.to.push.down.found=未找到要向下推送的成员
popup.title.select.interpreter.path=选择解释器路径
project.view.node.text.assets=资产